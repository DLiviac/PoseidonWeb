{"version":3,"sources":["app/components/UnitProcesses.js","app/components/GeneralReference.js","app/components/Pestle.js","app/components/CaseStudies.js","app/components/TreatmentTrains.js","app/components/WaterQualities.js","app/components/Learn.tsx","app/data/communityInfo.js","app/case/caseSlice.js","app/components/CommInfo.js","app/components/InputQQ.js","app/components/EndUse.js","app/components/CaseBox.js","app/theme/theme.js","app/components/Case.js","app/components/UserMenu.js","app/components/App.js","app/containers/App.tsx","app/store.js","app/i18n/i18n.js","app/i18n/translations.js","index.tsx"],"names":["UnitProcesses","getMuiTheme","theme","overrides","MUIDataTable","paper","boxShadow","this","props","t","classes","data","unitProcesses","columns","name","options","filter","i18next","language","label","customBodyRenderLite","dataIndex","columnTitles","className","chipContainer","map","column","index","Tooltip","title","Chip","key","size","recovery","color","style","opacity","setCellProps","minWidth","filterType","selectableRows","rowsPerPage","print","React","Component","withStyles","display","justifyContent","flexWrap","margin","withTranslation","useStyles","makeStyles","main","height","width","gridTemplateColumns","gridRowGap","justifyItems","paddingLeft","paddingRight","paddingTop","root","flexGrow","GeneralReference","useTranslation","Paper","elevation","padding","Typography","variant","Pestle","CaseStudies","TreatmentTrains","treatmentTrains","lang","maxWidth","UPList","unit_processes","up","nameEs","WaterQualities","waterQualities","qualities","waterQualityCategories","nameCol","noteCol","referenceCol","customBodyRender","value","toolbar","minHeight","textAlign","Learn","useState","menuPoint","setMenuPoint","square","Tabs","onChange","event","newValue","indicatorColor","textColor","centered","Tab","to","process","component","Link","exact","path","communityInfoData","id","currency","exchangeToUSD","landCost","electricityCost","personalCost","discountRate","caseSlice","createSlice","initialState","step","completedSteps","commInfo","countryID","inputQQ","category","qualityClass","quantity","reducers","next","state","previous","reset","setCountry","action","payload","setCurrency","setInputQualityCategory","setInputQualityClass","setInputQuantity","actions","CommInfo","useSelector","case","dispatch","useDispatch","countries","country","push","usdObj","Grid","container","direction","alignItems","spacing","item","xs","Autocomplete","getOptionLabel","option","getOptionSelected","disableClearable","renderInput","params","TextField","disabled","InputQQ","validQuantity","setValidQuantity","q","error","helperText","type","InputLabelProps","shrink","target","InputProps","endAdornment","InputAdornment","position","EndUse","count","backgroundColor","palette","background","default","CaseBox","caseState","colors","secondary","createMuiTheme","primary","button","marginRight","instructions","marginTop","marginBottom","Case","steps","Stepper","activeStep","labelProps","Step","StepLabel","length","Button","onClick","justify","getStepContent","includes","SimpleMenu","anchorEl","setAnchorEl","handleClose","handleChooseLanguage","console","log","changeLanguage","aria-controls","aria-haspopup","currentTarget","startIcon","endIcon","Menu","keepMounted","open","Boolean","onClose","MenuItem","App","AppBar","Toolbar","ThemeProvider","CssBaseline","configureStore","reducer","caseReducer","i18n","use","initReactI18next","init","resources","es","translation","Name","Turbidity","Recovery","reliability","waste","Search","Category","Title","Description","Note","Reference","Personalize","Finish","Next","Back","Country","Currency","day","lng","interpolation","escapeValue","Root","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c0bff3f.chunk.js","sourcesContent":["import React from 'react'\nimport MUIDataTable from 'mui-datatables'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\n\nimport unitProcesses from '../data/unitProcesses.json'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nconst styles = theme => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2\n    }\n  }\n})\n\nclass UnitProcesses extends React.Component {\n  getMuiTheme = theme => ({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  })\n\n  render() {\n    const { t, classes } = this.props\n\n    const data = unitProcesses\n    const lang = i18next.language\n\n    var nameCol = lang === 'en' ? 'name' : 'nameEs'\n\n    const columns = [\n      {\n        name: 'id',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: nameCol,\n        label: t('Name'),\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: 'pre',\n        label: t('Pollutant Removal Efficiencies [% removal]'),\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const columns = ['turbidity', 'tss', 'bod', 'cod', 'fc', 'tc']\n            const columnTitles = [t('Turbidity'), 'TSS', 'BOD', 'COD', 'FC', 'TC']\n\n            return (\n              <div className={classes.chipContainer}>\n                {columns.map((column, index) => (\n                  <Tooltip title={columnTitles[index]}>\n                    <Chip label={data[dataIndex][column]} key={index} size=\"small\" />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          }\n        }\n      },\n      {\n        name: 'recovery',\n        label: t('Recovery') + ' [%]',\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            return (\n              <div className={classes.chipContainer}>\n                <Chip label={data[dataIndex].recovery} size=\"small\" />\n              </div>\n            )\n          }\n        }\n      },\n      {\n        name: 'reliability',\n        label: t('Evaluation Criteria') + ' [0-3]',\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const columns = [\n              'reliability',\n              'ease_to_upgrade',\n              'adaptability_to_varying_flow',\n              'adaptability_to_varying_quality',\n              'ease_of_om',\n              'ease_of_construction',\n              'ease_of_demonstration',\n              'power_demand',\n              'chemical_demand',\n              'odor_generation',\n              'impact_on_ground_water',\n              'land_requirements',\n              'cost_of_treatment',\n              'waste'\n            ]\n            const columnTitles = [\n              t('reliability'),\n              t('ease to upgrade'),\n              t('adaptability to varying flow'),\n              t('adaptability to varying quality'),\n              t('ease of O & M'),\n              t('ease of construction'),\n              t('ease of demonstration'),\n              t('power demand'),\n              t('chemical demand'),\n              t('odor generation'),\n              t('impact on ground water'),\n              t('land requirements'),\n              t('cost of treatment'),\n              t('waste')\n            ]\n\n            return (\n              <div className={classes.chipContainer}>\n                {columns.map((column, index) => (\n                  <Tooltip title={columnTitles[index]}>\n                    <Chip\n                      label={data[dataIndex][column]}\n                      key={index}\n                      size=\"small\"\n                      color=\"primary\"\n                      style={{ opacity: 0.25 + data[dataIndex][column] / 4 }}\n                    />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          },\n          setCellProps: () => ({ style: { minWidth: '25vw' } })\n        }\n      },\n      {\n        name: 'useful_life',\n        label: t('Useful Life [yrs]'),\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            return (\n              <div className={classes.chipContainer}>\n                <Chip label={data[dataIndex].recovery} size=\"small\" />\n              </div>\n            )\n          }\n        }\n      }\n    ]\n\n    const options = {\n      filter: true,\n      filterType: 'dropdown',\n      selectableRows: 'none',\n      rowsPerPage: 20,\n      print: false\n    }\n\n    return (\n      <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable title={t('Unit Processes')} data={data} columns={columns} options={options} />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles)(withTranslation()(UnitProcesses))\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Paper from '@material-ui/core/Paper'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n}))\n\nexport default function GeneralReference() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Typography variant=\"h6\">{t('General Reference')}</Typography>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Paper from '@material-ui/core/Paper'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n}))\n\nexport default function Pestle() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Typography variant=\"h6\">{t('PESTLE')}</Typography>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Paper from '@material-ui/core/Paper'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n}))\n\nexport default function CaseStudies() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Typography variant=\"h6\">{t('Case Studies')}</Typography>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport MUIDataTable from 'mui-datatables'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\n\nimport treatmentTrains from '../data/treatmentTrains.json'\nimport unitProcesses from '../data/unitProcesses.json'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nconst styles = theme => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2\n    }\n  }\n})\n\nclass TreatmentTrains extends React.Component {\n  getMuiTheme = theme => ({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  })\n\n  render() {\n    const { t, classes } = this.props\n\n    const data = treatmentTrains\n\n    const lang = i18next.language\n\n    var categoryCol = lang === 'en' ? 'category' : 'categoryEs'\n    var titleCol = lang === 'en' ? 'title' : 'titleEs'\n    var descriptionCol = lang === 'en' ? 'description' : 'descriptionEs'\n    var caseStudyCol = lang === 'en' ? 'case_study' : 'case_studyEs'\n\n    const columns = [\n      {\n        name: 'id',\n        label: 'ID',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: categoryCol,\n        label: 'Category',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: titleCol,\n        label: 'Title',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: descriptionCol,\n        label: 'Description',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: caseStudyCol,\n        label: 'Case Study',\n        options: {\n          filter: true,\n          setCellProps: () => ({ style: { maxWidth: '20vw' } })\n        }\n      },\n      {\n        name: 'unit_processes',\n        label: 'Unit Processes',\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const UPList = data[dataIndex].unit_processes\n\n            return (\n              <div className={classes.chipContainer}>\n                {UPList.map((up, index) => (\n                  <Tooltip title={lang === 'en' ? unitProcesses[up - 1].name : unitProcesses[up - 1].nameEs}>\n                    <Chip label={up} key={index} size=\"small\" color=\"primary\" />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          },\n          setCellProps: () => ({ style: { minWidth: '15vw' } })\n        }\n      }\n    ]\n\n    const options = {\n      filter: true,\n      filterType: 'dropdown',\n      selectableRows: 'none',\n      rowsPerPage: 20,\n      print: false\n    }\n\n    return (\n      <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable title={t('Treatment Trains')} data={data} columns={columns} options={options} />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles)(withTranslation()(TreatmentTrains))\n","import React from 'react'\nimport MUIDataTable from 'mui-datatables'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\n\nimport waterQualities from '../data/waterQualities.json'\nimport waterQualityCategories from '../data/waterQualityCategories.json'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nconst styles = theme => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2\n    }\n  }\n})\n\nclass WaterQualities extends React.Component {\n  getMuiTheme = theme => ({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  })\n\n  render() {\n    const { t, classes } = this.props\n\n    const data = waterQualities\n    const qualities = waterQualityCategories\n\n    const lang = i18next.language\n\n    var nameCol = lang === 'en' ? 'name' : 'nameEs'\n    var noteCol = lang === 'en' ? 'note' : 'noteEs'\n    var referenceCol = lang === 'en' ? 'reference' : 'referenceEs'\n\n    const columns = [\n      {\n        name: 'id',\n        label: 'ID',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: 'category',\n        label: t('Category'),\n        options: {\n          filter: true,\n          customBodyRender: value => {\n            return <div>{lang === 'en' ? qualities[value].name : qualities[value].nameEs}</div>\n          }\n        }\n      },\n      {\n        name: nameCol,\n        label: t('Name'),\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: 'wqi',\n        label: t('Water Quality Indicators'),\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const columns = ['turbidity', 'tss', 'bod', 'cod', 'fc', 'tc']\n            const columnTitles = [t('Turbidity'), 'TSS', 'BOD', 'COD', 'FC', 'TC']\n\n            return (\n              <div className={classes.chipContainer}>\n                {columns.map((column, index) => (\n                  <Tooltip title={columnTitles[index]}>\n                    <Chip\n                      label={data[dataIndex][column] !== '-1' ? data[dataIndex][column] : '-'}\n                      key={index}\n                      size=\"small\"\n                    />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          },\n          setCellProps: () => ({ style: { minWidth: '20vw' } })\n        }\n      },\n      {\n        name: noteCol,\n        label: t('Note'),\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: referenceCol,\n        label: t('Reference'),\n        options: {\n          filter: true\n        }\n      }\n    ]\n\n    const options = {\n      filter: true,\n      filterType: 'dropdown',\n      selectableRows: 'none',\n      rowsPerPage: 20,\n      print: false\n    }\n\n    return (\n      <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable title={t('Water Qualities')} data={data} columns={columns} options={options} />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles)(withTranslation()(WaterQualities))\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport UnitProcesses from './UnitProcesses'\nimport GeneralReference from './GeneralReference'\nimport Pestle from './Pestle'\nimport CaseStudies from './CaseStudies'\n\nimport TreatmentTrains from './TreatmentTrains'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport { useTranslation } from 'react-i18next'\nimport WaterQualities from './WaterQualities'\n\nconst useStyles = makeStyles({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    justifyItems: 'center',\n    justifyContent: 'space-between'\n  },\n  main: {\n    display: 'grid',\n    minHeight: 'calc(100vh - 300px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 20\n  },\n  title: {\n    textAlign: 'left'\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n})\n\nexport const Learn = () => {\n  const { t } = useTranslation()\n\n  const classes = useStyles()\n\n  const [menuPoint, setMenuPoint] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setMenuPoint(newValue)\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Paper className={classes.root} square elevation={3}>\n          <Tabs value={menuPoint} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" centered>\n            <Tab label={t('General Reference')} to={`${process.env.PUBLIC_URL}/general`} component={Link} />\n            <Tab label={t('PESTLE')} to={`${process.env.PUBLIC_URL}/pestle`} component={Link} />\n            <Tab label={t('Water Qualities')} to={`${process.env.PUBLIC_URL}/waterqualities`} component={Link} />\n            <Tab label={t('Unit Processes')} to={`${process.env.PUBLIC_URL}/unitprocesses`} component={Link} />\n            <Tab label={t('Treatment Trains')} to={`${process.env.PUBLIC_URL}/treatmenttrains`} component={Link} />\n            <Tab label={t('Case Studies')} to={`${process.env.PUBLIC_URL}/casestudies`} component={Link} />\n          </Tabs>\n        </Paper>\n\n        <div className={classes.main}>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/learn`} component={GeneralReference} />\n            <Route path={`${process.env.PUBLIC_URL}/general`} component={GeneralReference} />\n            <Route path={`${process.env.PUBLIC_URL}/pestle`} component={Pestle} />\n            <Route path={`${process.env.PUBLIC_URL}/waterqualities`} component={WaterQualities} />\n            <Route path={`${process.env.PUBLIC_URL}/unitprocesses`} component={UnitProcesses} />\n            <Route path={`${process.env.PUBLIC_URL}/treatmenttrains`} component={TreatmentTrains} />\n            <Route path={`${process.env.PUBLIC_URL}/casestudies`} component={CaseStudies} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n","export const communityInfoData = [\n  {\n    id: 0 /* TODO */,\n    name: 'Peru',\n    nameEs: 'Perú',\n    currency: 'SOL',\n    exchangeToUSD: 3.75,\n    landCost: 10000,\n    electricityCost: 0.79,\n    personalCost: 2.5,\n    discountRate: 0.08\n  },\n  {\n    id: 1,\n    name: 'Argentina',\n    nameEs: 'Argentina',\n    currency: 'ARS',\n    exchangeToUSD: 3.07,\n    landCost: 15000,\n    electricityCost: 0.05,\n    personalCost: 20,\n    discountRate: 0.08\n  },\n  {\n    id: 2,\n    name: 'Chile',\n    nameEs: 'Chile',\n    currency: 'CLP',\n    exchangeToUSD: 525.51,\n    landCost: 10000,\n    electricityCost: 0.15,\n    personalCost: 20,\n    discountRate: 0.08\n  },\n\n  {\n    id: 3,\n    name: 'Brazil',\n    nameEs: 'Brasil',\n    currency: 'BRL',\n    exchangeToUSD: 2.41,\n    landCost: 12004,\n    electricityCost: 0.12,\n    personalCost: 20,\n    discountRate: 0.08\n  },\n  {\n    id: 4,\n    name: 'Mexico',\n    nameEs: 'México',\n    currency: 'MXN',\n    exchangeToUSD: 10.77,\n    landCost: 10000,\n    electricityCost: 0.13,\n    personalCost: 20,\n    discountRate: 0.08\n  },\n  {\n    id: 5,\n    name: 'Egypt',\n    nameEs: 'Egipto',\n    currency: 'EGP',\n    exchangeToUSD: 7.32,\n    landCost: 10000,\n    electricityCost: 0.02,\n    personalCost: 2.67,\n    discountRate: 0.19\n  },\n  {\n    id: 6,\n    name: 'Morocco',\n    nameEs: 'Marruecos',\n    currency: 'MAD',\n    exchangeToUSD: 11.72,\n    landCost: 10000,\n    electricityCost: 0.11,\n    personalCost: 2.11,\n    discountRate: 0.07\n  },\n  {\n    id: 7,\n    name: 'Tunisia',\n    nameEs: 'Túnez',\n    currency: 'TND',\n    exchangeToUSD: 1.73,\n    landCost: 10000,\n    electricityCost: 0.07,\n    personalCost: 8.15,\n    discountRate: 0.06\n  },\n  {\n    id: 8,\n    name: 'Vietnam',\n    nameEs: 'Vietnam',\n    currency: 'VND',\n    exchangeToUSD: 20418.07,\n    landCost: 10000,\n    electricityCost: 0.07,\n    personalCost: 183.66,\n    discountRate: 0.4\n  }\n]\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const caseSlice = createSlice({\n  name: 'case',\n  initialState: {\n    step: 0,\n    completedSteps: [null, null, null, null],\n    commInfo: {\n      countryID: null,\n      currency: null //0 is USD, 1 is local currency\n    },\n    inputQQ: {\n      category: null,\n      qualityClass: null,\n      quantity: null\n    }\n  },\n  reducers: {\n    next: state => {\n      state.step += 1\n    },\n    previous: state => {\n      state.step -= 1\n    },\n    reset: state => {\n      state.step = 0\n    },\n    setCountry: (state, action) => {\n      state.commInfo.countryID = action.payload\n      state.commInfo.currency = null\n      state.completedSteps[0] = null\n    },\n    setCurrency: (state, action) => {\n      action.payload === 1000 ? (state.commInfo.currency = 0) : (state.commInfo.currency = 1)\n      state.completedSteps[0] = 0\n    },\n    setInputQualityCategory: (state, action) => {\n      state.inputQQ.category = action.payload\n      state.inputQQ.qualityClass = null\n      state.completedSteps[1] = null\n    },\n    setInputQualityClass: (state, action) => {\n      state.inputQQ.qualityClass = action.payload\n      if (state.inputQQ.quantity !== null) {\n        state.completedSteps[1] = 1\n      }\n    },\n    setInputQuantity: (state, action) => {\n      state.inputQQ.quantity = action.payload\n      if (action.payload === null) {\n        state.completedSteps[1] = null\n      }\n      if (state.inputQQ.qualityClass !== null && action.payload !== null) {\n        state.completedSteps[1] = 1\n      }\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const {\n  next,\n  previous,\n  reset,\n  setCountry,\n  setCurrency,\n  setInputQualityCategory,\n  setInputQualityClass,\n  setInputQuantity\n} = caseSlice.actions\n\nexport default caseSlice.reducer\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { communityInfoData } from '../data/communityInfo'\nimport { setCountry, setCurrency } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nexport default function CommInfo() {\n  const commInfo = useSelector(state => state.case.commInfo)\n  const dispatch = useDispatch()\n  const countries = []\n  communityInfoData.map(country => {\n    return countries.push(country.name)\n  })\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  const usdObj = { id: 1000, currency: 'USD' }\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">{t('Community Information')}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Country')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={communityInfoData}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : '')}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setCountry(newValue.id))}\n          disableClearable\n          value={commInfo.countryID !== null ? communityInfoData[commInfo.countryID] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title={t('Information about countries')}>\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Currency')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={[communityInfoData[commInfo.countryID], usdObj]}\n          getOptionLabel={option => option.currency}\n          getOptionSelected={(option, value) => option.currency === value.currency}\n          onChange={(event, newValue) => dispatch(setCurrency(newValue.id))}\n          disableClearable\n          value={\n            commInfo.currency !== null\n              ? commInfo.currency === 0\n                ? usdObj\n                : communityInfoData[commInfo.countryID]\n              : null\n          }\n          disabled={commInfo.countryID === null ? true : false}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title={t('Information about currencies')}>\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport waterQualities from '../data/waterQualities.json'\nimport waterQualityCategories from '../data/waterQualityCategories.json'\nimport { setInputQualityCategory, setInputQualityClass, setInputQuantity } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\nimport InputAdornment from '@material-ui/core/InputAdornment'\n\nexport default function InputQQ() {\n  const inputQQ = useSelector(state => state.case.inputQQ)\n  const dispatch = useDispatch()\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  const [validQuantity, setValidQuantity] = React.useState(true)\n\n  const handleChangeQuantity = value => {\n    if (value >= 1 && value <= 1000000) {\n      setValidQuantity(true)\n      dispatch(setInputQuantity(value))\n    } else {\n      setValidQuantity(false)\n      dispatch(setInputQuantity(null))\n    }\n  }\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">{t('Input Quality & Quantity')}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Category')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={waterQualityCategories}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : '')}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setInputQualityCategory(newValue.id))}\n          disableClearable\n          value={inputQQ.category !== null ? waterQualityCategories[inputQQ.category] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about categories\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Water Quality Class')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"combo-box-demo\"\n          options={waterQualities.filter(q => q.category === inputQQ.category)}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : '')}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setInputQualityClass(newValue.id))}\n          disableClearable\n          value={inputQQ.qualityClass !== null ? waterQualities[inputQQ.qualityClass] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n          disabled={inputQQ.category === null ? true : false}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about water quality classes\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Average Quantity')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          error={!validQuantity}\n          helperText={!validQuantity ? t('Value must be between 1 and 1 million') : ' '}\n          id=\"standard-number\"\n          type=\"number\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          disabled={inputQQ.qualityClass === null ? true : false}\n          onChange={event => handleChangeQuantity(event.target.value)}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">m&sup3;/{t('day')}</InputAdornment>\n          }}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about amounts\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n    </Grid>\n  )\n}\n","import { Typography } from '@material-ui/core'\nimport React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport default function EndUse() {\n  const count = useSelector(state => state.step)\n\n  return <Typography>Step {count}</Typography>\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Chip from '@material-ui/core/Chip'\nimport Paper from '@material-ui/core/Paper'\nimport { Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nimport { communityInfoData } from '../data/communityInfo'\nimport waterQualities from '../data/waterQualities.json'\nimport waterQualityCategories from '../data/waterQualityCategories.json'\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    backgroundColor: theme.palette.background.default,\n    padding: 10\n  }\n}))\n\nexport default function CaseBox() {\n  const classes = useStyles()\n\n  const caseState = useSelector(state => state.case)\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  return (\n    <Paper className={classes.paper} elevation={0}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">{t('Case Overview')}</Typography>\n        </Grid>\n\n        <Grid item container xs={12} spacing={1} alignItems=\"center\">\n          <Grid item>\n            <Chip label=\"1\" color=\"primary\" size=\"small\" />\n          </Grid>\n          <Grid item xs={10}>\n            <Typography>{t('Community Information')}</Typography>\n          </Grid>\n          {caseState.commInfo.countryID !== null ? (\n            <>\n              <Grid item xs={6}>\n                <Typography>{t('Country')}:</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography>\n                  {lang === 'en'\n                    ? communityInfoData[caseState.commInfo.countryID].name\n                    : communityInfoData[caseState.commInfo.countryID].nameEs}\n                </Typography>\n              </Grid>\n            </>\n          ) : (\n            <div />\n          )}\n          {caseState.commInfo.currency !== null ? (\n            <>\n              <Grid item xs={6}>\n                <Typography>{t('Currency')}:</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography>\n                  {caseState.commInfo.currency === 0 ? 'USD' : communityInfoData[caseState.commInfo.countryID].currency}\n                </Typography>\n              </Grid>\n            </>\n          ) : (\n            <div />\n          )}\n          <Grid item>\n            <Chip label=\"2\" color=\"primary\" size=\"small\" />\n          </Grid>\n          <Grid item xs={10}>\n            <Typography>{t('Input Quality & Quantity')}</Typography>\n          </Grid>\n          {caseState.inputQQ.category !== null ? (\n            <>\n              <Grid item xs={6} alignItems=\"flex-start\">\n                <Typography>{t('Category')}:</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography>\n                  {lang === 'en'\n                    ? waterQualityCategories[caseState.inputQQ.category].name\n                    : waterQualityCategories[caseState.inputQQ.category].nameEs}\n                </Typography>\n              </Grid>\n            </>\n          ) : (\n            <div />\n          )}\n          {caseState.inputQQ.qualityClass !== null ? (\n            <>\n              <Grid item xs={6} alignItems=\"flex-start\">\n                <Typography>{t('Quality Class')}:</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography>\n                  {lang === 'en'\n                    ? waterQualities[caseState.inputQQ.qualityClass].name\n                    : waterQualities[caseState.inputQQ.qualityClass].nameEs}\n                </Typography>\n              </Grid>\n            </>\n          ) : (\n            <div />\n          )}\n          {caseState.inputQQ.quantity !== null ? (\n            <>\n              <Grid item xs={6} alignItems=\"flex-start\">\n                <Typography>{t('Average Quantity')}:</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography>\n                  {caseState.inputQQ.quantity}m&sup3;/{t('day')}\n                </Typography>\n              </Grid>\n            </>\n          ) : (\n            <div />\n          )}\n          <Grid item>\n            <Chip label=\"3\" color=\"primary\" size=\"small\" />\n          </Grid>\n          <Grid item xs={10}>\n            <Typography>{t('End Use')}</Typography>\n          </Grid>\n          <Grid item>\n            <Chip label=\"4\" color=\"primary\" size=\"small\" />\n          </Grid>\n          <Grid item xs={10}>\n            <Typography>{t('Personalize')}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n","import { createMuiTheme } from '@material-ui/core'\n\nconst colors = {\n  main: '#00838f'\n}\n\nconst secondary = {\n  main: '#ef6c00'\n}\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary\n  }\n})\n\nexport const lightTheme = createMuiTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary,\n    type: 'light'\n  }\n})\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary,\n    type: 'dark'\n  }\n})\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport CommInfo from './CommInfo'\nimport InputQQ from './InputQQ'\nimport EndUse from './EndUse'\nimport CaseBox from './CaseBox'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { next, previous, reset } from '../case/caseSlice'\nimport { theme } from '../theme/theme'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    justifyItems: 'center',\n    justifyContent: 'space-between'\n  },\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  step: {\n    minHeight: 'calc(100vh - 300px)'\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}))\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <CommInfo />\n    case 1:\n      return <InputQQ />\n    case 2:\n      return <EndUse />\n    case 3:\n      return 'Personalize'\n    default:\n      return 'Unknown step'\n  }\n}\n\nexport const Case = () => {\n  const { t } = useTranslation()\n\n  const getSteps = () => {\n    return [t('Community Information'), t('Input Quality & Quantity'), t('End Use'), t('Personalize')]\n  }\n\n  const count = useSelector(state => state.case.step)\n  const completedSteps = useSelector(state => state.case.completedSteps)\n\n  const dispatch = useDispatch()\n\n  const classes = useStyles()\n  const steps = getSteps()\n\n  const handleReset = () => {\n    dispatch(reset())\n  }\n\n  return (\n    <div className=\"App\">\n      <Paper className={classes.root} square elevation={3}>\n        <Stepper activeStep={count}>\n          {steps.map((label, index) => {\n            const stepProps = {}\n            const labelProps = {}\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n              </Step>\n            )\n          })}\n        </Stepper>\n      </Paper>\n\n      <div className={classes.main}>\n        <Paper elevation={0} style={{ padding: 10 }}>\n          <Grid container spacing={3}>\n            <Grid item container xs={8}>\n              {count === steps.length ? (\n                <div>\n                  <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\n                  <Button onClick={handleReset} className={classes.button}>\n                    Reset\n                  </Button>\n                </div>\n              ) : (\n                <Grid\n                  item\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  alignItems=\"center\"\n                  className={classes.step}\n                >\n                  {getStepContent(count)}\n\n                  <div style={{ paddingTop: theme.spacing(2) }}>\n                    <Button disabled={count === 0} onClick={() => dispatch(previous())} className={classes.button}>\n                      {t('Back')}\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => dispatch(next())}\n                      className={classes.button}\n                      disabled={completedSteps.includes(count) ? false : true}\n                    >\n                      {count === steps.length - 1 ? t('Finish') : t('Next')}\n                    </Button>\n                  </div>\n                </Grid>\n              )}\n            </Grid>\n            <Grid item xs={4}>\n              <CaseBox />\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TranslateIcon from '@material-ui/icons/Translate'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport i18next from 'i18next'\n\nexport default function SimpleMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleChooseLanguage = lang => {\n    console.log(lang)\n    i18next.changeLanguage(lang)\n    handleClose()\n  }\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        startIcon={<TranslateIcon />}\n        endIcon={<ExpandMoreIcon />}\n        color=\"inherit\"\n      >\n        {i18next.language === 'en' ? 'English' : 'Español'}\n      </Button>\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n        <MenuItem value=\"en\" onClick={() => handleChooseLanguage('en')}>\n          English\n        </MenuItem>\n        <MenuItem value=\"es\" onClick={() => handleChooseLanguage('es')}>\n          Español\n        </MenuItem>\n      </Menu>\n    </div>\n  )\n}\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport MenuBookIcon from '@material-ui/icons/MenuBook'\nimport AddBoxIcon from '@material-ui/icons/AddBox'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport { Learn } from './Learn'\nimport { Case } from './Case'\nimport UserMenu from './UserMenu'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    justifyItems: 'center',\n    justifyContent: 'space-between'\n  },\n  title: {\n    textAlign: 'left'\n  },\n  root: {\n    flexGrow: 1\n  }\n})\n\nexport const App = () => {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <AppBar elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            <div>\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                component={Link}\n                to={`${process.env.PUBLIC_URL}/learn`}\n                startIcon={<MenuBookIcon />}\n                color=\"inherit\"\n              >\n                {t('Learn')}\n              </Button>\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                component={Link}\n                to={`${process.env.PUBLIC_URL}/case`}\n                startIcon={<AddBoxIcon />}\n                color=\"inherit\"\n              >\n                {t('New Case')}\n              </Button>\n            </div>\n            <div className={classes.title}>\n              <Typography>Poseidon Web alpha 0.1</Typography>\n            </div>\n            <div style={{ width: 150 }}>\n              <UserMenu />\n            </div>\n            {/* <ThemeSwitch /> */}\n          </Toolbar>\n        </AppBar>\n\n        <div>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`} component={Learn} />\n            <Route path={`${process.env.PUBLIC_URL}/learn`} component={Learn} />\n            <Route path={`${process.env.PUBLIC_URL}/case`} component={Case} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n","import { App as AppComponent } from '../components/App'\nimport * as React from 'react'\nimport { CssBaseline, MuiThemeProvider as ThemeProvider } from '@material-ui/core'\nimport { theme } from '../theme/theme'\n\nexport const App = () => {\n  // This is the only place we need to access the theme via our own model\n  // From here on, it is safe and convenient to use the `useTheme` hook\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppComponent />\n    </ThemeProvider>\n  )\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport caseReducer from './case/caseSlice'\n\nexport default configureStore({\n  reducer: {\n    case: caseReducer\n  }\n})\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport { resources } from './translations'\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'en', // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n    // if you're using a language detector, do not define the lng option\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  })\n\nexport default i18n\n","export const resources = {\n  es: {\n    translation: {\n      Learn: 'Aprendar',\n      'New Case': 'Nuevo caso',\n\n      'General Reference': 'Referencia general',\n      'Unit Processes': 'Procesos unitarios',\n      'Treatment Trains': 'Trenes de tratamiento',\n      'Case Studies': 'Estudios de caso',\n      'Water Qualities': 'Cualidades del agua',\n\n      Name: 'Nombre',\n      'Pollutant Removal Efficiencies [% removal]': '',\n      Turbidity: 'Turbidez',\n      Recovery: 'Recuperación',\n      'Evaluation Criteria': 'Criterios de evaluación',\n      'Useful Life [yrs]': 'Vida útil [años]',\n\n      reliability: 'fiabilidad',\n      'ease to upgrade': '',\n      'adaptability to varying flow': '',\n      'adaptability to varying quality': '',\n      'ease of O & M': '',\n      'ease of construction': '',\n      'ease of demonstration': '',\n      'power demand': '',\n      'chemical demand': '',\n      'odor generation': '',\n      'impact on ground water': '',\n      'land requirements': '',\n      'cost of treatment': '',\n      waste: '',\n\n      Search: 'Buscar en',\n      'Download CSV': 'Descargar CSV',\n      'View Columns': 'Ver columnas',\n      'Filter Table': 'Tabla de filtros',\n      'Rows per page': 'Rows per page',\n\n      Category: 'Categoría',\n      Title: 'Título',\n      Description: 'Descripción',\n      'Case Study': 'Estudio de caso',\n      Note: 'Nota',\n      Reference: 'Referencia',\n\n      'Community Information': 'Información Comunitaria',\n      'Input Quality & Quantity': 'Introducir la Calidad y la Cantidad',\n      'End Use': 'Uso Final',\n      Personalize: 'Personalizar',\n      Finish: 'Terminar',\n      Next: 'Próximo',\n      Back: 'Volver',\n      'Case Overview': 'Resumen del Caso',\n      'Select the Country': 'selectar país',\n      'Select the Currency': 'selectar moneda',\n      Country: 'País',\n      Currency: 'Moneda',\n      'Select the Category': 'Seleccione la categoría',\n      'Water Quality Class': 'Clase de calidad de agua',\n      'Average Quantity': 'Average Quantity',\n      day: 'día',\n\n      'Water Quality Indicators': 'Indicadores de calidad del agua',\n      'Value must be between 1 and 1 million': 'El valor debe estar entre 1 y 1 millón'\n    }\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app'\nimport store from './app/store'\nimport { Provider } from 'react-redux'\nimport './app/i18n/i18n'\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n"],"sourceRoot":""}