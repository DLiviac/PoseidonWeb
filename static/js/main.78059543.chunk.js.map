{"version":3,"sources":["app/data/model.tsx","app/components/UnitProcesses.tsx","app/images/Calculations.png","app/components/GeneralReference.js","app/components/Pestle.js","app/components/CaseStudies.tsx","app/components/TreatmentTrains.tsx","app/i18n/textLabels.js","app/components/WaterQualities.js","app/components/Learn.tsx","app/hooks.tsx","app/case/caseSlice.tsx","app/components/CommInfo.tsx","app/components/Bar.tsx","app/components/InputQuality.tsx","app/case/CalculateSolutions.ts","app/case/findSuitableTreatments.ts","app/components/SolutionsBox.tsx","app/components/EndUse.tsx","app/components/Quantity.js","app/components/CaseSummary.tsx","app/theme/theme.js","app/components/Case.tsx","app/components/Results.js","app/components/UserMenu.js","app/images/PoseidonWebIcon.tsx","app/components/App.js","app/containers/App.tsx","app/store.tsx","app/i18n/i18n.js","app/i18n/translations.js","index.tsx"],"names":["unitProcesses","unitProcessesJSON","treatmentTrains","treatmentTrainsJSON","waterQualityCategories","waterQualityCategoriesJSON","waterQualities","waterQualitiesJSON","waterQualityFactors","waterQualityFactorsJSON","evaluationCriteria","evaluationCriteriaJSON","useStyles","makeStyles","theme","chipContainer","display","justifyContent","flexWrap","margin","chip","backgroundColor","palette","primary","main","UnitProcesses","muiTheme","createTheme","overrides","MUIDataTable","paper","boxShadow","classes","t","useTranslation","data","lang","i18next","language","columns","name","options","filter","label","customBodyRenderLite","dataIndex","className","map","f","index","key","Tooltip","title","nameLong","nameLongEs","Chip","size","recovery","c","value","color","style","opacity","setCellProps","minWidth","useful_life","filterType","selectableRows","rowsPerPage","print","height","width","gridTemplateColumns","gridRowGap","justifyItems","paddingLeft","paddingRight","paddingTop","root","flexGrow","img","maxWidth","maxHeight","GeneralReference","Paper","elevation","padding","Grid","container","direction","alignItems","spacing","item","xs","Typography","variant","src","Calculations","alt","Pestle","CaseStudies","TreatmentTrains","titleCol","descriptionCol","caseStudyCol","UPList","unit_processes","up","nameEs","fixedHeader","TextLabels","textLabels","body","noMatch","toolTip","columnHeaderTooltip","column","pagination","next","previous","displayRows","toolbar","search","downloadCsv","viewColumns","filterTable","all","reset","titleAria","selectedRows","text","delete","deleteAria","WaterQualities","getMuiTheme","this","props","qualities","nameCol","noteCol","referenceCol","customBodyRender","columnTitles","React","Component","withStyles","withTranslation","minHeight","textAlign","Learn","useState","menuPoint","setMenuPoint","square","Tabs","onChange","event","newValue","indicatorColor","textColor","centered","Tab","to","process","component","Link","exact","path","useAppSelector","useSelector","initialState","step","completedSteps","commInfo","countryID","currency","inputQuality","category","endUse","quantity","solution","noneNeeded","noneAvailable","sortByCost","solutions","Array","fill","treatmentTrain","undefined","rating","capex","annualizedCapex","annualizedCapexPerCubic","caseSlice","createSlice","reducers","state","setStep","action","payload","setCountry","setCurrency","setInputQualityCategory","qualityClass","setInputQualityClass","setEndUseQualityCategory","setEndUseQualityClass","setQuantity","amount","distance","setDistance","setHeightDifference","heightDifference","setSolutionNoneNeeded","resetSolutions","setSolutionNoneAvailable","setSolutions","forEach","treatment","console","log","setSolutionSortByCost","actions","CommInfo","case","dispatch","useDispatch","countries","communityInfo","country","push","usdObj","id","Autocomplete","getOptionLabel","option","getOptionSelected","disableClearable","renderInput","params","TextField","disabled","Math","round","landCost","exchangeToUSD","electricityCost","personalCost","discountRate","Bar","useTheme","outputColor","Number","input","output","error","success","legend","average","factor","unit","toUpperCase","indexBy","keys","top","right","bottom","left","valueScale","type","indexScale","colors","d","colorBy","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legendPosition","legendOffset","labelSkipHeight","toExponential","toLocaleString","getLabel","enableGridY","animate","tooltip","background","String","InputQuality","waterQualityCategoryOptions","waterQualityOptions","q","xmlns","CalculateSolutions","enduse","byCost","treatmentFactors","qualityFactor","outputQualities","topThreeTreatments","suitableTreatmentTrain","outputQualityPerFactor","outputCostPerFactor","construction_cost","land_requirements","energy_requirements","labor_requirements","other_om","treatmentFactor","TfKey","UpKey","outputQualityStep","unitProcess","criteria","Object","costFactor","UpKeyB","UpKeyC","outputCostStep","turbidity","tss","bod","cod","fc","tc","constructionCost","landRequirements","energyRequirements","laborRequirements","otherOM","length","findSuitableTreatments","sort","a","b","slice","default","SolutionsBox","caseState","endUseQuality","Switch","checked","categoryEs","isNaN","EndUse","Quantity","validQuantity","setValidQuantity","validDistance","setValidDistance","validHeightDifference","setValidHeightDifference","marginBottom","helperText","InputLabelProps","shrink","target","isInteger","InputProps","endAdornment","InputAdornment","position","fullWidth","CaseSummary","fontSize","secondary","button","marginRight","instructions","marginTop","CustomConnector","alignSelf","line","borderRadius","StepConnector","getStepContent","Case","count","steps","Stepper","activeStep","connector","Step","StepLabel","Button","onClick","includes","Results","solutionsState","titleEs","SimpleMenu","anchorEl","setAnchorEl","handleClose","handleChooseLanguage","changeLanguage","currentTarget","startIcon","endIcon","Menu","keepMounted","open","Boolean","onClose","MenuItem","drop","stroke","strokeMiterlimit","p","strokeWidth","PoseidonWebIcon","viewBox","App","AppBar","Toolbar","ThemeProvider","CssBaseline","store","configureStore","reducer","caseReducer","i18n","use","initReactI18next","init","resources","es","translation","Name","Turbidity","Recovery","Search","Category","Title","Description","Note","Reference","Personalize","Finish","Next","Back","Country","Currency","day","Input","Rating","Cost","Ranking","lng","interpolation","escapeValue","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.78059543.chunk.js","sourcesContent":["import waterQualitiesJSON from '../data/waterQualities.json'\nimport waterQualityCategoriesJSON from '../data/waterQualityCategories.json'\nimport waterQualityFactorsJSON from '../data/waterQualityFactors.json'\nimport unitProcessesJSON from '../data/unitProcesses.json'\nimport treatmentTrainsJSON from '../data/treatmentTrains.json'\nimport communityInfosJSON from '../data/communityInfo.json'\nimport evaluationCriteriaJSON from '../data/evaluationCriteria.json'\n\nexport interface communityInfo {\n    id: number;\n    name: string;\n    nameEs: string;\n    currency: string;\n    exchangeToUSD: number;\n    landCost: number;\n    electricityCost: number;\n    personalCost: number;\n    discountRate: number;\n}\n\nexport const communityInfos: ReadonlyArray<communityInfo> = communityInfosJSON as ReadonlyArray<communityInfo>\n\nexport interface UnitProcess {\n    id: number;\n    name: string;\n    nameEs: string;\n    turbidity: number;\n    tss: number;\n    bod: number;\n    cod: number;\n    fc: number;\n    tc: number;\n    construction_cost_b: number;\n    construction_cost_c: number;\n    land_requirements_b: number;\n    land_requirements_c: number;\n    energy_requirements_b: number;\n    energy_requirements_c: number;\n    labor_requirements_b: number;\n    labor_requirements_c: number;\n    other_om_b: number;\n    other_om_c: number;\n    recovery: number;\n    reliability: number;\n    ease_to_upgrade: number;\n    adaptability_to_varying_flow: number;\n    adaptability_to_varying_quality: number;\n    ease_of_om: number;\n    ease_of_construction: number;\n    ease_of_demonstration: number;\n    power_demand: number;\n    chemical_demand: number;\n    odor_generation: number;\n    impact_on_ground_water: number;\n    land_requirements: number;\n    cost_of_treatment: number;\n    waste: number;\n    useful_life: number;\n}\n\nexport const unitProcesses: Array<UnitProcess> = unitProcessesJSON as Array<UnitProcess>\n\nexport interface TreatmentTrain {\n    id: number;\n    title: string;\n    titleEs: string;\n    category: string;\n    categoryEs: string;\n    description: string;\n    descriptionEs: string;\n    case_study: string;\n    case_studyEs: string;\n    unit_processes?: (number)[] | null;\n}\n\nexport const treatmentTrains: Array<TreatmentTrain> = treatmentTrainsJSON as Array<TreatmentTrain>\n\nexport interface WaterQualityCategory {\n    id: number;\n    name: string;\n    nameEs: string;\n    input: boolean;\n}\n\nexport const waterQualityCategories: Array<WaterQualityCategory> = waterQualityCategoriesJSON as Array<WaterQualityCategory>\n\nexport interface WaterQuality {\n    id: number;\n    name: string;\n    nameEs: string;\n    category: number;\n    turbidity: number;\n    tss: number;\n    bod: number;\n    cod: number;\n    tn: number;\n    tp: number;\n    fc: number;\n    tc: number;\n    tds: number;\n    nitrate: number;\n    toc: number;\n    virus: number;\n    helminths: number;\n    note: string;\n    noteEs: string;\n    reference: string;\n    referenceEs: string;\n}\n\nexport const waterQualities: ReadonlyArray<WaterQuality> = waterQualitiesJSON as ReadonlyArray<WaterQuality>\n\nexport interface WaterQualityFactor {\n    name: string;\n    nameLong: string;\n    nameLongEs: string;\n    unit: string;\n}\n\nexport const waterQualityFactors: ReadonlyArray<WaterQualityFactor> = waterQualityFactorsJSON as ReadonlyArray<WaterQualityFactor>\n\nexport interface EvaluationCriterion {\n    name: string;\n    nameLong: string;\n    nameLongEs: string;\n}\n\nexport const evaluationCriteria: ReadonlyArray<EvaluationCriterion> = evaluationCriteriaJSON as ReadonlyArray<EvaluationCriterion>\n\nexport interface OutputQuality {\n    id: number,\n    treatmentTrain: number,\n    turbidity: number,\n    tss: number,\n    bod: number,\n    cod: number,\n    fc: number,\n    tc: number,\n    constructionCost: number,\n    landRequirements: number,\n    energyRequirements: number,\n    laborRequirements: number,\n    otherOM: number,\n    capex: number,\n    annualizedCapex: number,\n    annualizedCapexPerCubic: number,\n    rating: number\n}\n\nexport type QualityFactor = 'turbidity' | 'tss' | 'bod' | 'cod' | 'fc' | 'tc'","import MUIDataTable from 'mui-datatables'\nimport { MUIDataTableOptions } from 'mui-datatables'\nimport { makeStyles, MuiThemeProvider, Theme, createTheme } from '@material-ui/core/styles'\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\nimport { evaluationCriteria, UnitProcess, unitProcesses, waterQualityFactors } from '../data/model'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2,\n    },\n  },\n  chip: {\n    backgroundColor: theme.palette.primary.main,\n  },\n}))\n\nexport default function UnitProcesses() {\n  const muiTheme = createTheme({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none',\n        },\n      },\n    },\n  })\n\n  const classes = useStyles()\n\n  const { t } = useTranslation()\n\n  const data = unitProcesses\n  const lang = i18next.language\n\n  var nameCol = lang === 'en' ? 'name' : 'nameEs'\n\n  const columns = [\n    {\n      name: 'id',\n      options: {\n        filter: true,\n      },\n    },\n    {\n      name: nameCol,\n      label: t('Name'),\n      options: {\n        filter: true,\n      },\n    },\n    {\n      name: 'pre',\n      label: t('Pollutant Removal Efficiencies [% removal]'),\n      options: {\n        filter: false,\n        customBodyRenderLite: (dataIndex: number) => {\n          return (\n            <div className={classes.chipContainer}>\n              {waterQualityFactors.map((f, index) => {\n                const key = f.name as keyof UnitProcess\n\n                return (\n                  <Tooltip\n                    key={index}\n                    title={lang === 'en' ? waterQualityFactors[index].nameLong : waterQualityFactors[index].nameLongEs}\n                  >\n                    <Chip label={data[dataIndex][key]} key={index} size=\"small\" />\n                  </Tooltip>\n                )\n              })}\n            </div>\n          )\n        },\n      },\n    },\n    {\n      name: 'recovery',\n      label: t('Recovery') + ' [%]',\n      options: {\n        filter: false,\n        customBodyRenderLite: (dataIndex: number) => {\n          return (\n            <div className={classes.chipContainer}>\n              <Chip label={data[dataIndex].recovery} size=\"small\" />\n            </div>\n          )\n        },\n      },\n    },\n    {\n      name: 'reliability',\n      label: t('Evaluation Criteria') + ' [0-3]',\n      options: {\n        filter: false,\n        customBodyRenderLite: (dataIndex: number) => {\n          return (\n            <div className={classes.chipContainer}>\n              {evaluationCriteria.map((c, index) => {\n                const key = c.name as keyof UnitProcess\n                const value = data[dataIndex][key] as number\n\n                return (\n                  <Tooltip\n                    key={index}\n                    title={lang === 'en' ? evaluationCriteria[index].nameLong : evaluationCriteria[index].nameLongEs}\n                  >\n                    <Chip\n                      label={value}\n                      key={index}\n                      size=\"small\"\n                      color=\"primary\"\n                      className={classes.chip}\n                      style={{ opacity: 0.25 + value / 4 }}\n                    />\n                  </Tooltip>\n                )\n              })}\n            </div>\n          )\n        },\n        setCellProps: () => ({ style: { minWidth: '25vw' } }),\n      },\n    },\n    {\n      name: 'useful_life',\n      label: t('Useful Life [yrs]'),\n      options: {\n        filter: false,\n        customBodyRenderLite: (dataIndex: number) => {\n          return (\n            <div className={classes.chipContainer}>\n              <Chip label={data[dataIndex].useful_life} size=\"small\" />\n            </div>\n          )\n        },\n      },\n    },\n  ]\n\n  const options: MUIDataTableOptions = {\n    filter: true,\n    filterType: 'dropdown',\n    selectableRows: 'none',\n    rowsPerPage: 15,\n    print: false,\n  }\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <MUIDataTable title={t('Unit Processes')} data={data} columns={columns} options={options} />\n    </MuiThemeProvider>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/Calculations.5eb5970b.png\";","import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { useTranslation } from 'react-i18next'\nimport Calculations from '../images/Calculations.png'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%'\n  }\n}))\n\nexport default function GeneralReference() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Grid container direction=\"row\" alignItems=\"flex-start\" spacing={3}>\n          <Grid item xs={12}>\n            <Typography variant=\"h6\">{t('General Reference')}</Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography>\n              {t(\n                'This Poseidon – Web on-line application is an update of the already existing developed Poseidon application based on Microsoft Excel. The scope of the new application is to enhance the older version to a more user-friendly decision support tool, that supports pre-feasibility studies and aims at promoting water reuse and building capacities in the field. The tool developed currently encompasses 37-unit processes combined into 70 benchmark treatment trains. It also contains information on water quality standards and typical wastewater qualities. It estimates the removal performances for 12 parameters and the lifecycle costs including distribution.'\n              )}\n            </Typography>\n            <Typography>\n              {t(\n                'The tool and all underlying data are open access and under continuous development. The underlying systemic approach of the tool makes it intuitive also for users with limited prior knowledge in the field to identify most adequate solutions based on a multi-criteria assessment. This should help to promote water reuse and spearhead initiates for more detailed feasibility and design commissioning for implementation of water reuse schemes.'\n              )}\n            </Typography>\n            <Typography>\n              {t(\n                'The figure on the right shows a simplified flow of how the application works and how the calculations are being made.'\n              )}\n            </Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <img className={classes.img} src={Calculations} alt={t('Overview of application and calculations')} />\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Paper from '@material-ui/core/Paper'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n}))\n\nexport default function Pestle() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Typography variant=\"h6\">{t('PESTLE')}</Typography>\n      </Paper>\n    </div>\n  )\n}\n","import makeStyles from '@material-ui/core/styles/makeStyles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50,\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60,\n  },\n}))\n\nexport default function CaseStudies() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Typography variant=\"h6\">{t('Case Studies')}</Typography>\n      </Paper>\n    </div>\n  )\n}\n","import MUIDataTable from 'mui-datatables'\nimport { MUIDataTableOptions } from 'mui-datatables'\nimport { makeStyles, MuiThemeProvider, Theme, createTheme } from '@material-ui/core/styles'\n\nimport { unitProcesses, treatmentTrains } from '../data/model'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2,\n    },\n  },\n  chip: {\n    backgroundColor: theme.palette.primary.main,\n  },\n}))\n\nexport default function TreatmentTrains() {\n  const muiTheme = createTheme({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none',\n        },\n      },\n    },\n  })\n\n  const classes = useStyles()\n\n  const { t } = useTranslation()\n\n  const data = treatmentTrains\n\n  const lang = i18next.language\n\n  var categoryCol = lang === 'en' ? 'category' : 'categoryEs'\n  var titleCol = lang === 'en' ? 'title' : 'titleEs'\n  var descriptionCol = lang === 'en' ? 'description' : 'descriptionEs'\n  var caseStudyCol = lang === 'en' ? 'case_study' : 'case_studyEs'\n\n  const columns = [\n    {\n      name: 'id',\n      label: 'ID',\n      options: {\n        filter: true,\n      },\n    },\n    {\n      name: categoryCol,\n      label: t('Category'),\n      options: {\n        filter: true,\n      },\n    },\n    {\n      name: titleCol,\n      label: t('Title'),\n      options: {\n        filter: true,\n      },\n    },\n    {\n      name: descriptionCol,\n      label: t('Description'),\n      options: {\n        filter: true,\n      },\n    },\n    {\n      name: caseStudyCol,\n      label: t('Case Study'),\n      options: {\n        filter: true,\n        setCellProps: () => ({ style: { maxWidth: '20vw' } }),\n      },\n    },\n    {\n      name: 'unit_processes',\n      label: t('Unit Processes'),\n      options: {\n        filter: false,\n        customBodyRenderLite: (dataIndex: number) => {\n          const UPList = data[dataIndex].unit_processes\n\n          return (\n            <div className={classes.chipContainer}>\n              {UPList &&\n                UPList.map((up, index) => (\n                  <Tooltip key={index} title={lang === 'en' ? unitProcesses[up].name : unitProcesses[up].nameEs}>\n                    <Chip label={up} key={index} size=\"small\" color=\"primary\" className={classes.chip} />\n                  </Tooltip>\n                ))}\n            </div>\n          )\n        },\n        setCellProps: () => ({ style: { minWidth: '15vw' } }),\n      },\n    },\n  ]\n\n  const options: MUIDataTableOptions = {\n    filter: true,\n    filterType: 'dropdown',\n    selectableRows: 'none',\n    rowsPerPage: 15,\n    print: false,\n    fixedHeader: true,\n  }\n\n  return (\n    <MuiThemeProvider theme={muiTheme}>\n      <MUIDataTable title={t('Treatment Trains')} data={data} columns={columns} options={options} />\n    </MuiThemeProvider>\n  )\n}\n","import { useTranslation } from 'react-i18next'\n\nexport default function TextLabels() {\n\n    const { t } = useTranslation()\n\n    const textLabels = {\n        textLabels: {\n            body: {\n                noMatch: t('Sorry, no matching records found'),\n                toolTip: t('Sort'),\n                columnHeaderTooltip: column => `Sort for ${column.label}`\n            },\n            pagination: {\n                next: \"Next Page\",\n                previous: \"Previous Page\",\n                rowsPerPage: \"Rows per page:\",\n                displayRows: \"of\",\n            },\n            toolbar: {\n                search: \"Search\",\n                downloadCsv: \"Download CSV\",\n                print: \"Print\",\n                viewColumns: \"View Columns\",\n                filterTable: \"Filter Table\",\n            },\n            filter: {\n                all: \"All\",\n                title: \"FILTERS\",\n                reset: \"RESET\",\n            },\n            viewColumns: {\n                title: \"Show Columns\",\n                titleAria: \"Show/Hide Table Columns\",\n            },\n            selectedRows: {\n                text: \"row(s) selected\",\n                delete: \"Delete\",\n                deleteAria: \"Delete Selected Rows\",\n            },\n        }\n    }\n\n    return (\n        textLabels\n    )\n} \n\n\n","import React from 'react'\nimport MUIDataTable from 'mui-datatables'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\n\nimport waterQualities from '../data/waterQualities.json'\nimport waterQualityCategories from '../data/waterQualityCategories.json'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withTranslation } from 'react-i18next'\nimport i18next from 'i18next'\nimport textLabels from '../i18n/textLabels'\n\n  const styles = theme => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2\n    }\n  }\n})\n\nclass WaterQualities extends React.Component {\n  getMuiTheme = theme => ({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  })\n\n  render() {\n    const { t, classes } = this.props\n\n    const data = waterQualities\n    const qualities = waterQualityCategories\n\n    const lang = i18next.language\n\n    var nameCol = lang === 'en' ? 'name' : 'nameEs'\n    var noteCol = lang === 'en' ? 'note' : 'noteEs'\n    var referenceCol = lang === 'en' ? 'reference' : 'referenceEs'\n\n    const columns = [\n      {\n        name: 'id',\n        label: 'ID',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: 'category',\n        label: t('Category'),\n        options: {\n          filter: true,\n          customBodyRender: value => {\n            return <div>{lang === 'en' ? qualities[value].name : qualities[value].nameEs}</div>\n          }\n        }\n      },\n      {\n        name: nameCol,\n        label: t('Name'),\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: 'wqi',\n        label: t('Water Quality Indicators'),\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const columns = ['turbidity', 'tss', 'bod', 'cod', 'fc', 'tc']\n            const columnTitles = [t('Turbidity'), 'TSS', 'BOD', 'COD', 'FC', 'TC']\n\n            return (\n              <div className={classes.chipContainer}>\n                {columns.map((column, index) => (\n                  <Tooltip key={index} title={columnTitles[index]}>\n                    <Chip\n                      label={data[dataIndex][column] !== '-1' ? data[dataIndex][column] : '-'}\n                      key={index}\n                      size=\"small\"\n                    />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          },\n          setCellProps: () => ({ style: { minWidth: '20vw' } })\n        }\n      },\n      {\n        name: noteCol,\n        label: t('Note'),\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: referenceCol,\n        label: t('Reference'),\n        options: {\n          filter: true\n        }\n      }\n    ]\n\n    const options = {\n      filter: true,\n      filterType: 'dropdown',\n      selectableRows: 'none',\n      rowsPerPage: 15,\n      print: false,\n      textLabels: {textLabels}\n    }\n\n    return (\n      <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable title={t('Water Qualities')} data={data} columns={columns} options={options} />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles)(withTranslation()(WaterQualities))\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport UnitProcesses from './UnitProcesses'\nimport GeneralReference from './GeneralReference'\nimport Pestle from './Pestle'\nimport CaseStudies from './CaseStudies'\n\nimport TreatmentTrains from './TreatmentTrains'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport { useTranslation } from 'react-i18next'\nimport WaterQualities from './WaterQualities'\n\nconst useStyles = makeStyles({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    justifyItems: 'center',\n    justifyContent: 'space-between'\n  },\n  main: {\n    display: 'grid',\n    minHeight: 'calc(100vh - 300px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 20\n  },\n  title: {\n    textAlign: 'left'\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n})\n\nexport const Learn = () => {\n  const { t } = useTranslation()\n\n  const classes = useStyles()\n\n  const [menuPoint, setMenuPoint] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setMenuPoint(newValue)\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Paper className={classes.root} square elevation={3}>\n          <Tabs value={menuPoint} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" centered>\n            <Tab label={t('General Reference')} to={`${process.env.PUBLIC_URL}/general`} component={Link} />\n            {/* <Tab label={t('PESTLE')} to={`${process.env.PUBLIC_URL}/pestle`} component={Link} /> */}\n            <Tab label={t('Water Qualities')} to={`${process.env.PUBLIC_URL}/waterqualities`} component={Link} />\n            <Tab label={t('Unit Processes')} to={`${process.env.PUBLIC_URL}/unitprocesses`} component={Link} />\n            <Tab label={t('Treatment Trains')} to={`${process.env.PUBLIC_URL}/treatmenttrains`} component={Link} />\n            {/* <Tab label={t('Case Studies')} to={`${process.env.PUBLIC_URL}/casestudies`} component={Link} /> */}\n          </Tabs>\n        </Paper>\n\n        <div className={classes.main}>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`} component={GeneralReference} />\n            <Route path={`${process.env.PUBLIC_URL}/learn`} component={GeneralReference} />\n            <Route path={`${process.env.PUBLIC_URL}/general`} component={GeneralReference} />\n            <Route path={`${process.env.PUBLIC_URL}/pestle`} component={Pestle} />\n            <Route path={`${process.env.PUBLIC_URL}/waterqualities`} component={WaterQualities} />\n            <Route path={`${process.env.PUBLIC_URL}/unitprocesses`} component={UnitProcesses} />\n            <Route path={`${process.env.PUBLIC_URL}/treatmenttrains`} component={TreatmentTrains} />\n            <Route path={`${process.env.PUBLIC_URL}/casestudies`} component={CaseStudies} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector","import { createSlice } from '@reduxjs/toolkit'\nimport type { RootState } from '../store'\n\ntype CaseState = {\n  step: number,\n  completedSteps: [number, number, number, number],\n  commInfo: {\n    countryID: number,\n    currency: number //0 is USD, 1 is local currency\n  },\n  inputQuality: {\n    category: number,\n    qualityClass?: number\n  },\n  endUse: {\n    category: number,\n    qualityClass?: number\n  },\n  quantity: {\n    amount?: number,\n    distance?: number,\n    heightDifference?: number\n  },\n  solution: {\n    noneNeeded: boolean,\n    noneAvailable: boolean,\n    sortByCost: boolean\n  },\n  solutions: \n    {\n      treatmentTrain?: number,\n      rating?: number,\n      capex?: number,\n      annualizedCapex?: number,\n      annualizedCapexPerCubic?: number\n    }[]\n}\n\nconst initialState: CaseState = {\n  step: 0,\n  completedSteps: [0, 0, 0, 0],\n  commInfo: { countryID: 0, currency: 1 }, //Peru is the defaul country with local currency\n  inputQuality: { category: 28 }, //Peru is the default category\n  endUse: { category: 29 },\n  quantity: {},\n  solution: {\n    noneNeeded: true,\n    noneAvailable: false,\n    sortByCost: false\n  },\n  solutions:\n    Array(3).fill({\n    treatmentTrain: undefined,\n    rating: undefined,\n    capex: undefined,\n    annualizedCapex: undefined,\n    annualizedCapexPerCubic: undefined\n  })\n}\n\nexport const caseSlice = createSlice({\n  name: 'case',\n  initialState,\n  reducers: {\n    next: state => {\n      state.step += 1\n    },\n    previous: state => {\n      state.step -= 1\n    },\n    reset: state => {\n      state.step = 0\n    },\n    setStep: (state, action) => {\n      state.step = action.payload\n    },\n    setCountry: (state, action) => {\n      state.commInfo.countryID = action.payload\n      state.commInfo.currency = 0\n      state.completedSteps[0] = 0\n    },\n    setCurrency: (state, action) => {\n      action.payload === 1000 ? (state.commInfo.currency = 0) : (state.commInfo.currency = 1)\n      state.completedSteps[0] = 0\n    },\n    setInputQualityCategory: (state, action) => {\n      state.inputQuality.category = action.payload\n      state.inputQuality.qualityClass = undefined\n      state.completedSteps[1] = 0\n    },\n    setInputQualityClass: (state, action) => {\n      state.inputQuality.qualityClass = action.payload\n      state.completedSteps[1] = 1\n    },\n    setEndUseQualityCategory: (state, action) => {\n      state.endUse.category = action.payload\n      state.endUse.qualityClass = undefined\n      state.completedSteps[2] = 0\n    },\n    setEndUseQualityClass: (state, action) => {\n      state.endUse.qualityClass = action.payload\n      state.completedSteps[2] = 2\n    },\n    setQuantity: (state, action) => {\n      state.quantity.amount = action.payload\n      if (action.payload === null) {\n        state.completedSteps[3] = 0\n      }\n      if (action.payload !== null && state.quantity.distance !== null) {\n        state.completedSteps[3] = 3\n      }\n    },\n    setDistance: (state, action) => {\n      state.quantity.distance = action.payload\n      if (action.payload === null) {\n        state.completedSteps[3] = 0\n      }\n      if (action.payload !== null && state.quantity.amount !== null) {\n        state.completedSteps[3] = 3\n      }\n    },\n    setHeightDifference: (state, action) => {\n      state.quantity.heightDifference = action.payload\n    },\n    setSolutionNoneNeeded: (state, action) => {\n      state.solution.noneNeeded = action.payload\n    },\n    resetSolutions: state => {\n      state.solution.noneNeeded = false\n      state.solution.noneAvailable = false\n    },\n    setSolutionNoneAvailable: (state, action) => {\n      state.solution.noneAvailable = action.payload\n    },\n    setSolutions: (state, action) => {\n      action.payload.forEach((treatment: any, index: any) => {\n        console.log(action.payload)\n        state.solutions[index].treatmentTrain = treatment.treatmentTrain\n        state.solutions[index].rating = treatment.rating\n        state.solutions[index].capex = treatment.capex\n        state.solutions[index].annualizedCapex = treatment.annualizedCapex\n        state.solutions[index].annualizedCapexPerCubic = treatment.annualizedCapexPerCubic\n      })\n    },\n    setSolutionSortByCost: (state, action) => {\n      state.solution.sortByCost = action.payload\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const {\n  next,\n  previous,\n  reset,\n  setStep,\n  setCountry,\n  setCurrency,\n  setInputQualityCategory,\n  setInputQualityClass,\n  setEndUseQualityCategory,\n  setEndUseQualityClass,\n  setQuantity,\n  setDistance,\n  setHeightDifference,\n  resetSolutions,\n  setSolutionNoneNeeded,\n  setSolutionNoneAvailable,\n  setSolutions,\n  setSolutionSortByCost\n} = caseSlice.actions\n\nexport const selectCase = (state: RootState) => state.case\n\n\nexport default caseSlice.reducer\n","import { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useDispatch } from 'react-redux'\nimport { useAppSelector } from '../hooks'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport communityInfo from '../data/communityInfo.json'\nimport { setCountry, setCurrency } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nexport default function CommInfo() {\n  const commInfo = useAppSelector(state => state.case.commInfo)\n  const dispatch = useDispatch()\n  const countries = []\n  communityInfo.map(country => {\n    return countries.push(country.name)\n  })\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  const usdObj = { id: 1000, currency: 'USD' }\n\n  if (commInfo.countryID === undefined) {\n    dispatch(setCountry(0))\n  }\n  if (commInfo.currency === undefined) {\n    dispatch(setCurrency(0))\n  }\n\n  console.log(commInfo, communityInfo)\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">{t('Community Information')}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Country')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"country\"\n          options={communityInfo}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : undefined! )}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setCountry(newValue.id))}\n          disableClearable\n          value={commInfo.countryID !== undefined ? communityInfo[commInfo.countryID] : undefined}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title={t<string>('Information about countries')}>\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Currency')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"currency\"\n          options={[communityInfo[commInfo.countryID], usdObj]}\n          getOptionLabel={option => option.currency}\n          getOptionSelected={(option, value) => option.currency === value.currency}\n          onChange={(event, newValue) => dispatch(setCurrency(newValue.id))}\n          disableClearable\n          value={\n            commInfo.currency !== null ? (commInfo.currency === 0 ? usdObj : communityInfo[commInfo.countryID]) : undefined\n          }\n          disabled={commInfo.countryID === null ? true : false}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title={t<string>('Information about currencies')}>\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      {commInfo.currency !== null ? (\n        <>\n          <Grid item xs={4}>\n            <Typography>{t('Land Cost')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>\n              {commInfo.currency === 0\n                ? Math.round(communityInfo[commInfo.countryID].landCost * 100) / 100 + ' ' + usdObj.currency\n                : Math.round(\n                    communityInfo[commInfo.countryID].landCost * communityInfo[commInfo.countryID].exchangeToUSD * 100\n                  ) /\n                    100 +\n                  ' ' +\n                  communityInfo[commInfo.countryID].currency}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography>{t('Electricity Cost')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>\n              {commInfo.currency === 0\n                ? Math.round(communityInfo[commInfo.countryID].electricityCost * 100) / 100 + ' ' + usdObj.currency\n                : Math.round(\n                    communityInfo[commInfo.countryID].electricityCost *\n                      communityInfo[commInfo.countryID].exchangeToUSD *\n                      100\n                  ) /\n                    100 +\n                  ' ' +\n                  communityInfo[commInfo.countryID].currency}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography>{t('Personal Cost')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>\n              {commInfo.currency === 0\n                ? Math.round(communityInfo[commInfo.countryID].personalCost * 100) / 100 + ' ' + usdObj.currency\n                : Math.round(\n                    communityInfo[commInfo.countryID].personalCost *\n                      communityInfo[commInfo.countryID].exchangeToUSD *\n                      100\n                  ) /\n                    100 +\n                  ' ' +\n                  communityInfo[commInfo.countryID].currency}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography>{t('Discount Rate')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>{communityInfo[commInfo.countryID].discountRate * 100 + '%'}</Typography>\n          </Grid>\n        </>\n      ) : (\n        <div />\n      )}\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { useTheme } from '@material-ui/core/styles'\nimport { Paper } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nexport const Bar = (props: { input?: any; output?: any; factor: string; average?: any; unit: string }) => {\n  const theme = useTheme()\n  const { t } = useTranslation()\n\n  var outputColor = theme.palette.primary.main\n\n  if (Number(props.input) > Number(props.output)) {\n    outputColor = theme.palette.error.main\n  } else {\n    outputColor = theme.palette.success.main\n  }\n\n  const average = {\n    name: t('avg. input'),\n    [props.factor]: props.average,\n    color: theme.palette.action.disabled,\n  }\n\n  const input = {\n    name: t('input'),\n    [props.factor]: props.input,\n    color: theme.palette.primary.main,\n  }\n\n  const output = {\n    name: t('output'),\n    [props.factor]: props.output,\n    color: outputColor,\n  }\n\n  let data = []\n\n  if (props.input) {\n    data.push(input)\n  }\n\n  if (props.output) {\n    data.push(output)\n  }\n\n  if (props.average & props.input) {\n    data.push(average)\n  }\n\n  var legend\n\n  if (props.factor === 'turbidity') {\n    legend = t('Turbidity') + ' [' + props.unit + ']'\n  } else {\n    legend = props.factor.toUpperCase() + ' [' + props.unit + ']'\n  }\n\n  function getLabel(d: any) {\n    if (props.factor === 'tc' || props.factor === 'fc') {\n      return Number(d.value).toExponential().toLocaleString() //TODO: Supposed to be toLocaleString('de-CH')\n    } else {\n      return Number(d.value).toLocaleString('de-CH')\n    }\n  }\n\n  return (\n    <div style={{ height: 250, width: 100 }}>\n      <ResponsiveBar\n        data={data}\n        indexBy=\"name\"\n        keys={[props.factor]}\n        margin={{ top: 10, right: 0, bottom: 50, left: 0 }}\n        padding={0.3}\n        valueScale={{ type: 'linear' }}\n        indexScale={{ type: 'band', round: true }}\n        colors={(d) => d.data.color}\n        colorBy=\"id\"\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: legend,\n          legendPosition: 'middle',\n          legendOffset: 40,\n        }}\n        labelSkipHeight={36}\n        label={(d) => getLabel(d)}\n        enableGridY={false}\n        animate={true}\n        //motionStiffness={115}\n        //motionDamping={15}\n        tooltip={({ id, value }) => (\n          <Paper\n            style={{\n              padding: 12,\n              background: '#fff',\n            }}\n          >\n            {String(id).toUpperCase() + ':'} <br /> {Number(value).toLocaleString('de-CH') + ' [' + props.unit + ']'}\n          </Paper>\n        )}\n      />\n    </div>\n  )\n}\n","import { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useDispatch } from 'react-redux'\nimport { useAppSelector } from '../hooks'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { waterQualityCategories, waterQualities, WaterQuality, waterQualityFactors } from '../data/model'\nimport { setInputQualityCategory, setInputQualityClass } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\nimport { Bar } from './Bar'\nimport { useTheme } from '@material-ui/core/styles'\n\nexport default function InputQuality() {\n  const inputQuality = useAppSelector(state => state.case.inputQuality)\n  const dispatch = useDispatch()\n\n  const theme = useTheme()\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  const waterQualityCategoryOptions = waterQualityCategories.filter(category => category.input)\n\n  const waterQualityOptions = waterQualities.filter(q => q.category === inputQuality.category)\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">{t('Input Quality')}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Category')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"category\"\n          options={waterQualityCategoryOptions}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : undefined! )}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setInputQualityCategory(newValue.id))}\n          disableClearable\n          value={inputQuality.category !== null ? waterQualityCategories[inputQuality.category] : undefined }\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about categories\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Water Quality Class')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"quality\"\n          options={waterQualityOptions}\n          getOptionLabel={option => (option ? (option.name ? (lang === 'en' ? option.name : option.nameEs) : undefined! ) : \"workaround\")}\n          getOptionSelected={(option, value) => option !== 0 && value !== 0 && option.name === value.name}\n          onChange={(event, newValue) => newValue && dispatch(setInputQualityClass(newValue.id))}\n          disableClearable\n          value={inputQuality.qualityClass && waterQualities[inputQuality.qualityClass]}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n          disabled={inputQuality.category === null ? true : false}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about water quality classes\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n\n      <Grid item container xs={12} justifyContent=\"space-evenly\" alignItems=\"center\">\n        {inputQuality.qualityClass !== undefined\n          ? waterQualityFactors.map((f, index) => {\n              const key = f.name as keyof WaterQuality\n\n              return (\n                <div key={index} style={{ width: 'calc(1/6*80%' }}>\n                  <Bar\n                    factor={f.name}\n                    unit={f.unit}\n                    input={\n                      inputQuality.qualityClass === undefined\n                        ? null\n                        : waterQualities[inputQuality.qualityClass][key] < 0\n                        ? null\n                        : waterQualities[inputQuality.qualityClass][key]\n                    }\n                    average={waterQualities[0][key]}\n                  />\n                </div>\n              )\n            })\n          : waterQualityFactors.map((f, index) => {\n              return (\n                <div key={index} style={{ width: 'calc(1/6*80%' }}>\n                  <Bar factor={f.name} unit={f.unit} />\n                </div>\n              )\n            })}\n      </Grid>\n\n      <Grid item container xs={12} justifyContent=\"space-evenly\" alignItems=\"flex-start\">\n        <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justifyContent=\"flex-start\">\n          <Grid item>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\">\n              <g>\n                <rect width=\"20\" height=\"20\" fill={theme.palette.primary.main}></rect>\n              </g>\n            </svg>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"caption\">{t('Input')}</Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justifyContent=\"flex-start\">\n          <Grid item>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\">\n              <g>\n                <rect width=\"20\" height=\"20\" fill={theme.palette.action.disabled}></rect>\n              </g>\n            </svg>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"caption\">{t('Average Input')}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import { useDispatch } from 'react-redux'\nimport { setSolutionNoneAvailable, setSolutionNoneNeeded, setSolutions } from './caseSlice'\nimport { WaterQuality } from '../data/model'\nimport { OutputQuality } from '../data/model'\nimport { QualityFactor } from '../data/model'\n\nimport { findSuitableTreatments } from './findSuitableTreatments'\n\nexport default function CalculateSolutions(input: WaterQuality, enduse: WaterQuality, amount: number, byCost: boolean) {\n  const dispatch = useDispatch()\n\n  const qualityFactors = ['turbidity', 'tss', 'bod', 'cod', 'fc', 'tc']\n\n  let treatmentFactors: QualityFactor[] = []\n\n  qualityFactors.forEach(qualityFactor=> {\n    const key = qualityFactor as keyof WaterQuality\n    if ((input[key] > enduse[key]) && (enduse[key] !== -1)) {\n      dispatch(setSolutionNoneNeeded(false))\n      treatmentFactors.push(qualityFactor as QualityFactor)\n    }\n  })\n\n  function findTopTreatments(outputQualities: OutputQuality[]) {\n    let topThreeTreatments\n\n    if (byCost) {\n      topThreeTreatments = outputQualities.sort((a, b) => a.annualizedCapex - b.annualizedCapex).slice(0, 3)\n    } else {\n      topThreeTreatments = outputQualities.sort((a, b) => b.rating - a.rating).slice(0, 3)\n    }\n\n    return topThreeTreatments\n  }\n\n  const topThreeTreatments = findTopTreatments(findSuitableTreatments(input, enduse, treatmentFactors, amount))\n\n  if (topThreeTreatments.length === 0) { //TODO: !\n    dispatch(setSolutionNoneAvailable(true))\n  } else {\n    dispatch(setSolutionNoneAvailable(false))\n  }\n\n  console.log(topThreeTreatments)\n\n  dispatch(setSolutions(topThreeTreatments))\n}","import { UnitProcess, unitProcesses } from '../data/model'\nimport { treatmentTrains } from '../data/model'\nimport { WaterQuality } from '../data/model'\nimport { OutputQuality } from '../data/model'\nimport { evaluationCriteria } from '../data/model'\nimport { QualityFactor }  from '../data/model'\n\ninterface CostFactors {\n    [key: string]: number\n    construction_cost: number\n    land_requirements: number\n    energy_requirements: number\n    labor_requirements: number \n    other_om: number\n}\n\nexport function findSuitableTreatments(input: WaterQuality, endUse: WaterQuality, treatmentFactors: QualityFactor[], amount: number) {\n    \n    let outputQualities: OutputQuality[] = []\n\n    treatmentTrains.forEach((treatmentTrain, index) => {\n      let suitableTreatmentTrain = true\n      const outputQualityPerFactor: { [x: string]: number } = {} //TODO: Type\n      let outputCostPerFactor: CostFactors = {\n          construction_cost: 0,\n          land_requirements: 0,\n          energy_requirements: 0,\n          labor_requirements: 0,\n          other_om: 0\n      }\n\n      let rating = 0\n\n      treatmentFactors.forEach((treatmentFactor) => {\n        const TfKey = treatmentFactor as keyof WaterQuality\n        const UpKey = treatmentFactor as keyof UnitProcess\n        let outputQualityStep = Number(input[TfKey])\n\n        treatmentTrain.unit_processes!.forEach(unitProcess => { //TODO: !\n          outputQualityStep =\n            outputQualityStep - (outputQualityStep * Number(unitProcesses[unitProcess][UpKey])) / 100\n        })\n\n        console.log(outputQualityPerFactor, TfKey, outputQualityStep)\n\n        outputQualityPerFactor[TfKey] = outputQualityStep\n\n        if (outputQualityPerFactor[treatmentFactor] > Number(endUse[TfKey])) {\n          suitableTreatmentTrain = false\n        }\n      })\n\n      let annualizedCapex = 0\n\n      treatmentTrain.unit_processes!.forEach(unitProcess => { //TODO: !\n        evaluationCriteria.forEach(criteria => {\n          const UpKey = criteria.name as keyof UnitProcess\n          rating = rating + Number(unitProcesses[unitProcess][UpKey])\n        })\n\n        if (amount !== null) {\n            Object.keys(outputCostPerFactor).forEach((costFactor: keyof CostFactors) => { //TODO\n            const UpKeyB = costFactor + '_b' as keyof UnitProcess\n            const UpKeyC = costFactor + '_c' as keyof UnitProcess\n            let outputCostStep = 0\n            outputCostStep =\n              outputCostStep +\n              Number(unitProcesses[unitProcess][UpKeyC]) *\n                Number(amount) ** Number(unitProcesses[unitProcess][UpKeyB])\n\n            outputCostPerFactor[costFactor] = outputCostPerFactor[costFactor] + outputCostStep\n\n            if (costFactor === 'construction_cost') {\n              annualizedCapex += (outputCostStep * 1.39 * 1.27) / unitProcesses[unitProcess]['useful_life']\n            }\n          })\n        }\n      })\n\n      if (suitableTreatmentTrain && outputQualityPerFactor! && outputCostPerFactor!) { //TODO: !\n        outputQualities.push({\n          id: index,\n          treatmentTrain: treatmentTrain.id,\n          turbidity: outputQualityPerFactor['turbidity'],\n          tss: outputQualityPerFactor['tss'],\n          bod: outputQualityPerFactor['bod'],\n          cod: outputQualityPerFactor['cod'],\n          fc: outputQualityPerFactor['fc'],\n          tc: outputQualityPerFactor['tc'],\n          constructionCost: outputCostPerFactor['construction_cost'],\n          landRequirements: outputCostPerFactor['land_requirements'],\n          energyRequirements: outputCostPerFactor['energy_requirements'],\n          laborRequirements: outputCostPerFactor['labor_requirements'],\n          otherOM: outputCostPerFactor['other_om'],\n\n          capex: outputCostPerFactor['construction_cost'] * 1.39 * 1.27,\n          annualizedCapex: annualizedCapex,\n          annualizedCapexPerCubic: annualizedCapex / amount,\n\n          rating: rating / treatmentTrain.unit_processes!.length / evaluationCriteria.length //TODO: !\n        })\n      }\n    })\n\n    return outputQualities!\n  }","import { useDispatch } from 'react-redux'\nimport { useAppSelector } from '../hooks'\n\nimport Grid from '@material-ui/core/Grid'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Chip from '@material-ui/core/Chip'\nimport Paper from '@material-ui/core/Paper'\nimport { Typography } from '@material-ui/core'\nimport Switch from '@material-ui/core/Switch'\n\nimport { useTranslation } from 'react-i18next'\nimport treatmentTrains from '../data/treatmentTrains.json'\nimport communityInfo from '../data/communityInfo.json'\nimport unitProcesses from '../data/unitProcesses.json'\nimport { waterQualities } from '../data/model'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport CalculateSolutions from '../case/CalculateSolutions'\n\nimport { setSolutionSortByCost } from '../case/caseSlice'\n\nimport i18next from 'i18next'\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    backgroundColor: theme.palette.background.default,\n    padding: 10\n  }\n}))\n\nexport default function SolutionsBox() {\n  const classes = useStyles()\n\n  const caseState = useAppSelector(state => state.case)\n\n  const dispatch = useDispatch()\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  const commInfo = caseState.commInfo\n  const inputQuality = waterQualities[caseState.inputQuality.qualityClass!]\n  const endUseQuality = waterQualities[caseState.endUse.qualityClass!]\n  const amount = caseState.quantity.amount\n  const sortByCost = caseState.solution.sortByCost\n\n  CalculateSolutions(inputQuality, endUseQuality, amount!, sortByCost) //TODO: !\n\n  const handleChangePriority = () => {\n    dispatch(setSolutionSortByCost(!sortByCost))\n  }\n\n  return (\n    <Paper className={classes.paper} elevation={0}>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">{t('Solutions')}</Typography>\n          <Typography variant=\"caption\">\n            {caseState.solution.noneNeeded\n              ? t(\n                  'Based on your input, no treatment is needed because the input quality is better than the end use quality.'\n                )\n              : caseState.solution.noneAvailable\n              ? t('Based on your input, theres no possible solution')\n              : t('Based on your input, the following treatment trains are best suited for the case.')}\n          </Typography>\n        </Grid>\n\n        {!caseState.solution.noneNeeded && !caseState.solution.noneAvailable ? (\n          <Grid item container xs={12} spacing={1} alignItems=\"center\">\n\n            {caseState.solutions[0].capex !== 0 ?\n            <Grid item container alignItems=\"center\" spacing={1} xs={12} justifyContent=\"space-between\">\n              <Grid item>\n                <Typography>{t('Sort by cost')}</Typography>\n              </Grid>\n              <Grid item>\n                <Switch color=\"primary\" checked={sortByCost} onChange={event => handleChangePriority()} />\n              </Grid>\n            </Grid> : null }\n\n            {caseState.solutions.map((solution, index) => (\n              <>\n                <Grid item container justifyContent=\"flex-start\" spacing={1} xs={12}>\n                  <Grid item>\n                    <Chip label={index + 1} color=\"secondary\" size=\"small\" />\n                  </Grid>\n                  <Grid item>\n                    <Typography>\n                      {lang === 'en'\n                        ? treatmentTrains[solution.treatmentTrain!].category //TODO: !\n                        : treatmentTrains[solution.treatmentTrain!].categoryEs} {/* TODO: ! */}\n                    </Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography>{t('Case Study')}:</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography>{treatmentTrains[solution.treatmentTrain!].title}</Typography> {/* TODO: ! */}\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography>{t('Rating')}:</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography>{Math.round(((solution.rating! * 10) / 3) * 1000) / 1000}</Typography> {/* TODO: ! */}\n                </Grid>\n                {!isNaN(solution.annualizedCapexPerCubic!) ? ( //TODO: !\n                  <>\n                    <Grid item xs={6}>\n                      <Typography>{t('Yearly Capital Expenditures')}:</Typography>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <Typography>\n                        {commInfo.currency === 0 ? (\n                          <>{Math.round(solution.annualizedCapexPerCubic! * 1000).toLocaleString('de-CH')} $/m&sup3;</> //TODO: !\n                        ) : (\n                          <>\n                            {(\n                              communityInfo[commInfo.countryID].exchangeToUSD *\n                              Math.round(solution.annualizedCapexPerCubic! * 1000) //TODO: !\n                            ).toLocaleString('de-CH')}{' '}\n                            {communityInfo[commInfo.countryID].currency}/m&sup3;\n                          </>\n                        )}\n                      </Typography>\n                    </Grid>\n                  </>\n                ) : (\n                  <div />\n                )}\n                <Grid item xs={6}>\n                  <Typography>{t('Unit Processes')}:</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  {treatmentTrains[solution.treatmentTrain!].unit_processes.map((up, index) => ( //TODO: !\n                    <Tooltip key={index} title={lang === 'en' ? unitProcesses[up].name : unitProcesses[up].nameEs}>\n                      <Chip label={up} key={index} size=\"small\" color=\"primary\" style={{ margin: 2 }} />\n                    </Tooltip>\n                  ))}\n                </Grid>\n              </>\n            ))}\n          </Grid>\n        ) : (\n          <div />\n        )}\n      </Grid>\n    </Paper>\n  )\n}\n","import { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useDispatch } from 'react-redux'\nimport { useAppSelector } from '../hooks'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { setEndUseQualityCategory, setEndUseQualityClass } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\nimport { Bar } from './Bar'\nimport { useTheme } from '@material-ui/core/styles'\nimport SolutionsBox from './SolutionsBox'\n\nimport { waterQualityCategories, waterQualities, WaterQuality, waterQualityFactors } from '../data/model'\n\nexport default function EndUse() {\n  const endUse = useAppSelector(state => state.case.endUse)\n  const inputQuality = useAppSelector(state => state.case.inputQuality)\n\n  const dispatch = useDispatch()\n\n  const theme = useTheme()\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  if (endUse.category === null) {\n    dispatch(setEndUseQualityCategory(29))\n  }\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"flex-start\" spacing={3}>\n      <Grid item container xs={endUse.qualityClass !== undefined ? 8 : 12} direction=\"row\" alignItems=\"center\" spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">{t('End Use')}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography>{t('Select the Category')}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Autocomplete\n            id=\"category\"\n            options={waterQualityCategories.filter(category => category.input === false)}\n            getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : '')}\n            getOptionSelected={(option, value) => option.name === value.name}\n            onChange={(event, newValue) => dispatch(setEndUseQualityCategory(newValue.id))}\n            disableClearable\n            value={endUse.category ? waterQualityCategories[endUse.category] : undefined}\n            renderInput={params => <TextField {...params} variant=\"outlined\" />}\n          />\n        </Grid>\n        <Grid item xs={2} style={{ textAlign: 'center' }}>\n          <Tooltip title=\"Information about categories\">\n            <Chip label=\"?\" size=\"small\" />\n          </Tooltip>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography>{t('Water Quality Class')}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <Autocomplete\n            id=\"quality\"\n            options={waterQualities.filter(q => q.category === endUse.category)}  \n            getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : '')}\n            getOptionSelected={(option, value) => option.name === value.name}\n            onChange={(event, newValue) => dispatch(setEndUseQualityClass(newValue.id))}\n            disableClearable\n            value={endUse.qualityClass ? waterQualities[endUse.qualityClass] : undefined}\n            renderInput={params => <TextField {...params} variant=\"outlined\" />}\n            disabled={endUse.category === null ? true : false}\n          />\n        </Grid>\n        <Grid item xs={2} style={{ textAlign: 'center' }}>\n          <Tooltip title=\"Information about water quality classes\">\n            <Chip label=\"?\" size=\"small\" />\n          </Tooltip>\n        </Grid>\n\n        <Grid item container xs={12} justifyContent=\"space-evenly\" alignItems=\"center\">\n          {endUse.qualityClass !== undefined\n            ? waterQualityFactors.map((f, index) => {\n              const key = f.name as keyof WaterQuality\n\n                return (\n                  <div key={index} style={{ width: 'calc(1/6*80%' }}>\n                    <Bar\n                      factor={f.name}\n                      unit={f.unit}\n                      input={\n                        inputQuality.qualityClass === undefined\n                          ? null\n                          : waterQualities[inputQuality.qualityClass][key] < 0\n                          ? null\n                          : waterQualities[inputQuality.qualityClass][key]\n                      }\n                      output={\n                        endUse.qualityClass === undefined\n                        ? null\n                        : waterQualities[endUse.qualityClass][key] < 0\n                        ? null\n                        : waterQualities[endUse.qualityClass][key]\n                      }\n                    />\n                  </div>\n                )\n              })\n            : waterQualityFactors.map((f, index) => {\n              const key = f.name as keyof WaterQuality\n\n                return (\n                  <div key={index} style={{ width: 'calc(1/6*80%' }}>\n                    <Bar\n                      factor={f.name}\n                      unit={f.unit}\n                      input={\n                        inputQuality.qualityClass === undefined\n                          ? null\n                          : waterQualities[inputQuality.qualityClass][key] < 0\n                          ? null\n                          : waterQualities[inputQuality.qualityClass][key]\n                      }\n                    />\n                  </div>\n                )\n              })}\n        </Grid>\n\n        <Grid item container xs={12} justifyContent=\"space-evenly\" alignItems=\"flex-start\">\n          <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justifyContent=\"flex-start\">\n            <Grid item>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\">\n                <g>\n                  <rect width=\"20\" height=\"20\" fill={theme.palette.primary.main}></rect>\n                </g>\n              </svg>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"caption\">{t('Input')}</Typography>\n            </Grid>\n          </Grid>\n\n          <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justifyContent=\"flex-start\">\n            <Grid item>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\">\n                <g>\n                  <rect width=\"20\" height=\"20\" fill={theme.palette.error.main}></rect>\n                </g>\n              </svg>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"caption\">{t('End use, needs treatment')}</Typography>\n            </Grid>\n          </Grid>\n\n          <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justifyContent=\"flex-start\">\n            <Grid item>\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\">\n                <g>\n                  <rect width=\"20\" height=\"20\" fill={theme.palette.success.main}></rect>\n                </g>\n              </svg>\n            </Grid>\n            <Grid item>\n              <Typography variant=\"caption\">{t('End use, no treatment needed')}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n      {endUse.qualityClass !== undefined ? (\n        <Grid item container xs={4}>\n          <SolutionsBox />\n        </Grid>\n      ) : (\n        <div />\n      )}\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setQuantity, setDistance, setHeightDifference } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport SolutionsBox from './SolutionsBox.tsx'\n\nexport default function Quantity() {\n  const quantity = useSelector(state => state.case.quantity)\n  const dispatch = useDispatch()\n\n  const { t } = useTranslation()\n\n  const [validQuantity, setValidQuantity] = React.useState(true)\n\n  const handleChangeQuantity = value => {\n    if (value >= 1 && value <= 20000 && Number.isInteger(Number(value))) {\n      setValidQuantity(true)\n      dispatch(setQuantity(value))\n    } else {\n      setValidQuantity(false)\n      dispatch(setQuantity(null))\n    }\n  }\n\n  const [validDistance, setValidDistance] = React.useState(true)\n\n  const handleChangeDistance = value => {\n    if (value >= 1 && value <= 20000 && Number.isInteger(Number(value))) {\n      setValidDistance(true)\n      dispatch(setDistance(value))\n    } else {\n      setValidDistance(false)\n      dispatch(setDistance(null))\n    }\n  }\n\n  const [validHeightDifference, setValidHeightDifference] = React.useState(true)\n\n  const handleChangeHeightDifference = value => {\n    if (value >= -1000 && value <= 1000 && Number.isInteger(Number(value))) {\n      setValidHeightDifference(true)\n      dispatch(setHeightDifference(value))\n    } else {\n      setValidHeightDifference(false)\n      dispatch(setHeightDifference(null))\n    }\n  }\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"flex-start\" spacing={3}>\n      <Grid item container xs={8} direction=\"row\" alignItems=\"center\" spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">{t('Quantity')}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography style={{ marginBottom: 20 }}>{t('Average Quantity')}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            error={!validQuantity}\n            helperText={!validQuantity ? t(\"Number must be integer and between 1 and 20'000\") : ' '}\n            id=\"standard-number\"\n            type=\"number\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            onChange={event => handleChangeQuantity(event.target.value)}\n            value={quantity.amount !== null ? quantity.amount : null}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">m&sup3;/{t('day')}</InputAdornment>\n            }}\n            fullWidth\n          />\n        </Grid>\n\n        <Grid item xs={2} style={{ textAlign: 'center' }}>\n          <Tooltip title=\"Information about amounts\">\n            <Chip style={{ marginBottom: 20 }} label=\"?\" size=\"small\" />\n          </Tooltip>\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography style={{ marginBottom: 20 }}>{t('Distance')}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            error={!validDistance}\n            helperText={!validDistance ? t(\"Number must be integer and between 1 and 20'000\") : ' '}\n            id=\"standard-number\"\n            type=\"number\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            onChange={event => handleChangeDistance(event.target.value)}\n            value={quantity.distance !== null ? quantity.distance : null}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">m</InputAdornment>\n            }}\n            fullWidth\n          />\n        </Grid>\n\n        <Grid item xs={2} style={{ textAlign: 'center' }}>\n          <Tooltip title=\"Information about distance\">\n            <Chip style={{ marginBottom: 20 }} label=\"?\" size=\"small\" />\n          </Tooltip>\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography style={{ marginBottom: 20 }}>{t('Height Difference')}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            error={!validHeightDifference}\n            helperText={!validHeightDifference ? t(\"Number must be integer and between -1'000 and 1'000\") : ' '}\n            id=\"standard-number\"\n            type=\"number\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            onChange={event => handleChangeHeightDifference(event.target.value)}\n            value={quantity.heightDifference !== null ? quantity.heightDifference : null}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">m</InputAdornment>\n            }}\n            fullWidth\n          />\n        </Grid>\n\n        <Grid item xs={2} style={{ textAlign: 'center' }}>\n          <Tooltip title=\"Information about height differences\">\n            <Chip style={{ marginBottom: 20 }} label=\"?\" size=\"small\" />\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <Grid item container xs={4}>\n        <SolutionsBox />\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { useAppSelector } from '../hooks'\n\nimport Grid from '@material-ui/core/Grid'\nimport { Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nimport communityInfo from '../data/communityInfo.json'\nimport waterQualities from '../data/waterQualities.json'\n\nimport PublicIcon from '@material-ui/icons/Public'\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\nimport BatteryFullIcon from '@material-ui/icons/BatteryFull'\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\n\nexport const CaseSummary = (props: { step: any }) => {\n  const { step } = props\n\n  const caseState = useAppSelector((state) => state.case)\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  return (\n    <div style={{ paddingTop: 5 }}>\n      <Grid item container spacing={1} alignItems=\"flex-start\">\n        {step === 0 ? (\n          <>\n            <Grid item>\n              {caseState.commInfo.countryID !== undefined ? (\n                <Grid container alignItems=\"center\" direction=\"row\" spacing={0}>\n                  <PublicIcon fontSize=\"small\" color=\"primary\" />\n\n                  <Typography variant=\"caption\">\n                    {lang === 'en'\n                      ? communityInfo[caseState.commInfo.countryID].name\n                      : communityInfo[caseState.commInfo.countryID].nameEs}\n                  </Typography>\n                  {caseState.commInfo.currency !== null ? (\n                    <>\n                      <AttachMoneyIcon fontSize=\"small\" color=\"primary\" />\n                      <Typography variant=\"caption\">\n                        {caseState.commInfo.currency === 0\n                          ? 'USD'\n                          : communityInfo[caseState.commInfo.countryID].currency}\n                      </Typography>\n                    </>\n                  ) : (\n                    <div />\n                  )}\n                </Grid>\n              ) : (\n                <div />\n              )}\n            </Grid>\n          </>\n        ) : (\n          <div />\n        )}\n\n        {step === 1 ? (\n          <Grid item>\n            {caseState.inputQuality.qualityClass !== undefined ? (\n              <Grid container alignItems=\"center\" direction=\"row\" spacing={0}>\n                <ExitToAppIcon fontSize=\"small\" color=\"primary\" />\n                <Typography variant=\"caption\">\n                  {lang === 'en'\n                    ? waterQualities[caseState.inputQuality.qualityClass].name\n                    : waterQualities[caseState.inputQuality.qualityClass].nameEs}\n                </Typography>\n              </Grid>\n            ) : (\n              <div />\n            )}\n          </Grid>\n        ) : (\n          <div />\n        )}\n\n        {step === 2 ? (\n          <Grid item>\n            {caseState.endUse.qualityClass !== undefined ? (\n              <Grid container alignItems=\"center\" direction=\"row\" spacing={0}>\n                <AutorenewIcon fontSize=\"small\" color=\"primary\" />\n                <Typography variant=\"caption\">\n                  {lang === 'en'\n                    ? waterQualities[caseState.endUse.qualityClass].name\n                    : waterQualities[caseState.endUse.qualityClass].nameEs}\n                </Typography>\n              </Grid>\n            ) : (\n              <div />\n            )}\n          </Grid>\n        ) : (\n          <div />\n        )}\n\n        {step === 3 ? (\n          <Grid item>\n            {caseState.quantity.amount !== null ? (\n              <Grid container alignItems=\"center\" direction=\"row\" spacing={0}>\n                <BatteryFullIcon fontSize=\"small\" color=\"primary\" />\n                <Typography variant=\"caption\">\n                  {caseState.quantity.amount}m&sup3;/{t('day')}\n                </Typography>\n                {caseState.quantity.distance !== null ? (\n                  <>\n                    <ArrowRightAltIcon fontSize=\"small\" color=\"primary\" />\n                    <Typography variant=\"caption\">{caseState.quantity.distance}m</Typography>\n                  </>\n                ) : (\n                  <div />\n                )}\n\n                {caseState.quantity.heightDifference !== null ? (\n                  <>\n                    <ArrowUpwardIcon fontSize=\"small\" color=\"primary\" />\n\n                    <Typography variant=\"caption\">{caseState.quantity.heightDifference}m</Typography>\n                  </>\n                ) : (\n                  <div />\n                )}\n              </Grid>\n            ) : (\n              <div />\n            )}\n          </Grid>\n        ) : (\n          <div />\n        )}\n      </Grid>\n    </div>\n  )\n}\n","import { createTheme } from '@material-ui/core'\n\nconst colors = {\n  main: '#00838f'\n}\n\nconst secondary = {\n  main: '#2196f3'\n}\n\nexport const theme = createTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary\n  }\n})\n\nexport const lightTheme = createTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary,\n    type: 'light'\n  }\n})\n\nexport const darkTheme = createTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary,\n    type: 'dark'\n  }\n})","import { makeStyles, withStyles } from '@material-ui/core/styles'\n\nimport CommInfo from './CommInfo'\nimport InputQuality from './InputQuality'\nimport EndUse from './EndUse'\nimport Quantity from './Quantity'\nimport { CaseSummary } from './CaseSummary'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport StepConnector from '@material-ui/core/StepConnector'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useDispatch } from 'react-redux'\n\nimport { useAppSelector } from '../hooks'\n\nimport { next, previous, reset } from '../case/caseSlice'\nimport { theme } from '../theme/theme'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles((theme) => ({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    justifyItems: 'center',\n    justifyContent: 'space-between',\n  },\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50,\n  },\n  step: {\n    minHeight: 'calc(100vh - 300px)',\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60,\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}))\n\nconst CustomConnector = withStyles({\n  root: {\n    alignSelf: 'flex-start',\n    paddingTop: '13px', //This hardcoded value sets the line in the middle of the stepper icons. It's not optimal.\n  },\n  line: {\n    borderRadius: 1,\n  },\n})(StepConnector)\n\nfunction getStepContent(step: number) {\n  switch (step) {\n    case 0:\n      return <CommInfo />\n    case 1:\n      return <InputQuality />\n    case 2:\n      return <EndUse />\n    case 3:\n      return <Quantity />\n    default:\n      return 'Unknown step'\n  }\n}\n\nexport const Case = () => {\n  const { t } = useTranslation()\n\n  const getSteps = () => {\n    return [\n      t('Community Information'),\n      t('Input Quality'),\n      t('End Use'),\n      t('Quantity') /* , t('Personalize Solutions') */,\n    ]\n  }\n\n  const count = useAppSelector((state) => state.case.step)\n  const completedSteps = useAppSelector((state) => state.case.completedSteps)\n\n  const dispatch = useDispatch()\n\n  const classes = useStyles()\n  const steps = getSteps()\n\n  const handleReset = () => {\n    dispatch(reset())\n  }\n\n  return (\n    <div className=\"App\">\n      <Paper className={classes.root} square elevation={3}>\n        <Stepper activeStep={count} connector={<CustomConnector />}>\n          {steps.map((label, index) => {\n            const stepProps = {}\n            const labelProps = {}\n            return (\n              <Step key={label} {...stepProps} style={{ alignSelf: 'flex-start' }}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n                <CaseSummary step={index} />\n              </Step>\n            )\n          })}\n        </Stepper>\n      </Paper>\n\n      <div className={classes.main}>\n        <Paper elevation={0} style={{ padding: 10 }}>\n          <Grid container spacing={3}>\n            <Grid item container xs={12}>\n              {count === steps.length ? (\n                <div>\n                  <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\n                  <Button onClick={handleReset} className={classes.button}>\n                    Reset\n                  </Button>\n                </div>\n              ) : (\n                <Grid item container direction=\"column\" alignItems=\"center\" className={classes.step}>\n                  {getStepContent(count)}\n\n                  <div style={{ paddingTop: theme.spacing(2) }}>\n                    <Button disabled={count === 0} onClick={() => dispatch(previous())} className={classes.button}>\n                      {t('Back')}\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => dispatch(next())}\n                      className={classes.button}\n                      disabled={completedSteps.includes(count) ? false : true}\n                    >\n                      {count === steps.length - 1 ? t('Finish') : t('Next')}\n                    </Button>\n                  </div>\n                </Grid>\n              )}\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Paper from '@material-ui/core/Paper'\nimport { MuiThemeProvider } from '@material-ui/core/styles'\nimport MUIDataTable from 'mui-datatables'\n\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nimport { useSelector } from 'react-redux'\n\nimport treatmentTrains from '../data/treatmentTrains.json'\nimport unitProcesses from '../data/unitProcesses.json'\nimport communityInfo from '../data/communityInfo.json'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 110\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 120\n  }\n}))\n\n/* const styles = theme => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2\n    }\n  }\n}) */\n\nexport const Results = () => {\n  const getMuiTheme = theme => ({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  })\n\n  const classes = useStyles()\n\n  const { t } = useTranslation()\n\n  const lang = i18next.language\n\n  const solutionsState = useSelector(state => state.case.solutions)\n  const commInfo = useSelector(state => state.case.commInfo)\n\n  const columns = [\n    {\n      name: 'Ranking',\n      label: t('Ranking'),\n      options: {\n        filter: true,\n        customBodyRenderLite: dataIndex => {\n          return dataIndex + 1\n        }\n      }\n    },\n    {\n      name: 'treatmentTrain',\n      label: t('Treatment Train'),\n      options: {\n        filter: true,\n        customBodyRenderLite: dataIndex => {\n          return lang === 'en'\n            ? treatmentTrains[data[dataIndex].treatmentTrain].category +\n                ' - ' +\n                treatmentTrains[data[dataIndex].treatmentTrain].title\n            : treatmentTrains[data[dataIndex].treatmentTrain].categoryEs +\n                ' - ' +\n                treatmentTrains[data[dataIndex].treatmentTrain].titleEs\n        }\n      }\n    },\n    {\n      name: 'unitProcesses',\n      label: t('Unit Processes'),\n      options: {\n        filter: true,\n        customBodyRenderLite: dataIndex => {\n          return treatmentTrains[data[dataIndex].treatmentTrain].unit_processes.map((up, index) => (\n            <Tooltip title={lang === 'en' ? unitProcesses[up].name : unitProcesses[up].nameEs}>\n              <Chip label={up} key={index} size=\"small\" color=\"primary\" style={{ margin: 2 }} />\n            </Tooltip>\n          ))\n        }\n      }\n    },\n\n    {\n      name: 'rating',\n      label: t('Rating [1-10]'),\n      options: {\n        filter: true,\n        customBodyRenderLite: dataIndex => {\n          return Math.round(((data[dataIndex].rating * 10) / 3) * 1000) / 1000\n        }\n      }\n    },\n    {\n      name: 'capex',\n      label: t('Total capital expenditure (CAPEX)'),\n      options: {\n        filter: true,\n        customBodyRenderLite: dataIndex => {\n          return commInfo.currency === 0 ? (\n            <>{Math.round(data[dataIndex].capex * 1000).toLocaleString('de-CH')} $</>\n          ) : (\n            <>\n              {(\n                communityInfo[commInfo.countryID].exchangeToUSD * Math.round(data[dataIndex].capex * 1000)\n              ).toLocaleString('de-CH')}{' '}\n              {communityInfo[commInfo.countryID].currency}\n            </>\n          )\n        }\n      }\n    },\n    {\n      name: 'annualizedCapex',\n      label: t('Annualized CAPEX'),\n      options: {\n        filter: true,\n        customBodyRenderLite: dataIndex => {\n          return commInfo.currency === 0 ? (\n            <>{Math.round(data[dataIndex].annualizedCapex * 1000).toLocaleString('de-CH')} $</>\n          ) : (\n            <>\n              {(\n                communityInfo[commInfo.countryID].exchangeToUSD * Math.round(data[dataIndex].annualizedCapex * 1000)\n              ).toLocaleString('de-CH')}{' '}\n              {communityInfo[commInfo.countryID].currency}\n            </>\n          )\n        }\n      }\n    },\n    {\n      name: 'annualizedCapexPerCubic',\n      label: t('Annualized CAPEX per Cubic'),\n      options: {\n        filter: true,\n        customBodyRenderLite: dataIndex => {\n          return commInfo.currency === 0 ? (\n            <>{Math.round(data[dataIndex].annualizedCapexPerCubic * 1000).toLocaleString('de-CH')} $</>\n          ) : (\n            <>\n              {(\n                communityInfo[commInfo.countryID].exchangeToUSD *\n                Math.round(data[dataIndex].annualizedCapexPerCubic * 1000)\n              ).toLocaleString('de-CH')}{' '}\n              {communityInfo[commInfo.countryID].currency}\n            </>\n          )\n        }\n      }\n    }\n  ]\n\n  const data = solutionsState\n\n  const options = {\n    filter: true,\n    filterType: 'dropdown',\n    selectableRows: 'none',\n    rowsPerPage: 20,\n    print: false,\n    fixedHeader: true\n  }\n\n  return (\n    <div className=\"App\">\n      <div className={classes.main}>\n        <Paper elevation={0} style={{ padding: 10 }}>\n          <MuiThemeProvider theme={getMuiTheme()}>\n            <MUIDataTable title={t('Results')} data={data} columns={columns} options={options} />\n          </MuiThemeProvider>\n        </Paper>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TranslateIcon from '@material-ui/icons/Translate'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport i18next from 'i18next'\n\nexport default function SimpleMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleChooseLanguage = lang => {\n    i18next.changeLanguage(lang)\n    handleClose()\n  }\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        startIcon={<TranslateIcon />}\n        endIcon={<ExpandMoreIcon />}\n        color=\"inherit\"\n      >\n        {i18next.language === 'en' ? 'English' : 'Español'}\n      </Button>\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n        <MenuItem value=\"en\" onClick={() => handleChooseLanguage('en')}>\n          English\n        </MenuItem>\n        <MenuItem value=\"es\" onClick={() => handleChooseLanguage('es')}>\n          Español\n        </MenuItem>\n      </Menu>\n    </div>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport { Theme } from '@material-ui/core'\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  drop: {\n    fill: theme.palette.background.default,\n    stroke: theme.palette.background.default,\n    strokeMiterlimit: 10\n  },\n  p: {\n    stroke: theme.palette.primary.main,\n    fill: 'none',\n    strokeMiterlimit: 10,\n    strokeWidth: '2px'\n  },\n}))\n\ninterface Props {\n  readonly size: number\n}\n\nexport const PoseidonWebIcon = ({ size }: Props) => {\n\n  const classes = useStyles()\n  return (\n    \n      <svg id=\"Icon_Name\" data-name=\"Icon Name\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" width={size} height={size}>\n        <path className={classes.drop} d=\"M12.05662.85115s-25.16751,22.17563,0,22.29788C37.1519,23.27094,11.94259.70846,12.05662.85115Z\" />\n        <path className={classes.p} d=\"M6.99152,21.31234V8.3355s11.09965-.54124,11.63938,3.66112c.66118,5.14794-11.62619,3.66558-11.63938,2.611\" />\n      </svg>\n  )\n}","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport MenuBookIcon from '@material-ui/icons/MenuBook'\nimport AddBoxIcon from '@material-ui/icons/AddBox'\nimport BarChartIcon from '@material-ui/icons/BarChart'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport { Learn } from './Learn'\nimport { Case } from './Case'\nimport { Results } from './Results'\nimport UserMenu from './UserMenu'\nimport { useTranslation } from 'react-i18next'\nimport Grid from '@material-ui/core/Grid'\nimport { useSelector } from 'react-redux'\nimport { PoseidonWebIcon } from '../images/PoseidonWebIcon'\n\n\nconst useStyles = makeStyles({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: '30% auto 30%',\n    justifyItems: 'center',\n    justifyContent: 'space-between'\n  },\n  title: {\n    textAlign: 'left'\n  },\n  root: {\n    flexGrow: 1\n  }\n})\n\nexport const App = () => {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  const solutionsState = useSelector(state => state.case.solutions)\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <AppBar elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            <Grid container alignItems=\"flex-start\" spacing={1} justifyContent=\"center\">\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                component={Link}\n                to={`${process.env.PUBLIC_URL}/learn`}\n                startIcon={<MenuBookIcon />}\n                color=\"inherit\"\n              >\n                {t('Learn')}\n              </Button>\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                component={Link}\n                to={`${process.env.PUBLIC_URL}/case`}\n                startIcon={<AddBoxIcon />}\n                color=\"inherit\"\n              >\n                {t('New Case')}\n              </Button>\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                component={Link}\n                to={`${process.env.PUBLIC_URL}/results`}\n                startIcon={<BarChartIcon />}\n                color=\"inherit\"\n                disabled={solutionsState[0].treatmentTrain === null ? true : false}\n              >\n                {t('Results')}\n              </Button>\n            </Grid>{' '}\n            <Grid container alignItems=\"center\" spacing={1} justifyContent=\"center\">\n              <Grid item>\n                <PoseidonWebIcon size={24} />\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h6\">Poseidon Web beta</Typography>\n              </Grid>\n            </Grid>\n            <Grid container alignItems=\"flex-end\" spacing={1} justifyContent=\"center\">\n              <UserMenu />\n            </Grid>{' '}\n          </Toolbar>\n        </AppBar>\n\n        <div>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`} component={Learn} />\n            <Route path={`${process.env.PUBLIC_URL}/learn`} component={Learn} />\n            <Route path={`${process.env.PUBLIC_URL}/case`} component={Case} />\n            <Route path={`${process.env.PUBLIC_URL}/results`} component={Results} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n","import { App as AppComponent } from '../components/App'\nimport * as React from 'react'\nimport { CssBaseline, MuiThemeProvider as ThemeProvider } from '@material-ui/core'\nimport { theme } from '../theme/theme'\n\nexport const App = () => {\n  // This is the only place we need to access the theme via our own model\n  // From here on, it is safe and convenient to use the `useTheme` hook\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppComponent />\n    </ThemeProvider>\n  )\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport caseReducer from './case/caseSlice'\n\nexport const store = configureStore({\n  reducer: {\n    case: caseReducer\n  },\n})\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch\n\nexport default store","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport { resources } from './translations'\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'en', // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n    // if you're using a language detector, do not define the lng option\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  })\n\nexport default i18n\n","export const resources = {\n  es: {\n    translation: {\n      Learn: 'Aprender',\n      'New Case': 'Nuevo caso',\n      Results: 'Resultados',\n\n      'General Reference': 'Referencia general',\n      'Unit Processes': 'Procesos unitarios',\n      'Treatment Trains': 'Trenes de tratamiento',\n      'Case Studies': 'Estudios de caso',\n      'Water Qualities': 'Cualidades del agua',\n\n      Name: 'Nombre',\n      'Pollutant Removal Efficiencies [% removal]': 'Eficiencia de eliminación de los contaminates [% de eliminación]',\n      Turbidity: 'Turbidez',\n      Recovery: 'Recuperación',\n      'Evaluation Criteria': 'Criterios de evaluación',\n      'Useful Life [yrs]': 'Vida útil [años]',\n\n      Search: 'Buscar en',\n      'Download CSV': 'Descargar CSV',\n      'View Columns': 'Ver columnas',\n      'Filter Table': 'Tabla de filtros',\n      'Rows per page': 'Filas por páginas',\n\n      Category: 'Categoría',\n      Title: 'Título',\n      Description: 'Descripción',\n      'Case Study': 'Estudio de caso',\n      Note: 'Nota',\n      Reference: 'Referencia',\n\n      'Community Information': 'Información Comunitaria',\n      'Input Quality': 'Introducir Calidad',\n      'End Use': 'Uso Final',\n      Quantity: 'Cantidad',\n      Personalize: 'Personalizar',\n      Finish: 'Terminar',\n      Next: 'Siguiente',\n      Back: 'Volver',\n      'Case Overview': 'Resumen del Caso',\n      'Select the Country': 'Seleccionar país',\n      'Select the Currency': 'Seleccionar moneda',\n      'Land Cost': 'Costo del terreno',\n      'Electricity Cost': 'Costo de la electricidad',\n      'Personal Cost': 'Costo del personal',\n      'Discount Rate': 'Tasa de descuento',\n      Country: 'País',\n      Currency: 'Moneda',\n      'Select the Category': 'Seleccione una categoría',\n      'Water Quality Class': 'Categoría de calidad de agua',\n      'Average Quantity': 'Cantidad promedio',\n      day: 'día',\n\n      'Water Quality Indicators': 'Indicadores de calidad del agua',\n      'Number must be integer and between 1 and 1 million': 'El número debe ser entero y estar entre 1 y 1 millón',\n      \"Number must be integer and between 1 and 20'000\": \"El número debe ser entero y estar entre 1 y 20'000\",\n\n      input: 'entrada',\n      output: 'salida',\n      'avg. input': 'entr. med.',\n\n      Input: 'Entrada',\n      'Average Input': 'Entrada media',\n\n      'Personalize Solutions': 'Personalizar soluciones',\n      'Based on your input, no treatment is needed because the input quality is better than the end use quality.':\n        'Según su aportación, no es necesario ningún tratamiento porque la calidad de la aportación es mejor que la del uso final.',\n      'Based on your input, theres no possible solution': 'Según su aportación, no hay solución posible',\n      'Based on your input, the following treatment trains are best suited for the case.':\n        'Según sus aportaciónes, los siguientes trenes de tratamiento son los más adecuados para el caso.',\n      Rating: 'Valoración',\n      'Treatment Train': 'Trene de tratamiento',\n      Cost: 'Coste',\n\n      'Rating [1-10]': 'Clasificación [1-10]',\n      'This Poseidon – Web on-line application is an update of the already existing developed Poseidon application based on Microsoft Excel. The scope of the new application is to enhance the older version to a more user-friendly decision support tool, that supports pre-feasibility studies and aims at promoting water reuse and building capacities in the field. The tool developed currently encompasses 37-unit processes combined into 70 benchmark treatment trains. It also contains information on water quality standards and typical wastewater qualities. It estimates the removal performances for 12 parameters and the lifecycle costs including distribution.':\n        'Esta aplicación Poseidón - Web on-line es una actualización de la aplicación Poseidón ya desarrollada y basada en Microsoft Excel. El objetivo de la nueva aplicación es mejorar la versión anterior para convertirla en una herramienta de apoyo a la toma de decisiones más fácil de usar, que apoye los estudios de prefactibilidad y tenga como objetivo promover la reutilización del agua y la creación de capacidades en el campo. La herramienta desarrollada actualmente abarca 37 procesos de unidades combinadas en 70 trenes de tratamiento de referencia. También contiene información sobre las normas de calidad del agua y las calidades típicas de las aguas residuales. Estima los rendimientos de eliminación de 12 parámetros y los costes del ciclo de vida, incluida la distribución.',\n      'The tool and all underlying data are open access and under continuous development. The underlying systemic approach of the tool makes it intuitive also for users with limited prior knowledge in the field to identify most adequate solutions based on a multi-criteria assessment. This should help to promote water reuse and spearhead initiates for more detailed feasibility and design commissioning for implementation of water reuse schemes.':\n        'La herramienta y todos los datos subyacentes son de libre acceso y están en continuo desarrollo. El enfoque sistémico subyacente de la herramienta hace que sea intuitivo también para los usuarios con conocimientos previos limitados en el campo para identificar las soluciones más adecuadas basadas en una evaluación multicriterio. Esto debería ayudar a promover la reutilización del agua y a iniciar una viabilidad más detallada y un encargo de diseño para la aplicación de los planes de reutilización del agua.',\n\n      'The figure on the right shows a simplified flow of how the application works and how the calculations are being made.':\n        'La figura de la derecha muestra un flujo simplificado de cómo funciona la aplicación y cómo se realizan los cálculos.',\n\n      'Overview of application and calculations': 'Resumen de la aplicación y los cálculos',\n\n      Ranking: 'Clasificación',\n      'Annualized CAPEX': 'CAPEX anualizado',\n      'Annualized CAPEX per Cubic': 'CAPEX anualizado por cubo',\n      'Total capital expenditure (CAPEX)': 'Total de gastos de capital (CAPEX)',\n      'Yearly Capital Expenditures': 'Gastos de capital anuales',\n      'Sort by cost': 'Ordenar por coste',\n\n      'Sorry, no matching records found': 'Lo sentimos, no se han encontrado registros coincidentes',\n      'Sort': 'Ordenar'\n    }\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app'\nimport store from './app/store'\nimport { Provider } from 'react-redux'\nimport './app/i18n/i18n'\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n"],"sourceRoot":""}