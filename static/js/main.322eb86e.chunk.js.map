{"version":3,"sources":["app/components/UnitProcesses.js","app/components/Bar.js","app/components/GeneralReference.js","app/components/Pestle.js","app/components/CaseStudies.js","app/components/TreatmentTrains.js","app/components/WaterQualities.js","app/components/Learn.tsx","app/case/caseSlice.js","app/components/CommInfo.js","app/components/InputQuality.js","app/components/EndUse.js","app/components/Quantity.js","app/components/CaseBox.js","app/theme/theme.js","app/components/Case.js","app/components/UserMenu.js","app/components/App.js","app/containers/App.tsx","app/store.js","app/i18n/i18n.js","app/i18n/translations.js","index.tsx"],"names":["UnitProcesses","getMuiTheme","theme","overrides","MUIDataTable","paper","boxShadow","this","props","t","classes","data","unitProcesses","columns","name","options","filter","i18next","language","label","customBodyRenderLite","dataIndex","columnTitles","className","chipContainer","map","column","index","Tooltip","title","Chip","key","size","recovery","color","style","opacity","setCellProps","minWidth","filterType","selectableRows","rowsPerPage","print","React","Component","withStyles","display","justifyContent","flexWrap","margin","withTranslation","Bar","useTheme","outputColor","palette","primary","main","input","output","error","success","factor","push","height","width","indexBy","keys","top","right","bottom","left","padding","valueScale","type","indexScale","round","colors","d","colorBy","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","toUpperCase","unit","legendPosition","legendOffset","labelSkipHeight","Number","value","toLocaleString","enableGridY","animate","motionStiffness","motionDamping","tooltip","id","Paper","background","useStyles","makeStyles","gridTemplateColumns","gridRowGap","justifyItems","paddingLeft","paddingRight","paddingTop","root","flexGrow","GeneralReference","useTranslation","elevation","Typography","variant","Pestle","CaseStudies","TreatmentTrains","treatmentTrains","lang","maxWidth","UPList","unit_processes","up","nameEs","WaterQualities","waterQualities","qualities","waterQualityCategories","nameCol","noteCol","referenceCol","customBodyRender","toolbar","minHeight","textAlign","Learn","useState","menuPoint","setMenuPoint","square","Tabs","onChange","event","newValue","indicatorColor","textColor","centered","Tab","to","process","component","Link","exact","path","caseSlice","createSlice","initialState","step","completedSteps","commInfo","countryID","currency","inputQuality","category","qualityClass","endUse","Quantity","quantity","reducers","next","state","previous","reset","setCountry","action","payload","setCurrency","setInputQualityCategory","setInputQualityClass","setEndUseQualityCategory","setEndUseQualityClass","setQuantity","actions","CommInfo","useSelector","case","dispatch","useDispatch","countries","communityInfo","country","usdObj","Grid","container","direction","alignItems","spacing","item","xs","Autocomplete","getOptionLabel","option","getOptionSelected","disableClearable","renderInput","params","TextField","disabled","Math","landCost","exchangeToUSD","electricityCost","personalCost","discountRate","InputQuality","q","justify","waterQualityFactors","f","EndUse","validQuantity","setValidQuantity","helperText","InputLabelProps","shrink","target","InputProps","endAdornment","InputAdornment","position","fullWidth","backgroundColor","default","CaseBox","caseState","secondary","createMuiTheme","button","marginRight","instructions","marginTop","marginBottom","Case","count","steps","Stepper","activeStep","labelProps","Step","StepLabel","length","Button","onClick","getStepContent","includes","SimpleMenu","anchorEl","setAnchorEl","handleClose","handleChooseLanguage","console","log","changeLanguage","aria-controls","aria-haspopup","currentTarget","startIcon","endIcon","Menu","keepMounted","open","Boolean","onClose","MenuItem","App","AppBar","Toolbar","ThemeProvider","CssBaseline","configureStore","reducer","caseReducer","i18n","use","initReactI18next","init","resources","es","translation","Name","Turbidity","Recovery","reliability","waste","Search","Category","Title","Description","Note","Reference","Personalize","Finish","Next","Back","Country","Currency","day","lng","interpolation","escapeValue","Root","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.322eb86e.chunk.js","sourcesContent":["import React from 'react'\nimport MUIDataTable from 'mui-datatables'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\n\nimport unitProcesses from '../data/unitProcesses.json'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nconst styles = theme => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2\n    }\n  }\n})\n\nclass UnitProcesses extends React.Component {\n  getMuiTheme = theme => ({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  })\n\n  render() {\n    const { t, classes } = this.props\n\n    const data = unitProcesses\n    const lang = i18next.language\n\n    var nameCol = lang === 'en' ? 'name' : 'nameEs'\n\n    const columns = [\n      {\n        name: 'id',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: nameCol,\n        label: t('Name'),\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: 'pre',\n        label: t('Pollutant Removal Efficiencies [% removal]'),\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const columns = ['turbidity', 'tss', 'bod', 'cod', 'fc', 'tc']\n            const columnTitles = [t('Turbidity'), 'TSS', 'BOD', 'COD', 'FC', 'TC']\n\n            return (\n              <div className={classes.chipContainer}>\n                {columns.map((column, index) => (\n                  <Tooltip title={columnTitles[index]}>\n                    <Chip label={data[dataIndex][column]} key={index} size=\"small\" />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          }\n        }\n      },\n      {\n        name: 'recovery',\n        label: t('Recovery') + ' [%]',\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            return (\n              <div className={classes.chipContainer}>\n                <Chip label={data[dataIndex].recovery} size=\"small\" />\n              </div>\n            )\n          }\n        }\n      },\n      {\n        name: 'reliability',\n        label: t('Evaluation Criteria') + ' [0-3]',\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const columns = [\n              'reliability',\n              'ease_to_upgrade',\n              'adaptability_to_varying_flow',\n              'adaptability_to_varying_quality',\n              'ease_of_om',\n              'ease_of_construction',\n              'ease_of_demonstration',\n              'power_demand',\n              'chemical_demand',\n              'odor_generation',\n              'impact_on_ground_water',\n              'land_requirements',\n              'cost_of_treatment',\n              'waste'\n            ]\n            const columnTitles = [\n              t('reliability'),\n              t('ease to upgrade'),\n              t('adaptability to varying flow'),\n              t('adaptability to varying quality'),\n              t('ease of O & M'),\n              t('ease of construction'),\n              t('ease of demonstration'),\n              t('power demand'),\n              t('chemical demand'),\n              t('odor generation'),\n              t('impact on ground water'),\n              t('land requirements'),\n              t('cost of treatment'),\n              t('waste')\n            ]\n\n            return (\n              <div className={classes.chipContainer}>\n                {columns.map((column, index) => (\n                  <Tooltip title={columnTitles[index]}>\n                    <Chip\n                      label={data[dataIndex][column]}\n                      key={index}\n                      size=\"small\"\n                      color=\"primary\"\n                      style={{ opacity: 0.25 + data[dataIndex][column] / 4 }}\n                    />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          },\n          setCellProps: () => ({ style: { minWidth: '25vw' } })\n        }\n      },\n      {\n        name: 'useful_life',\n        label: t('Useful Life [yrs]'),\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            return (\n              <div className={classes.chipContainer}>\n                <Chip label={data[dataIndex].recovery} size=\"small\" />\n              </div>\n            )\n          }\n        }\n      }\n    ]\n\n    const options = {\n      filter: true,\n      filterType: 'dropdown',\n      selectableRows: 'none',\n      rowsPerPage: 20,\n      print: false\n    }\n\n    return (\n      <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable title={t('Unit Processes')} data={data} columns={columns} options={options} />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles)(withTranslation()(UnitProcesses))\n","import React from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { useTheme } from '@material-ui/core/styles'\nimport { Paper } from '@material-ui/core'\n\nexport const Bar = props => {\n  const theme = useTheme()\n\n  var outputColor = theme.palette.primary.main\n\n  if (props.input < props.output) {\n    outputColor = theme.palette.error.main\n  } else {\n    outputColor = theme.palette.success.main\n  }\n\n  const input = {\n    name: 'input',\n    [props.factor]: props.input,\n    color: theme.palette.primary.main\n  }\n\n  const output = {\n    name: 'output',\n    [props.factor]: props.output,\n    color: outputColor\n  }\n\n  let data = []\n\n  if (props.input) {\n    data.push(input)\n  }\n\n  if (props.output) {\n    data.push(output)\n  }\n\n  return (\n    <div style={{ height: 200, width: 100 }}>\n      <ResponsiveBar\n        data={data}\n        indexBy=\"name\"\n        keys={[props.factor]}\n        margin={{ top: 10, right: 0, bottom: 50, left: 0 }}\n        padding={0.3}\n        valueScale={{ type: 'linear' }}\n        indexScale={{ type: 'band', round: false }}\n        colors={d => d.data.color}\n        colorBy=\"id\"\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: props.factor.toUpperCase() + ' [' + props.unit + ']',\n          legendPosition: 'middle',\n          legendOffset: 40\n        }}\n        labelSkipHeight={36}\n        label={d => `${Number(d.value).toLocaleString('de-CH')}`}\n        enableGridY={false}\n        animate={true}\n        motionStiffness={115}\n        motionDamping={15}\n        tooltip={({ id, value, color }) => (\n          <Paper\n            style={{\n              padding: 12,\n              background: '#fff'\n            }}\n          >\n            {id.toUpperCase()}: {Number(value).toLocaleString('de-CH') + ' [' + props.unit + ']'}\n          </Paper>\n        )}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { useTranslation } from 'react-i18next'\nimport { Bar } from './Bar'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n}))\n\nexport default function GeneralReference() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Typography variant=\"h6\">{t('General Reference')}</Typography>\n        <Bar factor={'tss'} input=\"100\" />\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Paper from '@material-ui/core/Paper'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n}))\n\nexport default function Pestle() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Typography variant=\"h6\">{t('PESTLE')}</Typography>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Paper from '@material-ui/core/Paper'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n}))\n\nexport default function CaseStudies() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Typography variant=\"h6\">{t('Case Studies')}</Typography>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport MUIDataTable from 'mui-datatables'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\n\nimport treatmentTrains from '../data/treatmentTrains.json'\nimport unitProcesses from '../data/unitProcesses.json'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nconst styles = theme => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2\n    }\n  }\n})\n\nclass TreatmentTrains extends React.Component {\n  getMuiTheme = theme => ({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  })\n\n  render() {\n    const { t, classes } = this.props\n\n    const data = treatmentTrains\n\n    const lang = i18next.language\n\n    var categoryCol = lang === 'en' ? 'category' : 'categoryEs'\n    var titleCol = lang === 'en' ? 'title' : 'titleEs'\n    var descriptionCol = lang === 'en' ? 'description' : 'descriptionEs'\n    var caseStudyCol = lang === 'en' ? 'case_study' : 'case_studyEs'\n\n    const columns = [\n      {\n        name: 'id',\n        label: 'ID',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: categoryCol,\n        label: 'Category',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: titleCol,\n        label: 'Title',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: descriptionCol,\n        label: 'Description',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: caseStudyCol,\n        label: 'Case Study',\n        options: {\n          filter: true,\n          setCellProps: () => ({ style: { maxWidth: '20vw' } })\n        }\n      },\n      {\n        name: 'unit_processes',\n        label: 'Unit Processes',\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const UPList = data[dataIndex].unit_processes\n\n            return (\n              <div className={classes.chipContainer}>\n                {UPList.map((up, index) => (\n                  <Tooltip title={lang === 'en' ? unitProcesses[up - 1].name : unitProcesses[up - 1].nameEs}>\n                    <Chip label={up} key={index} size=\"small\" color=\"primary\" />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          },\n          setCellProps: () => ({ style: { minWidth: '15vw' } })\n        }\n      }\n    ]\n\n    const options = {\n      filter: true,\n      filterType: 'dropdown',\n      selectableRows: 'none',\n      rowsPerPage: 20,\n      print: false\n    }\n\n    return (\n      <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable title={t('Treatment Trains')} data={data} columns={columns} options={options} />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles)(withTranslation()(TreatmentTrains))\n","import React from 'react'\nimport MUIDataTable from 'mui-datatables'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\n\nimport waterQualities from '../data/waterQualities.json'\nimport waterQualityCategories from '../data/waterQualityCategories.json'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nconst styles = theme => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2\n    }\n  }\n})\n\nclass WaterQualities extends React.Component {\n  getMuiTheme = theme => ({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  })\n\n  render() {\n    const { t, classes } = this.props\n\n    const data = waterQualities\n    const qualities = waterQualityCategories\n\n    const lang = i18next.language\n\n    var nameCol = lang === 'en' ? 'name' : 'nameEs'\n    var noteCol = lang === 'en' ? 'note' : 'noteEs'\n    var referenceCol = lang === 'en' ? 'reference' : 'referenceEs'\n\n    const columns = [\n      {\n        name: 'id',\n        label: 'ID',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: 'category',\n        label: t('Category'),\n        options: {\n          filter: true,\n          customBodyRender: value => {\n            return <div>{lang === 'en' ? qualities[value].name : qualities[value].nameEs}</div>\n          }\n        }\n      },\n      {\n        name: nameCol,\n        label: t('Name'),\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: 'wqi',\n        label: t('Water Quality Indicators'),\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const columns = ['turbidity', 'tss', 'bod', 'cod', 'fc', 'tc']\n            const columnTitles = [t('Turbidity'), 'TSS', 'BOD', 'COD', 'FC', 'TC']\n\n            return (\n              <div className={classes.chipContainer}>\n                {columns.map((column, index) => (\n                  <Tooltip title={columnTitles[index]}>\n                    <Chip\n                      label={data[dataIndex][column] !== '-1' ? data[dataIndex][column] : '-'}\n                      key={index}\n                      size=\"small\"\n                    />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          },\n          setCellProps: () => ({ style: { minWidth: '20vw' } })\n        }\n      },\n      {\n        name: noteCol,\n        label: t('Note'),\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: referenceCol,\n        label: t('Reference'),\n        options: {\n          filter: true\n        }\n      }\n    ]\n\n    const options = {\n      filter: true,\n      filterType: 'dropdown',\n      selectableRows: 'none',\n      rowsPerPage: 20,\n      print: false\n    }\n\n    return (\n      <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable title={t('Water Qualities')} data={data} columns={columns} options={options} />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles)(withTranslation()(WaterQualities))\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport UnitProcesses from './UnitProcesses'\nimport GeneralReference from './GeneralReference'\nimport Pestle from './Pestle'\nimport CaseStudies from './CaseStudies'\n\nimport TreatmentTrains from './TreatmentTrains'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport { useTranslation } from 'react-i18next'\nimport WaterQualities from './WaterQualities'\n\nconst useStyles = makeStyles({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    justifyItems: 'center',\n    justifyContent: 'space-between'\n  },\n  main: {\n    display: 'grid',\n    minHeight: 'calc(100vh - 300px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 20\n  },\n  title: {\n    textAlign: 'left'\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n})\n\nexport const Learn = () => {\n  const { t } = useTranslation()\n\n  const classes = useStyles()\n\n  const [menuPoint, setMenuPoint] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setMenuPoint(newValue)\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Paper className={classes.root} square elevation={3}>\n          <Tabs value={menuPoint} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" centered>\n            <Tab label={t('General Reference')} to={`${process.env.PUBLIC_URL}/general`} component={Link} />\n            <Tab label={t('PESTLE')} to={`${process.env.PUBLIC_URL}/pestle`} component={Link} />\n            <Tab label={t('Water Qualities')} to={`${process.env.PUBLIC_URL}/waterqualities`} component={Link} />\n            <Tab label={t('Unit Processes')} to={`${process.env.PUBLIC_URL}/unitprocesses`} component={Link} />\n            <Tab label={t('Treatment Trains')} to={`${process.env.PUBLIC_URL}/treatmenttrains`} component={Link} />\n            <Tab label={t('Case Studies')} to={`${process.env.PUBLIC_URL}/casestudies`} component={Link} />\n          </Tabs>\n        </Paper>\n\n        <div className={classes.main}>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/learn`} component={GeneralReference} />\n            <Route path={`${process.env.PUBLIC_URL}/general`} component={GeneralReference} />\n            <Route path={`${process.env.PUBLIC_URL}/pestle`} component={Pestle} />\n            <Route path={`${process.env.PUBLIC_URL}/waterqualities`} component={WaterQualities} />\n            <Route path={`${process.env.PUBLIC_URL}/unitprocesses`} component={UnitProcesses} />\n            <Route path={`${process.env.PUBLIC_URL}/treatmenttrains`} component={TreatmentTrains} />\n            <Route path={`${process.env.PUBLIC_URL}/casestudies`} component={CaseStudies} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const caseSlice = createSlice({\n  name: 'case',\n  initialState: {\n    step: 0,\n    completedSteps: [null, null, null, null],\n    commInfo: {\n      countryID: null,\n      currency: null //0 is USD, 1 is local currency\n    },\n    inputQuality: {\n      category: 28,\n      qualityClass: null\n    },\n    endUse: {\n      category: 28,\n      qualityClass: null\n    },\n    Quantity: {\n      quantity: null\n    }\n  },\n  reducers: {\n    next: state => {\n      state.step += 1\n    },\n    previous: state => {\n      state.step -= 1\n    },\n    reset: state => {\n      state.step = 0\n    },\n    setCountry: (state, action) => {\n      state.commInfo.countryID = action.payload\n      state.commInfo.currency = null\n      state.completedSteps[0] = null\n    },\n    setCurrency: (state, action) => {\n      action.payload === 1000 ? (state.commInfo.currency = 0) : (state.commInfo.currency = 1)\n      state.completedSteps[0] = 0\n    },\n    setInputQualityCategory: (state, action) => {\n      state.inputQuality.category = action.payload\n      state.inputQuality.qualityClass = null\n      state.completedSteps[1] = null\n    },\n    setInputQualityClass: (state, action) => {\n      state.inputQuality.qualityClass = action.payload\n      state.completedSteps[1] = 1\n    },\n    setEndUseQualityCategory: (state, action) => {\n      state.endUse.category = action.payload\n      state.endUse.qualityClass = null\n      state.completedSteps[2] = null\n    },\n    setEndUseQualityClass: (state, action) => {\n      state.endUse.qualityClass = action.payload\n      state.completedSteps[2] = 2\n    },\n    setQuantity: (state, action) => {\n      state.Quantity.quantity = action.payload\n      if (action.payload === null) {\n        state.completedSteps[3] = null\n      }\n      if (action.payload !== null) {\n        state.completedSteps[3] = 3\n      }\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const {\n  next,\n  previous,\n  reset,\n  setCountry,\n  setCurrency,\n  setInputQualityCategory,\n  setInputQualityClass,\n  setEndUseQualityCategory,\n  setEndUseQualityClass,\n  setQuantity\n} = caseSlice.actions\n\nexport default caseSlice.reducer\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport communityInfo from '../data/communityInfo'\nimport { setCountry, setCurrency } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nexport default function CommInfo() {\n  const commInfo = useSelector(state => state.case.commInfo)\n  const dispatch = useDispatch()\n  const countries = []\n  communityInfo.map(country => {\n    return countries.push(country.name)\n  })\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  const usdObj = { id: 1000, currency: 'USD' }\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">{t('Community Information')}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Country')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"country\"\n          options={communityInfo}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : null)}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setCountry(newValue.id))}\n          disableClearable\n          value={commInfo.countryID !== null ? communityInfo[commInfo.countryID] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title={t('Information about countries')}>\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Currency')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"currency\"\n          options={[communityInfo[commInfo.countryID], usdObj]}\n          getOptionLabel={option => option.currency}\n          getOptionSelected={(option, value) => option.currency === value.currency}\n          onChange={(event, newValue) => dispatch(setCurrency(newValue.id))}\n          disableClearable\n          value={\n            commInfo.currency !== null ? (commInfo.currency === 0 ? usdObj : communityInfo[commInfo.countryID]) : null\n          }\n          disabled={commInfo.countryID === null ? true : false}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title={t('Information about currencies')}>\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      {commInfo.currency !== null ? (\n        <>\n          <Grid item xs={4}>\n            <Typography>{t('Land Cost')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>\n              {commInfo.currency === 0\n                ? Math.round(communityInfo[commInfo.countryID].landCost * 100) / 100 + ' ' + usdObj.currency\n                : Math.round(\n                    communityInfo[commInfo.countryID].landCost * communityInfo[commInfo.countryID].exchangeToUSD * 100\n                  ) /\n                    100 +\n                  ' ' +\n                  communityInfo[commInfo.countryID].currency}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography>{t('Electricity Cost')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>\n              {commInfo.currency === 0\n                ? Math.round(communityInfo[commInfo.countryID].electricityCost * 100) / 100 + ' ' + usdObj.currency\n                : Math.round(\n                    communityInfo[commInfo.countryID].electricityCost *\n                      communityInfo[commInfo.countryID].exchangeToUSD *\n                      100\n                  ) /\n                    100 +\n                  ' ' +\n                  communityInfo[commInfo.countryID].currency}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography>{t('Personal Cost')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>\n              {commInfo.currency === 0\n                ? Math.round(communityInfo[commInfo.countryID].personalCost * 100) / 100 + ' ' + usdObj.currency\n                : Math.round(\n                    communityInfo[commInfo.countryID].personalCost *\n                      communityInfo[commInfo.countryID].exchangeToUSD *\n                      100\n                  ) /\n                    100 +\n                  ' ' +\n                  communityInfo[commInfo.countryID].currency}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography>{t('Discount Rate')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>{communityInfo[commInfo.countryID].discountRate * 100 + '%'}</Typography>\n          </Grid>\n        </>\n      ) : (\n        <div />\n      )}\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport waterQualities from '../data/waterQualities.json'\nimport waterQualityCategories from '../data/waterQualityCategories.json'\nimport waterQualityFactors from '../data/waterQualityFactors.json'\nimport { setInputQualityCategory, setInputQualityClass } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\nimport { Bar } from './Bar'\n\nexport default function InputQuality() {\n  const inputQuality = useSelector(state => state.case.inputQuality)\n  const dispatch = useDispatch()\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">{t('Input Quality & Quantity')}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Category')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"category\"\n          options={waterQualityCategories}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : null)}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setInputQualityCategory(newValue.id))}\n          disableClearable\n          value={inputQuality.category !== null ? waterQualityCategories[inputQuality.category] : null} //Peru is default Category\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about categories\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Water Quality Class')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"quality\"\n          options={waterQualities.filter(q => q.category === inputQuality.category)}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : null)}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setInputQualityClass(newValue.id))}\n          disableClearable\n          value={inputQuality.qualityClass !== null ? waterQualities[inputQuality.qualityClass] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n          disabled={inputQuality.category === null ? true : false}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about water quality classes\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n\n      <Grid item container xs={12} justify=\"space-evenly\" alignItems=\"center\">\n        {waterQualityFactors.map(f => {\n          const key = f.name\n\n          return (\n            <div style={{ width: 'calc(1/6*80%' }}>\n              <Bar\n                factor={f.name}\n                unit={f.unit}\n                input={\n                  inputQuality.qualityClass === null\n                    ? null\n                    : waterQualities[inputQuality.qualityClass][key] < 0\n                    ? null\n                    : waterQualities[inputQuality.qualityClass][key]\n                }\n              />\n            </div>\n          )\n        })}\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport waterQualities from '../data/waterQualities.json'\nimport waterQualityCategories from '../data/waterQualityCategories.json'\nimport waterQualityFactors from '../data/waterQualityFactors.json'\nimport { setEndUseQualityCategory, setEndUseQualityClass } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\nimport { Bar } from './Bar'\n\nexport default function EndUse() {\n  const endUse = useSelector(state => state.case.endUse)\n  const inputQuality = useSelector(state => state.case.inputQuality)\n\n  const dispatch = useDispatch()\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">{t('End Use')}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Category')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"category\"\n          options={waterQualityCategories}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : '')}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setEndUseQualityCategory(newValue.id))}\n          disableClearable\n          value={endUse.category !== null ? waterQualityCategories[endUse.category] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about categories\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Water Quality Class')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"quality\"\n          options={waterQualities.filter(q => q.category === endUse.category)}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : '')}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setEndUseQualityClass(newValue.id))}\n          disableClearable\n          value={endUse.qualityClass !== null ? waterQualities[endUse.qualityClass] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n          disabled={endUse.category === null ? true : false}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about water quality classes\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n\n      <Grid item container xs={12} justify=\"space-evenly\" alignItems=\"center\">\n        {endUse.qualityClass !== null\n          ? waterQualityFactors.map(f => {\n              const key = f.name\n\n              return (\n                <div style={{ width: 'calc(1/6*80%' }}>\n                  <Bar\n                    factor={f.name}\n                    unit={f.unit}\n                    input={\n                      waterQualities[inputQuality.qualityClass][key] < 0\n                        ? null\n                        : waterQualities[inputQuality.qualityClass][key]\n                    }\n                    output={\n                      waterQualities[endUse.qualityClass][key] < 0 ? null : waterQualities[endUse.qualityClass][key]\n                    }\n                  />\n                </div>\n              )\n            })\n          : waterQualityFactors.map(f => {\n              const key = f.name\n\n              return (\n                <div style={{ width: 'calc(1/6*80%' }}>\n                  <Bar\n                    factor={f.name}\n                    unit={f.unit}\n                    input={\n                      waterQualities[inputQuality.qualityClass][key] < 0\n                        ? null\n                        : waterQualities[inputQuality.qualityClass][key]\n                    }\n                  />\n                </div>\n              )\n            })}\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setQuantity } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport InputAdornment from '@material-ui/core/InputAdornment'\n\nexport default function Quantity() {\n  const Quantity = useSelector(state => state.case.Quantity)\n  const dispatch = useDispatch()\n\n  const { t } = useTranslation()\n\n  const [validQuantity, setValidQuantity] = React.useState(true)\n\n  const handleChangeQuantity = value => {\n    if (value >= 1 && value <= 1000000) {\n      setValidQuantity(true)\n      dispatch(setQuantity(value))\n    } else {\n      setValidQuantity(false)\n      dispatch(setQuantity(null))\n    }\n  }\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">{t('Quantity')}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Average Quantity')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          error={!validQuantity}\n          helperText={!validQuantity ? t('Number must be integer and between 1 and 1 million') : ' '}\n          id=\"standard-number\"\n          type=\"number\"\n          variant=\"outlined\"\n          InputLabelProps={{\n            shrink: true\n          }}\n          onChange={event => handleChangeQuantity(event.target.value)}\n          value={Quantity.quantity !== null ? Quantity.quantity : null}\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">m&sup3;/{t('day')}</InputAdornment>\n          }}\n          fullWidth\n        />\n      </Grid>\n\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about amounts\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Chip from '@material-ui/core/Chip'\nimport Paper from '@material-ui/core/Paper'\nimport { Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nimport communityInfo from '../data/communityInfo'\nimport waterQualities from '../data/waterQualities.json'\nimport waterQualityCategories from '../data/waterQualityCategories.json'\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    backgroundColor: theme.palette.background.default,\n    padding: 10\n  }\n}))\n\nexport default function CaseBox() {\n  const classes = useStyles()\n\n  const caseState = useSelector(state => state.case)\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  return (\n    <Paper className={classes.paper} elevation={0}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">{t('Case Overview')}</Typography>\n        </Grid>\n\n        <Grid item container xs={12} spacing={1} alignItems=\"center\">\n          <Grid item xs={1}>\n            <Chip label=\"1\" color=\"primary\" size=\"small\" />\n          </Grid>\n          <Grid item xs={11}>\n            <Typography>{t('Community Information')}</Typography>\n          </Grid>\n          {caseState.commInfo.countryID !== null ? (\n            <>\n              <Grid item xs={6}>\n                <Typography>{t('Country')}:</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography>\n                  {lang === 'en'\n                    ? communityInfo[caseState.commInfo.countryID].name\n                    : communityInfo[caseState.commInfo.countryID].nameEs}\n                </Typography>\n              </Grid>\n            </>\n          ) : (\n            <div />\n          )}\n          {caseState.commInfo.currency !== null ? (\n            <>\n              <Grid item xs={6}>\n                <Typography>{t('Currency')}:</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography>\n                  {caseState.commInfo.currency === 0 ? 'USD' : communityInfo[caseState.commInfo.countryID].currency}\n                </Typography>\n              </Grid>\n            </>\n          ) : (\n            <div />\n          )}\n          <Grid item xs={1}>\n            <Chip label=\"2\" color=\"primary\" size=\"small\" />\n          </Grid>\n          <Grid item xs={11}>\n            <Typography>{t('Input Quality & Quantity')}</Typography>\n          </Grid>\n          {caseState.inputQuality.category !== null ? (\n            <>\n              <Grid item xs={6} container alignItems=\"flex-start\">\n                <Typography>{t('Category')}:</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography>\n                  {lang === 'en'\n                    ? waterQualityCategories[caseState.inputQuality.category].name\n                    : waterQualityCategories[caseState.inputQuality.category].nameEs}\n                </Typography>\n              </Grid>\n            </>\n          ) : (\n            <div />\n          )}\n          {caseState.inputQuality.qualityClass !== null ? (\n            <>\n              <Grid item xs={6} container alignItems=\"flex-start\">\n                <Typography>{t('Quality Class')}:</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography>\n                  {lang === 'en'\n                    ? waterQualities[caseState.inputQuality.qualityClass].name\n                    : waterQualities[caseState.inputQuality.qualityClass].nameEs}\n                </Typography>\n              </Grid>\n            </>\n          ) : (\n            <div />\n          )}\n          {caseState.inputQuality.quantity !== null ? (\n            <>\n              <Grid item xs={6} container alignItems=\"flex-start\">\n                <Typography>{t('Average Quantity')}:</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography>\n                  {caseState.inputQuality.quantity}m&sup3;/{t('day')}\n                </Typography>\n              </Grid>\n            </>\n          ) : (\n            <div />\n          )}\n          <Grid item xs={1}>\n            <Chip label=\"3\" color=\"primary\" size=\"small\" />\n          </Grid>\n          <Grid item xs={11}>\n            <Typography>{t('End Use')}</Typography>\n          </Grid>\n          {caseState.endUse.category !== null ? (\n            <>\n              <Grid item xs={6} container alignItems=\"flex-start\">\n                <Typography>{t('Category')}:</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography>\n                  {lang === 'en'\n                    ? waterQualityCategories[caseState.endUse.category].name\n                    : waterQualityCategories[caseState.endUse.category].nameEs}\n                </Typography>\n              </Grid>\n            </>\n          ) : (\n            <div />\n          )}\n          {caseState.endUse.qualityClass !== null ? (\n            <>\n              <Grid item xs={6} container alignItems=\"flex-start\">\n                <Typography>{t('Quality Class')}:</Typography>\n              </Grid>\n              <Grid item xs={6}>\n                <Typography>\n                  {lang === 'en'\n                    ? waterQualities[caseState.endUse.qualityClass].name\n                    : waterQualities[caseState.endUse.qualityClass].nameEs}\n                </Typography>\n              </Grid>\n            </>\n          ) : (\n            <div />\n          )}\n          <Grid item xs={1}>\n            <Chip label=\"4\" color=\"primary\" size=\"small\" />\n          </Grid>\n          <Grid item xs={11}>\n            <Typography>{t('Personalize')}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n","import { createMuiTheme } from '@material-ui/core'\n\nconst colors = {\n  main: '#00838f'\n}\n\nconst secondary = {\n  main: '#ef6c00'\n}\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary\n  }\n})\n\nexport const lightTheme = createMuiTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary,\n    type: 'light'\n  }\n})\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary,\n    type: 'dark'\n  }\n})\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport CommInfo from './CommInfo'\nimport InputQuality from './InputQuality'\nimport EndUse from './EndUse'\nimport Quantity from './Quantity'\nimport CaseBox from './CaseBox'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { next, previous, reset } from '../case/caseSlice'\nimport { theme } from '../theme/theme'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    justifyItems: 'center',\n    justifyContent: 'space-between'\n  },\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  step: {\n    minHeight: 'calc(100vh - 300px)'\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}))\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <CommInfo />\n    case 1:\n      return <InputQuality />\n    case 2:\n      return <EndUse />\n    case 3:\n      return <Quantity />\n    default:\n      return 'Unknown step'\n  }\n}\n\nexport const Case = () => {\n  const { t } = useTranslation()\n\n  const getSteps = () => {\n    return [t('Community Information'), t('Input Quality'), t('End Use'), t('Quantity'), t('Personalize')]\n  }\n\n  const count = useSelector(state => state.case.step)\n  const completedSteps = useSelector(state => state.case.completedSteps)\n\n  const dispatch = useDispatch()\n\n  const classes = useStyles()\n  const steps = getSteps()\n\n  const handleReset = () => {\n    dispatch(reset())\n  }\n\n  return (\n    <div className=\"App\">\n      <Paper className={classes.root} square elevation={3}>\n        <Stepper activeStep={count}>\n          {steps.map((label, index) => {\n            const stepProps = {}\n            const labelProps = {}\n            return (\n              <Step key={label} {...stepProps}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n                {/* <Typography variant=\"caption\">{index}</Typography> Here we could add the case infos as well.. */}\n              </Step>\n            )\n          })}\n        </Stepper>\n      </Paper>\n\n      <div className={classes.main}>\n        <Paper elevation={0} style={{ padding: 10 }}>\n          <Grid container spacing={3}>\n            <Grid item container xs={8}>\n              {count === steps.length ? (\n                <div>\n                  <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\n                  <Button onClick={handleReset} className={classes.button}>\n                    Reset\n                  </Button>\n                </div>\n              ) : (\n                <Grid\n                  item\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  alignItems=\"center\"\n                  className={classes.step}\n                >\n                  {getStepContent(count)}\n\n                  <div style={{ paddingTop: theme.spacing(2) }}>\n                    <Button disabled={count === 0} onClick={() => dispatch(previous())} className={classes.button}>\n                      {t('Back')}\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => dispatch(next())}\n                      className={classes.button}\n                      disabled={completedSteps.includes(count) ? false : true}\n                    >\n                      {count === steps.length - 1 ? t('Finish') : t('Next')}\n                    </Button>\n                  </div>\n                </Grid>\n              )}\n            </Grid>\n            <Grid item xs={4}>\n              <CaseBox />\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TranslateIcon from '@material-ui/icons/Translate'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport i18next from 'i18next'\n\nexport default function SimpleMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleChooseLanguage = lang => {\n    console.log(lang)\n    i18next.changeLanguage(lang)\n    handleClose()\n  }\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        startIcon={<TranslateIcon />}\n        endIcon={<ExpandMoreIcon />}\n        color=\"inherit\"\n      >\n        {i18next.language === 'en' ? 'English' : 'Español'}\n      </Button>\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n        <MenuItem value=\"en\" onClick={() => handleChooseLanguage('en')}>\n          English\n        </MenuItem>\n        <MenuItem value=\"es\" onClick={() => handleChooseLanguage('es')}>\n          Español\n        </MenuItem>\n      </Menu>\n    </div>\n  )\n}\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport MenuBookIcon from '@material-ui/icons/MenuBook'\nimport AddBoxIcon from '@material-ui/icons/AddBox'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport { Learn } from './Learn'\nimport { Case } from './Case'\nimport UserMenu from './UserMenu'\nimport { useTranslation } from 'react-i18next'\nimport OpacityIcon from '@material-ui/icons/Opacity'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    justifyItems: 'center',\n    justifyContent: 'space-between'\n  },\n  title: {\n    textAlign: 'left'\n  },\n  root: {\n    flexGrow: 1\n  }\n})\n\nexport const App = () => {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <AppBar elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            <div>\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                component={Link}\n                to={`${process.env.PUBLIC_URL}/learn`}\n                startIcon={<MenuBookIcon />}\n                color=\"inherit\"\n              >\n                {t('Learn')}\n              </Button>\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                component={Link}\n                to={`${process.env.PUBLIC_URL}/case`}\n                startIcon={<AddBoxIcon />}\n                color=\"inherit\"\n              >\n                {t('New Case')}\n              </Button>\n            </div>\n            <Grid container alignItems=\"center\" spacing={1} justify=\"center\">\n              <Grid item>\n                <OpacityIcon />\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h6\">Poseidon Web alpha 0.1</Typography>\n              </Grid>\n            </Grid>\n            {/* <div className={classes.title}>\n              <Typography>\n              <OpacityIcon style={{position: 'relative', top: '8px'}} /> Poseidon Web alpha 0.1\n                </Typography>\n            </div> */}\n            <div style={{ width: 150 }}>\n              <UserMenu />\n            </div>\n            {/* <ThemeSwitch /> */}\n          </Toolbar>\n        </AppBar>\n\n        <div>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`} component={Learn} />\n            <Route path={`${process.env.PUBLIC_URL}/learn`} component={Learn} />\n            <Route path={`${process.env.PUBLIC_URL}/case`} component={Case} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n","import { App as AppComponent } from '../components/App'\nimport * as React from 'react'\nimport { CssBaseline, MuiThemeProvider as ThemeProvider } from '@material-ui/core'\nimport { theme } from '../theme/theme'\n\nexport const App = () => {\n  // This is the only place we need to access the theme via our own model\n  // From here on, it is safe and convenient to use the `useTheme` hook\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppComponent />\n    </ThemeProvider>\n  )\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport caseReducer from './case/caseSlice'\n\nexport default configureStore({\n  reducer: {\n    case: caseReducer\n  }\n})\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport { resources } from './translations'\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'en', // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n    // if you're using a language detector, do not define the lng option\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  })\n\nexport default i18n\n","export const resources = {\n  es: {\n    translation: {\n      Learn: 'Aprendar',\n      'New Case': 'Nuevo caso',\n\n      'General Reference': 'Referencia general',\n      'Unit Processes': 'Procesos unitarios',\n      'Treatment Trains': 'Trenes de tratamiento',\n      'Case Studies': 'Estudios de caso',\n      'Water Qualities': 'Cualidades del agua',\n\n      Name: 'Nombre',\n      'Pollutant Removal Efficiencies [% removal]': '',\n      Turbidity: 'Turbidez',\n      Recovery: 'Recuperación',\n      'Evaluation Criteria': 'Criterios de evaluación',\n      'Useful Life [yrs]': 'Vida útil [años]',\n\n      reliability: 'fiabilidad',\n      'ease to upgrade': 'facilidad de actualización',\n      'adaptability to varying flow': '',\n      'adaptability to varying quality': '',\n      'ease of O & M': '',\n      'ease of construction': '',\n      'ease of demonstration': '',\n      'power demand': '',\n      'chemical demand': 'demanda de químicos',\n      'odor generation': '',\n      'impact on ground water': '',\n      'land requirements': '',\n      'cost of treatment': '',\n      waste: '',\n\n      Search: 'Buscar en',\n      'Download CSV': 'Descargar CSV',\n      'View Columns': 'Ver columnas',\n      'Filter Table': 'Tabla de filtros',\n      'Rows per page': 'Rows per page',\n\n      Category: 'Categoría',\n      Title: 'Título',\n      Description: 'Descripción',\n      'Case Study': 'Estudio de caso',\n      Note: 'Nota',\n      Reference: 'Referencia',\n\n      'Community Information': 'Información Comunitaria',\n      'Input Quality': 'Introducir la Calidad',\n      'End Use': 'Uso Final',\n      Quantity: 'Qantidad',\n      Personalize: 'Personalizar',\n      Finish: 'Terminar',\n      Next: 'Próximo',\n      Back: 'Volver',\n      'Case Overview': 'Resumen del Caso',\n      'Select the Country': 'selectar país',\n      'Select the Currency': 'selectar moneda',\n      'Land Cost': 'Coste del terreno',\n      'Electricity Cost': 'Coste de la electricidad',\n      'Personal Cost': 'Coste personal',\n      'Discount Rate': 'Tipo de descuento',\n      Country: 'País',\n      Currency: 'Moneda',\n      'Select the Category': 'Seleccione la categoría',\n      'Water Quality Class': 'Clase de calidad de agua',\n      'Average Quantity': 'Average Quantity',\n      day: 'día',\n\n      'Water Quality Indicators': 'Indicadores de calidad del agua',\n      'Number must be integer and between 1 and 1 million': 'El número debe ser entero y estar entre 1 y 1 millón'\n    }\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app'\nimport store from './app/store'\nimport { Provider } from 'react-redux'\nimport './app/i18n/i18n'\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n"],"sourceRoot":""}