{"version":3,"sources":["app/components/UnitProcesses.js","app/components/GeneralReference.js","app/components/Pestle.js","app/components/CaseStudies.js","app/components/TreatmentTrains.js","app/components/WaterQualities.js","app/components/Learn.tsx","app/case/caseSlice.js","app/components/CommInfo.js","app/components/Bar.js","app/components/InputQuality.js","app/components/EndUse.js","app/components/SolutionsBox.js","app/components/Quantity.js","app/case/CalculateSolutions.js","app/components/CaseSummary.js","app/theme/theme.js","app/components/Case.js","app/components/UserMenu.js","app/components/App.js","app/containers/App.tsx","app/store.js","app/i18n/i18n.js","app/i18n/translations.js","index.tsx"],"names":["UnitProcesses","getMuiTheme","theme","overrides","MUIDataTable","paper","boxShadow","this","props","t","classes","data","unitProcesses","columns","name","options","filter","i18next","language","label","customBodyRenderLite","dataIndex","columnTitles","className","chipContainer","map","column","index","Tooltip","title","Chip","key","size","recovery","color","style","opacity","setCellProps","minWidth","filterType","selectableRows","rowsPerPage","print","React","Component","withStyles","display","justifyContent","flexWrap","margin","withTranslation","useStyles","makeStyles","main","height","width","gridTemplateColumns","gridRowGap","justifyItems","paddingLeft","paddingRight","paddingTop","root","flexGrow","GeneralReference","useTranslation","Paper","elevation","padding","Typography","variant","Pestle","CaseStudies","TreatmentTrains","treatmentTrains","lang","maxWidth","UPList","unit_processes","up","nameEs","WaterQualities","waterQualities","qualities","waterQualityCategories","nameCol","noteCol","referenceCol","customBodyRender","value","toolbar","minHeight","textAlign","Learn","useState","menuPoint","setMenuPoint","square","Tabs","onChange","event","newValue","indicatorColor","textColor","centered","Tab","to","process","component","Link","exact","path","caseSlice","createSlice","initialState","step","completedSteps","commInfo","countryID","currency","inputQuality","category","qualityClass","endUse","quantity","amount","distance","heightDifference","solution","noneNeeded","noneAvailable","solutions","treatmentTrain","rating","price","reducers","next","state","previous","reset","setStep","action","payload","setCountry","setCurrency","setInputQualityCategory","setInputQualityClass","setEndUseQualityCategory","setEndUseQualityClass","setQuantity","setDistance","setHeightDifference","setSolutionNoneNeeded","resetSolutions","setSolutionNoneAvailable","setSolutions","console","log","treatment","actions","CommInfo","useSelector","case","dispatch","useDispatch","countries","communityInfo","country","push","usdObj","id","Grid","container","direction","alignItems","spacing","item","xs","Autocomplete","getOptionLabel","option","getOptionSelected","disableClearable","renderInput","params","TextField","disabled","Math","round","landCost","exchangeToUSD","electricityCost","personalCost","discountRate","Bar","useTheme","outputColor","palette","primary","Number","input","output","error","success","legend","average","factor","unit","toUpperCase","indexBy","keys","top","right","bottom","left","valueScale","type","indexScale","colors","d","colorBy","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legendPosition","legendOffset","labelSkipHeight","toExponential","toLocaleString","getLabel","enableGridY","animate","motionStiffness","motionDamping","tooltip","background","InputQuality","q","justify","waterQualityFactors","f","xmlns","fill","stroke-width","EndUse","backgroundColor","default","SolutionsBox","caseState","Quantity","endUseQuality","treatmentFactors","forEach","evaluationCriteria","topThreeTreatments","outputQualities","sort","a","b","slice","findTopTreatments","factors","suitableTreatmentTrain","outputQualityPerFactor","outputQualityStep","unitProcess","criteria","treatmentTrainTitle","turbidity","tss","bod","cod","fc","tc","length","findSuitableTreatments","CalculateSolutions","validQuantity","setValidQuantity","validDistance","setValidDistance","validHeightDifference","setValidHeightDifference","marginBottom","helperText","InputLabelProps","shrink","target","InputProps","endAdornment","InputAdornment","position","fullWidth","CaseSummary","fontSize","secondary","createMuiTheme","button","marginRight","instructions","marginTop","CustomConnector","alignSelf","line","borderRadius","StepConnector","Case","count","steps","Stepper","activeStep","connector","labelProps","Step","StepLabel","Button","onClick","getStepContent","includes","SimpleMenu","anchorEl","setAnchorEl","handleClose","handleChooseLanguage","changeLanguage","aria-controls","aria-haspopup","currentTarget","startIcon","endIcon","Menu","keepMounted","open","Boolean","onClose","MenuItem","App","AppBar","Toolbar","ThemeProvider","CssBaseline","configureStore","reducer","caseReducer","i18n","use","initReactI18next","init","resources","es","translation","Name","Turbidity","Recovery","reliability","waste","Search","Category","Title","Description","Note","Reference","Personalize","Finish","Next","Back","Country","Currency","day","lng","interpolation","escapeValue","Root","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9b5239ab.chunk.js","sourcesContent":["import React from 'react'\nimport MUIDataTable from 'mui-datatables'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\n\nimport unitProcesses from '../data/unitProcesses.json'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nconst styles = theme => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2\n    }\n  }\n})\n\nclass UnitProcesses extends React.Component {\n  getMuiTheme = theme => ({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  })\n\n  render() {\n    const { t, classes } = this.props\n\n    const data = unitProcesses\n    const lang = i18next.language\n\n    var nameCol = lang === 'en' ? 'name' : 'nameEs'\n\n    const columns = [\n      {\n        name: 'id',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: nameCol,\n        label: t('Name'),\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: 'pre',\n        label: t('Pollutant Removal Efficiencies [% removal]'),\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const columns = ['turbidity', 'tss', 'bod', 'cod', 'fc', 'tc']\n            const columnTitles = [t('Turbidity'), 'TSS', 'BOD', 'COD', 'FC', 'TC']\n\n            return (\n              <div className={classes.chipContainer}>\n                {columns.map((column, index) => (\n                  <Tooltip title={columnTitles[index]}>\n                    <Chip label={data[dataIndex][column]} key={index} size=\"small\" />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          }\n        }\n      },\n      {\n        name: 'recovery',\n        label: t('Recovery') + ' [%]',\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            return (\n              <div className={classes.chipContainer}>\n                <Chip label={data[dataIndex].recovery} size=\"small\" />\n              </div>\n            )\n          }\n        }\n      },\n      {\n        name: 'reliability',\n        label: t('Evaluation Criteria') + ' [0-3]',\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const columns = [\n              'reliability',\n              'ease_to_upgrade',\n              'adaptability_to_varying_flow',\n              'adaptability_to_varying_quality',\n              'ease_of_om',\n              'ease_of_construction',\n              'ease_of_demonstration',\n              'power_demand',\n              'chemical_demand',\n              'odor_generation',\n              'impact_on_ground_water',\n              'land_requirements',\n              'cost_of_treatment',\n              'waste'\n            ]\n            const columnTitles = [\n              t('reliability'),\n              t('ease to upgrade'),\n              t('adaptability to varying flow'),\n              t('adaptability to varying quality'),\n              t('ease of O & M'),\n              t('ease of construction'),\n              t('ease of demonstration'),\n              t('power demand'),\n              t('chemical demand'),\n              t('odor generation'),\n              t('impact on ground water'),\n              t('land requirements'),\n              t('cost of treatment'),\n              t('waste')\n            ]\n\n            return (\n              <div className={classes.chipContainer}>\n                {columns.map((column, index) => (\n                  <Tooltip title={columnTitles[index]}>\n                    <Chip\n                      label={data[dataIndex][column]}\n                      key={index}\n                      size=\"small\"\n                      color=\"primary\"\n                      style={{ opacity: 0.25 + data[dataIndex][column] / 4 }}\n                    />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          },\n          setCellProps: () => ({ style: { minWidth: '25vw' } })\n        }\n      },\n      {\n        name: 'useful_life',\n        label: t('Useful Life [yrs]'),\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            return (\n              <div className={classes.chipContainer}>\n                <Chip label={data[dataIndex].recovery} size=\"small\" />\n              </div>\n            )\n          }\n        }\n      }\n    ]\n\n    const options = {\n      filter: true,\n      filterType: 'dropdown',\n      selectableRows: 'none',\n      rowsPerPage: 20,\n      print: false\n    }\n\n    return (\n      <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable title={t('Unit Processes')} data={data} columns={columns} options={options} />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles)(withTranslation()(UnitProcesses))\n","import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n}))\n\nexport default function GeneralReference() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Typography variant=\"h6\">{t('General Reference')}</Typography>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Paper from '@material-ui/core/Paper'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n}))\n\nexport default function Pestle() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Typography variant=\"h6\">{t('PESTLE')}</Typography>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Paper from '@material-ui/core/Paper'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n}))\n\nexport default function CaseStudies() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Typography variant=\"h6\">{t('Case Studies')}</Typography>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport MUIDataTable from 'mui-datatables'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\n\nimport treatmentTrains from '../data/treatmentTrains.json'\nimport unitProcesses from '../data/unitProcesses.json'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nconst styles = theme => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2\n    }\n  }\n})\n\nclass TreatmentTrains extends React.Component {\n  getMuiTheme = theme => ({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  })\n\n  render() {\n    const { t, classes } = this.props\n\n    const data = treatmentTrains\n\n    const lang = i18next.language\n\n    var categoryCol = lang === 'en' ? 'category' : 'categoryEs'\n    var titleCol = lang === 'en' ? 'title' : 'titleEs'\n    var descriptionCol = lang === 'en' ? 'description' : 'descriptionEs'\n    var caseStudyCol = lang === 'en' ? 'case_study' : 'case_studyEs'\n\n    const columns = [\n      {\n        name: 'id',\n        label: 'ID',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: categoryCol,\n        label: 'Category',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: titleCol,\n        label: 'Title',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: descriptionCol,\n        label: 'Description',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: caseStudyCol,\n        label: 'Case Study',\n        options: {\n          filter: true,\n          setCellProps: () => ({ style: { maxWidth: '20vw' } })\n        }\n      },\n      {\n        name: 'unit_processes',\n        label: 'Unit Processes',\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const UPList = data[dataIndex].unit_processes\n\n            return (\n              <div className={classes.chipContainer}>\n                {UPList.map((up, index) => (\n                  <Tooltip title={lang === 'en' ? unitProcesses[up].name : unitProcesses[up].nameEs}>\n                    <Chip label={up} key={index} size=\"small\" color=\"primary\" />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          },\n          setCellProps: () => ({ style: { minWidth: '15vw' } })\n        }\n      }\n    ]\n\n    const options = {\n      filter: true,\n      filterType: 'dropdown',\n      selectableRows: 'none',\n      rowsPerPage: 20,\n      print: false\n    }\n\n    return (\n      <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable title={t('Treatment Trains')} data={data} columns={columns} options={options} />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles)(withTranslation()(TreatmentTrains))\n","import React from 'react'\nimport MUIDataTable from 'mui-datatables'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\n\nimport waterQualities from '../data/waterQualities.json'\nimport waterQualityCategories from '../data/waterQualityCategories.json'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nconst styles = theme => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2\n    }\n  }\n})\n\nclass WaterQualities extends React.Component {\n  getMuiTheme = theme => ({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  })\n\n  render() {\n    const { t, classes } = this.props\n\n    const data = waterQualities\n    const qualities = waterQualityCategories\n\n    const lang = i18next.language\n\n    var nameCol = lang === 'en' ? 'name' : 'nameEs'\n    var noteCol = lang === 'en' ? 'note' : 'noteEs'\n    var referenceCol = lang === 'en' ? 'reference' : 'referenceEs'\n\n    const columns = [\n      {\n        name: 'id',\n        label: 'ID',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: 'category',\n        label: t('Category'),\n        options: {\n          filter: true,\n          customBodyRender: value => {\n            return <div>{lang === 'en' ? qualities[value].name : qualities[value].nameEs}</div>\n          }\n        }\n      },\n      {\n        name: nameCol,\n        label: t('Name'),\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: 'wqi',\n        label: t('Water Quality Indicators'),\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const columns = ['turbidity', 'tss', 'bod', 'cod', 'fc', 'tc']\n            const columnTitles = [t('Turbidity'), 'TSS', 'BOD', 'COD', 'FC', 'TC']\n\n            return (\n              <div className={classes.chipContainer}>\n                {columns.map((column, index) => (\n                  <Tooltip title={columnTitles[index]}>\n                    <Chip\n                      label={data[dataIndex][column] !== '-1' ? data[dataIndex][column] : '-'}\n                      key={index}\n                      size=\"small\"\n                    />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          },\n          setCellProps: () => ({ style: { minWidth: '20vw' } })\n        }\n      },\n      {\n        name: noteCol,\n        label: t('Note'),\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: referenceCol,\n        label: t('Reference'),\n        options: {\n          filter: true\n        }\n      }\n    ]\n\n    const options = {\n      filter: true,\n      filterType: 'dropdown',\n      selectableRows: 'none',\n      rowsPerPage: 20,\n      print: false\n    }\n\n    return (\n      <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable title={t('Water Qualities')} data={data} columns={columns} options={options} />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles)(withTranslation()(WaterQualities))\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport UnitProcesses from './UnitProcesses'\nimport GeneralReference from './GeneralReference'\nimport Pestle from './Pestle'\nimport CaseStudies from './CaseStudies'\n\nimport TreatmentTrains from './TreatmentTrains'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport { useTranslation } from 'react-i18next'\nimport WaterQualities from './WaterQualities'\n\nconst useStyles = makeStyles({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    justifyItems: 'center',\n    justifyContent: 'space-between'\n  },\n  main: {\n    display: 'grid',\n    minHeight: 'calc(100vh - 300px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 20\n  },\n  title: {\n    textAlign: 'left'\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n})\n\nexport const Learn = () => {\n  const { t } = useTranslation()\n\n  const classes = useStyles()\n\n  const [menuPoint, setMenuPoint] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setMenuPoint(newValue)\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Paper className={classes.root} square elevation={3}>\n          <Tabs value={menuPoint} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" centered>\n            <Tab label={t('General Reference')} to={`${process.env.PUBLIC_URL}/general`} component={Link} />\n            <Tab label={t('PESTLE')} to={`${process.env.PUBLIC_URL}/pestle`} component={Link} />\n            <Tab label={t('Water Qualities')} to={`${process.env.PUBLIC_URL}/waterqualities`} component={Link} />\n            <Tab label={t('Unit Processes')} to={`${process.env.PUBLIC_URL}/unitprocesses`} component={Link} />\n            <Tab label={t('Treatment Trains')} to={`${process.env.PUBLIC_URL}/treatmenttrains`} component={Link} />\n            <Tab label={t('Case Studies')} to={`${process.env.PUBLIC_URL}/casestudies`} component={Link} />\n          </Tabs>\n        </Paper>\n\n        <div className={classes.main}>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/learn`} component={GeneralReference} />\n            <Route path={`${process.env.PUBLIC_URL}/general`} component={GeneralReference} />\n            <Route path={`${process.env.PUBLIC_URL}/pestle`} component={Pestle} />\n            <Route path={`${process.env.PUBLIC_URL}/waterqualities`} component={WaterQualities} />\n            <Route path={`${process.env.PUBLIC_URL}/unitprocesses`} component={UnitProcesses} />\n            <Route path={`${process.env.PUBLIC_URL}/treatmenttrains`} component={TreatmentTrains} />\n            <Route path={`${process.env.PUBLIC_URL}/casestudies`} component={CaseStudies} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const caseSlice = createSlice({\n  name: 'case',\n  initialState: {\n    step: 0,\n    completedSteps: [null, null, null, null],\n    commInfo: {\n      countryID: null,\n      currency: null //0 is USD, 1 is local currency\n    },\n    inputQuality: {\n      category: null,\n      qualityClass: null\n    },\n    endUse: {\n      category: null,\n      qualityClass: null\n    },\n    quantity: {\n      amount: null,\n      distance: null,\n      heightDifference: null\n    },\n    solution: {\n      noneNeeded: true,\n      noneAvailable: false\n    },\n    solutions: [\n      {\n        treatmentTrain: null,\n        rating: null,\n        price: null\n      },\n      {\n        treatmentTrain: null,\n        rating: null,\n        price: null\n      },\n      {\n        treatmentTrain: null,\n        rating: null,\n        price: null\n      }\n    ]\n  },\n  reducers: {\n    next: state => {\n      state.step += 1\n    },\n    previous: state => {\n      state.step -= 1\n    },\n    reset: state => {\n      state.step = 0\n    },\n    setStep: (state, action) => {\n      state.step = action.payload\n    },\n    setCountry: (state, action) => {\n      state.commInfo.countryID = action.payload\n      state.commInfo.currency = null\n      state.completedSteps[0] = null\n    },\n    setCurrency: (state, action) => {\n      action.payload === 1000 ? (state.commInfo.currency = 0) : (state.commInfo.currency = 1)\n      state.completedSteps[0] = 0\n    },\n    setInputQualityCategory: (state, action) => {\n      state.inputQuality.category = action.payload\n      state.inputQuality.qualityClass = null\n      state.completedSteps[1] = null\n    },\n    setInputQualityClass: (state, action) => {\n      state.inputQuality.qualityClass = action.payload\n      state.completedSteps[1] = 1\n    },\n    setEndUseQualityCategory: (state, action) => {\n      state.endUse.category = action.payload\n      state.endUse.qualityClass = null\n      state.completedSteps[2] = null\n    },\n    setEndUseQualityClass: (state, action) => {\n      state.endUse.qualityClass = action.payload\n      state.completedSteps[2] = 2\n    },\n    setQuantity: (state, action) => {\n      state.quantity.amount = action.payload\n      if (action.payload === null) {\n        state.completedSteps[3] = null\n      }\n      if (action.payload !== null && state.quantity.distance !== null) {\n        state.completedSteps[3] = 3\n      }\n    },\n    setDistance: (state, action) => {\n      state.quantity.distance = action.payload\n      if (action.payload === null) {\n        state.completedSteps[3] = null\n      }\n      if (action.payload !== null && state.quantity.quantity !== null) {\n        state.completedSteps[3] = 3\n      }\n    },\n    setHeightDifference: (state, action) => {\n      state.quantity.heightDifference = action.payload\n    },\n    setSolutionNoneNeeded: (state, action) => {\n      state.solution.noneNeeded = action.payload\n    },\n    resetSolutions: state => {\n      state.solution.noneNeeded = false\n      state.solution.noneAvailable = false\n    },\n    setSolutionNoneAvailable: (state, action) => {\n      state.solution.noneAvailable = action.payload\n    },\n    setSolutions: (state, action) => {\n      console.log(action.payload)\n      action.payload.map((treatment, index) => {\n        console.log(treatment, index)\n        state.solutions[index].treatmentTrain = treatment.treatmentTrain\n        state.solutions[index].rating = treatment.rating\n        return null\n      })\n      //state.solution1.treatmentTrain = action.payload\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const {\n  next,\n  previous,\n  reset,\n  setStep,\n  setCountry,\n  setCurrency,\n  setInputQualityCategory,\n  setInputQualityClass,\n  setEndUseQualityCategory,\n  setEndUseQualityClass,\n  setQuantity,\n  setDistance,\n  setHeightDifference,\n  resetSolutions,\n  setSolutionNoneNeeded,\n  setSolutionNoneAvailable,\n  setSolutions\n} = caseSlice.actions\n\nexport default caseSlice.reducer\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport communityInfo from '../data/communityInfo'\nimport { setCountry, setCurrency } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nexport default function CommInfo() {\n  const commInfo = useSelector(state => state.case.commInfo)\n  const dispatch = useDispatch()\n  const countries = []\n  communityInfo.map(country => {\n    return countries.push(country.name)\n  })\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  const usdObj = { id: 1000, currency: 'USD' }\n\n  if (commInfo.countryID === null) {\n    dispatch(setCountry(0))\n  }\n  if (commInfo.currency === null) {\n    dispatch(setCurrency(0))\n  }\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">{t('Community Information')}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Country')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"country\"\n          options={communityInfo}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : null)}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setCountry(newValue.id))}\n          disableClearable\n          value={commInfo.countryID !== null ? communityInfo[commInfo.countryID] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title={t('Information about countries')}>\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Currency')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"currency\"\n          options={[communityInfo[commInfo.countryID], usdObj]}\n          getOptionLabel={option => option.currency}\n          getOptionSelected={(option, value) => option.currency === value.currency}\n          onChange={(event, newValue) => dispatch(setCurrency(newValue.id))}\n          disableClearable\n          value={\n            commInfo.currency !== null ? (commInfo.currency === 0 ? usdObj : communityInfo[commInfo.countryID]) : null\n          }\n          disabled={commInfo.countryID === null ? true : false}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title={t('Information about currencies')}>\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      {commInfo.currency !== null ? (\n        <>\n          <Grid item xs={4}>\n            <Typography>{t('Land Cost')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>\n              {commInfo.currency === 0\n                ? Math.round(communityInfo[commInfo.countryID].landCost * 100) / 100 + ' ' + usdObj.currency\n                : Math.round(\n                    communityInfo[commInfo.countryID].landCost * communityInfo[commInfo.countryID].exchangeToUSD * 100\n                  ) /\n                    100 +\n                  ' ' +\n                  communityInfo[commInfo.countryID].currency}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography>{t('Electricity Cost')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>\n              {commInfo.currency === 0\n                ? Math.round(communityInfo[commInfo.countryID].electricityCost * 100) / 100 + ' ' + usdObj.currency\n                : Math.round(\n                    communityInfo[commInfo.countryID].electricityCost *\n                      communityInfo[commInfo.countryID].exchangeToUSD *\n                      100\n                  ) /\n                    100 +\n                  ' ' +\n                  communityInfo[commInfo.countryID].currency}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography>{t('Personal Cost')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>\n              {commInfo.currency === 0\n                ? Math.round(communityInfo[commInfo.countryID].personalCost * 100) / 100 + ' ' + usdObj.currency\n                : Math.round(\n                    communityInfo[commInfo.countryID].personalCost *\n                      communityInfo[commInfo.countryID].exchangeToUSD *\n                      100\n                  ) /\n                    100 +\n                  ' ' +\n                  communityInfo[commInfo.countryID].currency}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography>{t('Discount Rate')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>{communityInfo[commInfo.countryID].discountRate * 100 + '%'}</Typography>\n          </Grid>\n        </>\n      ) : (\n        <div />\n      )}\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { useTheme } from '@material-ui/core/styles'\nimport { Paper } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nexport const Bar = props => {\n  const theme = useTheme()\n  const { t } = useTranslation()\n\n  var outputColor = theme.palette.primary.main\n\n  if (Number(props.input) > Number(props.output)) {\n    outputColor = theme.palette.error.main\n  } else {\n    outputColor = theme.palette.success.main\n  }\n\n  const average = {\n    name: t('avg. input'),\n    [props.factor]: props.average,\n    color: theme.palette.action.disabled\n  }\n\n  const input = {\n    name: t('input'),\n    [props.factor]: props.input,\n    color: theme.palette.primary.main\n  }\n\n  const output = {\n    name: t('output'),\n    [props.factor]: props.output,\n    color: outputColor\n  }\n\n  let data = []\n\n  if (props.input) {\n    data.push(input)\n  }\n\n  if (props.output) {\n    data.push(output)\n  }\n\n  if (props.average & props.input) {\n    data.push(average)\n  }\n\n  var legend\n\n  if (props.factor === 'turbidity') {\n    legend = t('Turbidity') + ' [' + props.unit + ']'\n  } else {\n    legend = props.factor.toUpperCase() + ' [' + props.unit + ']'\n  }\n\n  function getLabel(d) {\n    if (props.factor === 'tc' || props.factor === 'fc') {\n      return Number(d.value)\n        .toExponential()\n        .toLocaleString('de-CH')\n    } else {\n      return Number(d.value).toLocaleString('de-CH')\n    }\n  }\n\n  return (\n    <div style={{ height: 250, width: 100 }}>\n      <ResponsiveBar\n        data={data}\n        indexBy=\"name\"\n        keys={[props.factor]}\n        margin={{ top: 10, right: 0, bottom: 50, left: 0 }}\n        padding={0.3}\n        valueScale={{ type: 'linear' }}\n        indexScale={{ type: 'band', round: true }}\n        colors={d => d.data.color}\n        colorBy=\"id\"\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: legend,\n          legendPosition: 'middle',\n          legendOffset: 40\n        }}\n        labelSkipHeight={36}\n        label={d => getLabel(d)}\n        enableGridY={false}\n        animate={true}\n        motionStiffness={115}\n        motionDamping={15}\n        tooltip={({ id, value }) => (\n          <Paper\n            style={{\n              padding: 12,\n              background: '#fff'\n            }}\n          >\n            {id.toUpperCase() + ':'} <br /> {Number(value).toLocaleString('de-CH') + ' [' + props.unit + ']'}\n          </Paper>\n        )}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport waterQualities from '../data/waterQualities.json'\nimport waterQualityCategories from '../data/waterQualityCategories.json'\nimport waterQualityFactors from '../data/waterQualityFactors.json'\nimport { setInputQualityCategory, setInputQualityClass } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\nimport { Bar } from './Bar'\nimport { useTheme } from '@material-ui/core/styles'\n\nexport default function InputQuality() {\n  const inputQuality = useSelector(state => state.case.inputQuality)\n  const dispatch = useDispatch()\n\n  const theme = useTheme()\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  if (inputQuality.category === null) {\n    dispatch(setInputQualityCategory(28))\n  }\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">{t('Input Quality & Quantity')}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Category')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"category\"\n          options={waterQualityCategories.filter(category => category.input === true)}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : null)}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setInputQualityCategory(newValue.id))}\n          disableClearable\n          value={inputQuality.category !== null ? waterQualityCategories[inputQuality.category] : null} //Peru is default Category\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about categories\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Water Quality Class')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"quality\"\n          options={waterQualities.filter(q => q.category === inputQuality.category)}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : null)}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setInputQualityClass(newValue.id))}\n          disableClearable\n          value={inputQuality.qualityClass !== null ? waterQualities[inputQuality.qualityClass] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n          disabled={inputQuality.category === null ? true : false}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about water quality classes\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n\n      <Grid item container xs={12} justify=\"space-evenly\" alignItems=\"center\">\n        {inputQuality.qualityClass !== null\n          ? waterQualityFactors.map(f => {\n              const key = f.name\n\n              return (\n                <div style={{ width: 'calc(1/6*80%' }}>\n                  <Bar\n                    factor={f.name}\n                    unit={f.unit}\n                    input={\n                      inputQuality.qualityClass === null\n                        ? null\n                        : waterQualities[inputQuality.qualityClass][key] < 0\n                        ? null\n                        : waterQualities[inputQuality.qualityClass][key]\n                    }\n                    average={waterQualities[0][key]}\n                  />\n                </div>\n              )\n            })\n          : waterQualityFactors.map(f => {\n              return (\n                <div style={{ width: 'calc(1/6*80%' }}>\n                  <Bar factor={f.name} unit={f.unit} />\n                </div>\n              )\n            })}\n      </Grid>\n\n      <Grid item container xs={12} justify=\"space-evenly\" alignItems=\"flex-start\">\n        <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\n          <Grid item>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\">\n              <g>\n                <rect width=\"10\" height=\"10\" fill={theme.palette.primary.main} stroke-width=\"0\"></rect>\n              </g>\n            </svg>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"caption\">{t('Input')}</Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\n          <Grid item>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\">\n              <g>\n                <rect width=\"10\" height=\"10\" fill={theme.palette.action.disabled} stroke-width=\"0\"></rect>\n              </g>\n            </svg>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"caption\">{t('Average Input')}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport waterQualities from '../data/waterQualities.json'\nimport waterQualityCategories from '../data/waterQualityCategories.json'\nimport waterQualityFactors from '../data/waterQualityFactors.json'\nimport { setEndUseQualityCategory, setEndUseQualityClass } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\nimport { Bar } from './Bar'\nimport { useTheme } from '@material-ui/core/styles'\n\nexport default function EndUse() {\n  const endUse = useSelector(state => state.case.endUse)\n  const inputQuality = useSelector(state => state.case.inputQuality)\n\n  const dispatch = useDispatch()\n\n  const theme = useTheme()\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  if (endUse.category === null) {\n    dispatch(setEndUseQualityCategory(29))\n  }\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">{t('End Use')}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Category')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"category\"\n          options={waterQualityCategories.filter(category => category.input === false)}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : '')}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setEndUseQualityCategory(newValue.id))}\n          disableClearable\n          value={endUse.category !== null ? waterQualityCategories[endUse.category] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about categories\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Water Quality Class')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"quality\"\n          options={waterQualities.filter(q => q.category === endUse.category)}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : '')}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setEndUseQualityClass(newValue.id))}\n          disableClearable\n          value={endUse.qualityClass !== null ? waterQualities[endUse.qualityClass] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n          disabled={endUse.category === null ? true : false}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about water quality classes\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n\n      <Grid item container xs={12} justify=\"space-evenly\" alignItems=\"center\">\n        {endUse.qualityClass !== null\n          ? waterQualityFactors.map(f => {\n              const key = f.name\n\n              return (\n                <div style={{ width: 'calc(1/6*80%' }}>\n                  <Bar\n                    factor={f.name}\n                    unit={f.unit}\n                    input={\n                      waterQualities[inputQuality.qualityClass][key] < 0\n                        ? null\n                        : waterQualities[inputQuality.qualityClass][key]\n                    }\n                    output={\n                      waterQualities[endUse.qualityClass][key] < 0 ? null : waterQualities[endUse.qualityClass][key]\n                    }\n                  />\n                </div>\n              )\n            })\n          : waterQualityFactors.map(f => {\n              const key = f.name\n\n              return (\n                <div style={{ width: 'calc(1/6*80%' }}>\n                  <Bar\n                    factor={f.name}\n                    unit={f.unit}\n                    input={\n                      waterQualities[inputQuality.qualityClass][key] < 0\n                        ? null\n                        : waterQualities[inputQuality.qualityClass][key]\n                    }\n                  />\n                </div>\n              )\n            })}\n      </Grid>\n\n      <Grid item container xs={12} justify=\"space-evenly\" alignItems=\"flex-start\">\n        <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\n          <Grid item>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\">\n              <g>\n                <rect width=\"10\" height=\"10\" fill={theme.palette.primary.main} stroke-width=\"0\"></rect>\n              </g>\n            </svg>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"caption\">{t('Input')}</Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\n          <Grid item>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\">\n              <g>\n                <rect width=\"10\" height=\"10\" fill={theme.palette.error.main} stroke-width=\"0\"></rect>\n              </g>\n            </svg>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"caption\">{t('End use, needs treatment')}</Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\n          <Grid item>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\">\n              <g>\n                <rect width=\"10\" height=\"10\" fill={theme.palette.success.main} stroke-width=\"0\"></rect>\n              </g>\n            </svg>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"caption\">{t('End use, no treatment needed')}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Chip from '@material-ui/core/Chip'\nimport Paper from '@material-ui/core/Paper'\nimport { Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport treatmentTrains from '../data/treatmentTrains.json'\nimport unitProcesses from '../data/unitProcesses.json'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport i18next from 'i18next'\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    backgroundColor: theme.palette.background.default,\n    padding: 10\n  }\n}))\n\nexport default function SolutionsBox() {\n  const classes = useStyles()\n\n  const caseState = useSelector(state => state.case)\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  return (\n    <Paper className={classes.paper} elevation={0}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">{t('Solutions')}</Typography>\n          <Typography variant=\"caption\">\n            {caseState.solution.noneNeeded\n              ? t(\n                  'Based on your input, no treatment is needed because the input quality is better than the end use quality.'\n                )\n              : caseState.solution.noneAvailable\n              ? t('Based on your input, theres no possible solution')\n              : t('Based on your input, the following treatment trains are best suited for the case.')}\n          </Typography>\n        </Grid>\n\n        {!caseState.solution.noneNeeded & !caseState.solution.noneAvailable ? (\n          <Grid item container xs={12} spacing={1} alignItems=\"center\">\n            {caseState.solutions.map((solution, index) => (\n              <>\n                <Grid item container justify=\"flex-start\" spacing={1} xs={12}>\n                  <Grid item>\n                    <Chip label={index + 1} color=\"secondary\" size=\"small\" />\n                  </Grid>\n                  <Grid item>\n                    <Typography>{treatmentTrains[solution.treatmentTrain].title}</Typography>\n                  </Grid>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography>{t('Category')}:</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography>{treatmentTrains[solution.treatmentTrain].category}</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography>{t('Rating')}:</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography>{Math.round(((solution.rating * 10) / 3) * 1000) / 1000}</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography>{t('Unit Processes')}:</Typography>\n                </Grid>\n                <Grid item xs={6}>\n                  <Typography>\n                    {treatmentTrains[solution.treatmentTrain].unit_processes.map((up, index) => (\n                      <Tooltip title={lang === 'en' ? unitProcesses[up].name : unitProcesses[up].nameEs}>\n                        <Chip label={up} key={index} size=\"small\" color=\"primary\" style={{ margin: 2 }} />\n                      </Tooltip>\n                    ))}\n                  </Typography>\n                </Grid>\n              </>\n            ))}\n          </Grid>\n        ) : (\n          <div />\n        )}\n      </Grid>\n    </Paper>\n  )\n}\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setQuantity, setDistance, setHeightDifference } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport SolutionsBox from './SolutionsBox'\nimport CalculateSolutions from '../case/CalculateSolutions'\n\nexport default function Quantity() {\n  const quantity = useSelector(state => state.case.quantity)\n  const dispatch = useDispatch()\n\n  CalculateSolutions()\n\n  const { t } = useTranslation()\n\n  const [validQuantity, setValidQuantity] = React.useState(true)\n\n  const handleChangeQuantity = value => {\n    if (value >= 1 && value <= 1000000) {\n      setValidQuantity(true)\n      dispatch(setQuantity(value))\n    } else {\n      setValidQuantity(false)\n      dispatch(setQuantity(null))\n    }\n  }\n\n  const [validDistance, setValidDistance] = React.useState(true)\n\n  const handleChangeDistance = value => {\n    if (value >= 1 && value <= 100000) {\n      setValidDistance(true)\n      dispatch(setDistance(value))\n    } else {\n      setValidDistance(false)\n      dispatch(setDistance(null))\n    }\n  }\n\n  const [validHeightDifference, setValidHeightDifference] = React.useState(true)\n\n  const handleChangeHeightDifference = value => {\n    if (value >= -1000 && value <= 1000) {\n      setValidHeightDifference(true)\n      dispatch(setHeightDifference(value))\n    } else {\n      setValidHeightDifference(false)\n      dispatch(setHeightDifference(null))\n    }\n  }\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"flex-start\" spacing={3}>\n      <Grid item container xs={8} direction=\"row\" alignItems=\"center\" spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">{t('Quantity')}</Typography>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography style={{ marginBottom: 20 }}>{t('Average Quantity')}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            error={!validQuantity}\n            helperText={!validQuantity ? t('Number must be integer and between 1 and 1 million') : ' '}\n            id=\"standard-number\"\n            type=\"number\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            onChange={event => handleChangeQuantity(event.target.value)}\n            value={quantity.amount !== null ? quantity.amount : null}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">m&sup3;/{t('day')}</InputAdornment>\n            }}\n            fullWidth\n          />\n        </Grid>\n\n        <Grid item xs={2} style={{ textAlign: 'center' }}>\n          <Tooltip title=\"Information about amounts\">\n            <Chip style={{ marginBottom: 20 }} label=\"?\" size=\"small\" />\n          </Tooltip>\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography style={{ marginBottom: 20 }}>{t('Distance')}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            error={!validDistance}\n            helperText={!validDistance ? t(\"Number must be integer and between 1 and 100'000\") : ' '}\n            id=\"standard-number\"\n            type=\"number\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            onChange={event => handleChangeDistance(event.target.value)}\n            value={quantity.distance !== null ? quantity.distance : null}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">m</InputAdornment>\n            }}\n            fullWidth\n          />\n        </Grid>\n\n        <Grid item xs={2} style={{ textAlign: 'center' }}>\n          <Tooltip title=\"Information about distance\">\n            <Chip style={{ marginBottom: 20 }} label=\"?\" size=\"small\" />\n          </Tooltip>\n        </Grid>\n\n        <Grid item xs={4}>\n          <Typography style={{ marginBottom: 20 }}>{t('Height Difference')}</Typography>\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            error={!validHeightDifference}\n            helperText={!validHeightDifference ? t(\"Number must be integer and between -1'000 and 1'000\") : ' '}\n            id=\"standard-number\"\n            type=\"number\"\n            variant=\"outlined\"\n            InputLabelProps={{\n              shrink: true\n            }}\n            onChange={event => handleChangeHeightDifference(event.target.value)}\n            value={quantity.heightDifference !== null ? quantity.heightDifference : null}\n            InputProps={{\n              endAdornment: <InputAdornment position=\"end\">m</InputAdornment>\n            }}\n            fullWidth\n          />\n        </Grid>\n\n        <Grid item xs={2} style={{ textAlign: 'center' }}>\n          <Tooltip title=\"Information about height differences\">\n            <Chip style={{ marginBottom: 20 }} label=\"?\" size=\"small\" />\n          </Tooltip>\n        </Grid>\n      </Grid>\n      <Grid item container xs={4}>\n        <SolutionsBox />\n      </Grid>\n    </Grid>\n  )\n}\n","import { useSelector, useDispatch } from 'react-redux'\nimport { setSolutionNoneAvailable, setSolutionNoneNeeded, setSolutions } from './caseSlice'\nimport waterQualities from '../data/waterQualities'\nimport unitProcesses from '../data/unitProcesses'\nimport treatmentTrains from '../data/treatmentTrains'\n\nexport default function CalculateSolutions() {\n  const dispatch = useDispatch()\n\n  const caseState = useSelector(state => state.case)\n\n  const inputQuality = waterQualities[caseState.inputQuality.qualityClass]\n  const endUseQuality = waterQualities[caseState.endUse.qualityClass]\n\n  const relevantFactors = ['turbidity', 'tss', 'bod', 'cod', 'fc', 'tc']\n\n  let treatmentFactors = []\n\n  relevantFactors.forEach(factor => {\n    if ((Number(inputQuality[factor]) > Number(endUseQuality[factor])) & (endUseQuality[factor] !== -1)) {\n      //Check here if -1 and don't push?\n      dispatch(setSolutionNoneNeeded(false))\n      treatmentFactors.push(factor)\n    }\n  })\n\n  const evaluationCriteria = [\n    'reliability',\n    'ease_to_upgrade',\n    'adaptability_to_varying_flow',\n    'adaptability_to_varying_quality',\n    'ease_of_om',\n    'ease_of_construction',\n    'ease_of_demonstration',\n    'power_demand',\n    'chemical_demand',\n    'odor_generation',\n    'impact_on_ground_water',\n    'land_requirements',\n    'cost_of_treatment',\n    'waste'\n  ]\n\n  console.log(inputQuality, endUseQuality, treatmentFactors)\n\n  function findSuitableTreatments(input, endUse, factors) {\n    let outputQualities = []\n\n    treatmentTrains.forEach((treatmentTrain, index) => {\n      let suitableTreatmentTrain = true\n      let outputQualityPerFactor = []\n      let rating = 0\n\n      factors.forEach((factor, index) => {\n        let outputQualityStep = Number(input[factor])\n        treatmentTrain.unit_processes.forEach(unitProcess => {\n          outputQualityStep = outputQualityStep - (outputQualityStep * Number(unitProcesses[unitProcess][factor])) / 100\n\n          if (index === 0) {\n            //do rating in the unitProcesses loop but not in the factors loop\n            evaluationCriteria.forEach(criteria => {\n              rating = rating + Number(unitProcesses[unitProcess][criteria])\n            })\n          }\n        })\n\n        outputQualityPerFactor[factor] = outputQualityStep\n\n        if (outputQualityPerFactor[factor] > Number(endUse[factor])) {\n          suitableTreatmentTrain = false\n        }\n      })\n\n      if (suitableTreatmentTrain) {\n        outputQualities.push({\n          id: index,\n          treatmentTrain: treatmentTrain.id,\n          treatmentTrainTitle: treatmentTrain.title, //not necessary\n          turbidity: outputQualityPerFactor['turbidity'],\n          tss: outputQualityPerFactor['tss'],\n          bod: outputQualityPerFactor['bod'],\n          cod: outputQualityPerFactor['cod'],\n          fc: outputQualityPerFactor['fc'],\n          tc: outputQualityPerFactor['tc'],\n          rating: rating / treatmentTrain.unit_processes.length / evaluationCriteria.length\n        })\n      }\n    })\n\n    if (outputQualities.length === 0) {\n      dispatch(setSolutionNoneAvailable(true))\n    } else {\n      dispatch(setSolutionNoneAvailable(false))\n    }\n\n    console.log('output qualities', outputQualities)\n\n    return outputQualities\n  }\n\n  function findTopTreatments(outputQualities) {\n    const topThreeTreatments = outputQualities.sort((a, b) => b.rating - a.rating).slice(0, 3)\n\n    console.log('top-three', topThreeTreatments)\n\n    return topThreeTreatments\n  }\n\n  /* console.log('output qualities', findSuitableTreatments(inputQuality, endUseQuality, treatmentFactors))\n\n  console.log('top-three', findTopTreatments(findSuitableTreatments(inputQuality, endUseQuality, treatmentFactors))) */\n\n  const topThreeTreatments = findTopTreatments(findSuitableTreatments(inputQuality, endUseQuality, treatmentFactors))\n\n  dispatch(setSolutions(topThreeTreatments))\n\n  console.log(caseState)\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\nimport { Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nimport communityInfo from '../data/communityInfo'\nimport waterQualities from '../data/waterQualities.json'\n\nimport PublicIcon from '@material-ui/icons/Public'\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\nimport BatteryFullIcon from '@material-ui/icons/BatteryFull'\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\n\nexport const CaseSummary = props => {\n  const { step } = props\n\n  const caseState = useSelector(state => state.case)\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  return (\n    <div style={{ paddingTop: 5 }}>\n      <Grid item container spacing={1} alignItems=\"flex-start\">\n        {step === 0 ? (\n          <>\n            <Grid item>\n              {caseState.commInfo.countryID !== null ? (\n                <Grid container alignItems=\"center\" direction=\"row\" spacing={0}>\n                  <PublicIcon fontSize=\"small\" color=\"primary\" />\n\n                  <Typography variant=\"caption\">\n                    {lang === 'en'\n                      ? communityInfo[caseState.commInfo.countryID].name\n                      : communityInfo[caseState.commInfo.countryID].nameEs}\n                  </Typography>\n                  {caseState.commInfo.currency !== null ? (\n                    <>\n                      <AttachMoneyIcon fontSize=\"small\" color=\"primary\" />\n                      <Typography variant=\"caption\">\n                        {caseState.commInfo.currency === 0\n                          ? 'USD'\n                          : communityInfo[caseState.commInfo.countryID].currency}\n                      </Typography>\n                    </>\n                  ) : (\n                    <div />\n                  )}\n                </Grid>\n              ) : (\n                <div />\n              )}\n            </Grid>\n          </>\n        ) : (\n          <div />\n        )}\n\n        {step === 1 ? (\n          <Grid item>\n            {caseState.inputQuality.qualityClass !== null ? (\n              <Grid container alignItems=\"center\" direction=\"row\" spacing={0}>\n                <ExitToAppIcon fontSize=\"small\" color=\"primary\" />\n                <Typography variant=\"caption\">\n                  {lang === 'en'\n                    ? waterQualities[caseState.inputQuality.qualityClass].name\n                    : waterQualities[caseState.inputQuality.qualityClass].nameEs}\n                </Typography>\n              </Grid>\n            ) : (\n              <div />\n            )}\n          </Grid>\n        ) : (\n          <div />\n        )}\n\n        {step === 2 ? (\n          <Grid item>\n            {caseState.endUse.qualityClass !== null ? (\n              <Grid container alignItems=\"center\" direction=\"row\" spacing={0}>\n                <AutorenewIcon fontSize=\"small\" color=\"primary\" />\n                <Typography variant=\"caption\">\n                  {lang === 'en'\n                    ? waterQualities[caseState.endUse.qualityClass].name\n                    : waterQualities[caseState.endUse.qualityClass].nameEs}\n                </Typography>\n              </Grid>\n            ) : (\n              <div />\n            )}\n          </Grid>\n        ) : (\n          <div />\n        )}\n\n        {step === 3 ? (\n          <Grid item>\n            {caseState.quantity.amount !== null ? (\n              <Grid container alignItems=\"center\" direction=\"row\" spacing={0}>\n                <BatteryFullIcon fontSize=\"small\" color=\"primary\" />\n                <Typography variant=\"caption\">\n                  {caseState.quantity.amount}m&sup3;/{t('day')}\n                </Typography>\n                {caseState.quantity.distance !== null ? (\n                  <>\n                    <ArrowRightAltIcon fontSize=\"small\" color=\"primary\" />\n                    <Typography variant=\"caption\">{caseState.quantity.distance}m</Typography>\n                  </>\n                ) : (\n                  <div />\n                )}\n\n                {caseState.quantity.heightDifference !== null ? (\n                  <>\n                    <ArrowUpwardIcon fontSize=\"small\" color=\"primary\" />\n\n                    <Typography variant=\"caption\">{caseState.quantity.heightDifference}m</Typography>\n                  </>\n                ) : (\n                  <div />\n                )}\n              </Grid>\n            ) : (\n              <div />\n            )}\n          </Grid>\n        ) : (\n          <div />\n        )}\n      </Grid>\n    </div>\n  )\n}\n","import { createMuiTheme } from '@material-ui/core'\n\nconst colors = {\n  main: '#00838f'\n}\n\nconst secondary = {\n  main: '#ef6c00'\n}\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary\n  }\n})\n\nexport const lightTheme = createMuiTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary,\n    type: 'light'\n  }\n})\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary,\n    type: 'dark'\n  }\n})\n","import React from 'react'\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\n\nimport CommInfo from './CommInfo'\nimport InputQuality from './InputQuality'\nimport EndUse from './EndUse'\nimport Quantity from './Quantity'\nimport { CaseSummary } from './CaseSummary'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport StepConnector from '@material-ui/core/StepConnector'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { next, previous, reset } from '../case/caseSlice'\nimport { theme } from '../theme/theme'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    justifyItems: 'center',\n    justifyContent: 'space-between'\n  },\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  step: {\n    minHeight: 'calc(100vh - 300px)'\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}))\n\nconst CustomConnector = withStyles({\n  root: {\n    alignSelf: 'flex-start',\n    paddingTop: '13px' //This hardcoded value sets the line in the middle of the stepper icons. It's not optimal.\n  },\n  line: {\n    borderRadius: 1\n  }\n})(StepConnector)\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <CommInfo />\n    case 1:\n      return <InputQuality />\n    case 2:\n      return <EndUse />\n    case 3:\n      return <Quantity />\n    default:\n      return 'Unknown step'\n  }\n}\n\nexport const Case = () => {\n  const { t } = useTranslation()\n\n  const getSteps = () => {\n    return [t('Community Information'), t('Input Quality'), t('End Use'), t('Quantity'), t('Personalize Solutions')]\n  }\n\n  const count = useSelector(state => state.case.step)\n  const completedSteps = useSelector(state => state.case.completedSteps)\n\n  const dispatch = useDispatch()\n\n  const classes = useStyles()\n  const steps = getSteps()\n\n  const handleReset = () => {\n    dispatch(reset())\n  }\n\n  return (\n    <div className=\"App\">\n      <Paper className={classes.root} square elevation={3}>\n        <Stepper activeStep={count} connector={<CustomConnector />}>\n          {steps.map((label, index) => {\n            const stepProps = {}\n            const labelProps = {}\n            return (\n              <Step key={label} {...stepProps} style={{ alignSelf: 'flex-start' }}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n                <CaseSummary step={index} />\n              </Step>\n            )\n          })}\n        </Stepper>\n      </Paper>\n\n      <div className={classes.main}>\n        <Paper elevation={0} style={{ padding: 10 }}>\n          <Grid container spacing={3}>\n            <Grid item container xs={12}>\n              {count === steps.length ? (\n                <div>\n                  <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\n                  <Button onClick={handleReset} className={classes.button}>\n                    Reset\n                  </Button>\n                </div>\n              ) : (\n                <Grid\n                  item\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  alignItems=\"center\"\n                  className={classes.step}\n                >\n                  {getStepContent(count)}\n\n                  <div style={{ paddingTop: theme.spacing(2) }}>\n                    <Button disabled={count === 0} onClick={() => dispatch(previous())} className={classes.button}>\n                      {t('Back')}\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => dispatch(next())}\n                      className={classes.button}\n                      disabled={completedSteps.includes(count) ? false : true}\n                    >\n                      {count === steps.length - 1 ? t('Finish') : t('Next')}\n                    </Button>\n                  </div>\n                </Grid>\n              )}\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TranslateIcon from '@material-ui/icons/Translate'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport i18next from 'i18next'\n\nexport default function SimpleMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleChooseLanguage = lang => {\n    i18next.changeLanguage(lang)\n    handleClose()\n  }\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        startIcon={<TranslateIcon />}\n        endIcon={<ExpandMoreIcon />}\n        color=\"inherit\"\n      >\n        {i18next.language === 'en' ? 'English' : 'Español'}\n      </Button>\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n        <MenuItem value=\"en\" onClick={() => handleChooseLanguage('en')}>\n          English\n        </MenuItem>\n        <MenuItem value=\"es\" onClick={() => handleChooseLanguage('es')}>\n          Español\n        </MenuItem>\n      </Menu>\n    </div>\n  )\n}\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport MenuBookIcon from '@material-ui/icons/MenuBook'\nimport AddBoxIcon from '@material-ui/icons/AddBox'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport { Learn } from './Learn'\nimport { Case } from './Case'\nimport UserMenu from './UserMenu'\nimport { useTranslation } from 'react-i18next'\nimport OpacityIcon from '@material-ui/icons/Opacity'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    justifyItems: 'center',\n    justifyContent: 'space-between'\n  },\n  title: {\n    textAlign: 'left'\n  },\n  root: {\n    flexGrow: 1\n  }\n})\n\nexport const App = () => {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <AppBar elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            <div>\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                component={Link}\n                to={`${process.env.PUBLIC_URL}/learn`}\n                startIcon={<MenuBookIcon />}\n                color=\"inherit\"\n              >\n                {t('Learn')}\n              </Button>\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                component={Link}\n                to={`${process.env.PUBLIC_URL}/case`}\n                startIcon={<AddBoxIcon />}\n                color=\"inherit\"\n              >\n                {t('New Case')}\n              </Button>\n            </div>\n            <Grid container alignItems=\"center\" spacing={1} justify=\"center\">\n              <Grid item>\n                <OpacityIcon />\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h6\">Poseidon Web alpha 0.1</Typography>\n              </Grid>\n            </Grid>\n            {/* <div className={classes.title}>\n              <Typography>\n              <OpacityIcon style={{position: 'relative', top: '8px'}} /> Poseidon Web alpha 0.1\n                </Typography>\n            </div> */}\n            <div>\n              <UserMenu />\n            </div>\n            {/* <ThemeSwitch /> */}\n          </Toolbar>\n        </AppBar>\n\n        <div>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`} component={Learn} />\n            <Route path={`${process.env.PUBLIC_URL}/learn`} component={Learn} />\n            <Route path={`${process.env.PUBLIC_URL}/case`} component={Case} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n","import { App as AppComponent } from '../components/App'\nimport * as React from 'react'\nimport { CssBaseline, MuiThemeProvider as ThemeProvider } from '@material-ui/core'\nimport { theme } from '../theme/theme'\n\nexport const App = () => {\n  // This is the only place we need to access the theme via our own model\n  // From here on, it is safe and convenient to use the `useTheme` hook\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppComponent />\n    </ThemeProvider>\n  )\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport caseReducer from './case/caseSlice'\n\nexport default configureStore({\n  reducer: {\n    case: caseReducer\n  }\n})\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport { resources } from './translations'\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'en', // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n    // if you're using a language detector, do not define the lng option\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  })\n\nexport default i18n\n","export const resources = {\n  es: {\n    translation: {\n      Learn: 'Aprendar',\n      'New Case': 'Nuevo caso',\n\n      'General Reference': 'Referencia general',\n      'Unit Processes': 'Procesos unitarios',\n      'Treatment Trains': 'Trenes de tratamiento',\n      'Case Studies': 'Estudios de caso',\n      'Water Qualities': 'Cualidades del agua',\n\n      Name: 'Nombre',\n      'Pollutant Removal Efficiencies [% removal]': 'Eficiencias de eliminación de contaminantes [% de eliminación]',\n      Turbidity: 'Turbidez',\n      Recovery: 'Recuperación',\n      'Evaluation Criteria': 'Criterios de evaluación',\n      'Useful Life [yrs]': 'Vida útil [años]',\n\n      reliability: 'fiabilidad',\n      'ease to upgrade': 'facilidad de actualización',\n      'adaptability to varying flow': 'adaptabilidad a la variabilidad del flujo',\n      'adaptability to varying quality': 'adaptabilidad a la variabilidad de la calidad',\n      'ease of O & M': 'facilidad de O & M',\n      'ease of construction': 'facilidad de construcción',\n      'ease of demonstration': 'facilidad de demostración',\n      'power demand': 'poder de demanda',\n      'chemical demand': 'demanda de químicos',\n      'odor generation': 'generación de olores',\n      'impact on ground water': 'impacto en aguas subterráneas',\n      'land requirements': 'requerimientos de suelo',\n      'cost of treatment': 'costo del tratamiento',\n      waste: 'residuo',\n\n      Search: 'Buscar en',\n      'Download CSV': 'Descargar CSV',\n      'View Columns': 'Ver columnas',\n      'Filter Table': 'Tabla de filtros',\n      'Rows per page': 'Rows per page',\n\n      Category: 'Categoría',\n      Title: 'Título',\n      Description: 'Descripción',\n      'Case Study': 'Estudio de caso',\n      Note: 'Nota',\n      Reference: 'Referencia',\n\n      'Community Information': 'Información Comunitaria',\n      'Input Quality': 'Introducir Calidad',\n      'End Use': 'Uso Final',\n      Quantity: 'Cantidad',\n      Personalize: 'Personalizar',\n      Finish: 'Terminar',\n      Next: 'Próximo',\n      Back: 'Volver',\n      'Case Overview': 'Resumen del Caso',\n      'Select the Country': 'seleccionar país',\n      'Select the Currency': 'seleccionar moneda',\n      'Land Cost': 'Costo del terreno',\n      'Electricity Cost': 'Costo de la electricidad',\n      'Personal Cost': 'Costo del personal',\n      'Discount Rate': 'Tasa de descuento',\n      Country: 'País',\n      Currency: 'Moneda',\n      'Select the Category': 'Seleccione la categoría',\n      'Water Quality Class': 'Categoría de calidad de agua',\n      'Average Quantity': 'Cantidad promedio',\n      day: 'día',\n\n      'Water Quality Indicators': 'Indicadores de calidad del agua',\n      'Number must be integer and between 1 and 1 million': 'El número debe ser entero y estar entre 1 y 1 millón',\n\n      input: 'entrada',\n      output: 'salida',\n\n      'Personalize Solutions': 'Personalizar soluciones',\n      'Based on your input, no treatment is needed because the input quality is better than the end use quality.':\n        'Según su aportación, no es necesario ningún tratamiento porque la calidad de la aportación es mejor que la del uso final.',\n      'Based on your input, theres no possible solution': 'Basado en su entrada, no hay solución posible',\n      'Based on your input, the following treatment trains are best suited for the case.':\n        'Basándose en sus aportaciones, los siguientes trenes de tratamiento son los más adecuados para el caso.'\n    }\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app'\nimport store from './app/store'\nimport { Provider } from 'react-redux'\nimport './app/i18n/i18n'\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n"],"sourceRoot":""}