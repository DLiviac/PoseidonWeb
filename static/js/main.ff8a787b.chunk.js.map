{"version":3,"sources":["app/components/UnitProcesses.js","app/components/GeneralReference.js","app/components/Pestle.js","app/components/CaseStudies.js","app/components/TreatmentTrains.js","app/components/WaterQualities.js","app/components/Learn.tsx","app/case/caseSlice.js","app/components/CommInfo.js","app/components/Bar.js","app/components/InputQuality.js","app/components/EndUse.js","app/components/SolutionsBox.js","app/case/CalculateSolutions.js","app/components/Quantity.js","app/components/CaseSummary.js","app/theme/theme.js","app/components/Case.js","app/components/UserMenu.js","app/components/App.js","app/containers/App.tsx","app/store.js","app/i18n/i18n.js","app/i18n/translations.js","index.tsx"],"names":["UnitProcesses","getMuiTheme","theme","overrides","MUIDataTable","paper","boxShadow","this","props","t","classes","data","unitProcesses","columns","name","options","filter","i18next","language","label","customBodyRenderLite","dataIndex","columnTitles","className","chipContainer","map","column","index","Tooltip","title","Chip","key","size","recovery","color","style","opacity","setCellProps","minWidth","filterType","selectableRows","rowsPerPage","print","React","Component","withStyles","display","justifyContent","flexWrap","margin","withTranslation","useStyles","makeStyles","main","height","width","gridTemplateColumns","gridRowGap","justifyItems","paddingLeft","paddingRight","paddingTop","root","flexGrow","GeneralReference","useTranslation","Paper","elevation","padding","Typography","variant","Pestle","CaseStudies","TreatmentTrains","treatmentTrains","lang","maxWidth","UPList","unit_processes","up","nameEs","WaterQualities","waterQualities","qualities","waterQualityCategories","nameCol","noteCol","referenceCol","customBodyRender","value","toolbar","minHeight","textAlign","Learn","useState","menuPoint","setMenuPoint","square","Tabs","onChange","event","newValue","indicatorColor","textColor","centered","Tab","to","process","component","Link","exact","path","caseSlice","createSlice","initialState","step","completedSteps","commInfo","countryID","currency","inputQuality","category","qualityClass","endUse","quantity","amount","distance","heightDifference","solution","noneNeeded","noneAvailable","solution1","treatmentTrain","price","reducers","next","state","previous","reset","setStep","action","payload","setCountry","setCurrency","setInputQualityCategory","setInputQualityClass","setEndUseQualityCategory","setEndUseQualityClass","setQuantity","setDistance","setHeightDifference","setSolutionNoneNeeded","resetSolutions","setSolutionNoneAvailable","setSolution1TreatmentTrain","actions","CommInfo","useSelector","case","dispatch","useDispatch","countries","communityInfo","country","push","usdObj","id","Grid","container","direction","alignItems","spacing","item","xs","Autocomplete","getOptionLabel","option","getOptionSelected","disableClearable","renderInput","params","TextField","disabled","Math","round","landCost","exchangeToUSD","electricityCost","personalCost","discountRate","Bar","useTheme","outputColor","palette","primary","Number","input","output","error","success","legend","average","factor","unit","toUpperCase","indexBy","keys","top","right","bottom","left","valueScale","type","indexScale","colors","d","colorBy","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legendPosition","legendOffset","labelSkipHeight","toExponential","toLocaleString","getLabel","enableGridY","animate","motionStiffness","motionDamping","tooltip","background","InputQuality","q","justify","waterQualityFactors","f","xmlns","fill","stroke-width","EndUse","backgroundColor","default","SolutionsBox","caseState","CalculateSolutions","endUseQuality","treatmentFactors","console","log","treat","Quantity","validQuantity","setValidQuantity","validDistance","setValidDistance","validHeightDifference","setValidHeightDifference","marginBottom","helperText","InputLabelProps","shrink","target","InputProps","endAdornment","InputAdornment","position","fullWidth","CaseSummary","fontSize","secondary","createMuiTheme","button","marginRight","instructions","marginTop","CustomConnector","alignSelf","line","borderRadius","StepConnector","Case","count","steps","Stepper","activeStep","connector","labelProps","Step","StepLabel","length","Button","onClick","getStepContent","includes","SimpleMenu","anchorEl","setAnchorEl","handleClose","handleChooseLanguage","changeLanguage","aria-controls","aria-haspopup","currentTarget","startIcon","endIcon","Menu","keepMounted","open","Boolean","onClose","MenuItem","App","AppBar","Toolbar","ThemeProvider","CssBaseline","configureStore","reducer","caseReducer","i18n","use","initReactI18next","init","resources","es","translation","Name","Turbidity","Recovery","reliability","waste","Search","Category","Title","Description","Note","Reference","Personalize","Finish","Next","Back","Country","Currency","day","lng","interpolation","escapeValue","Root","store","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff8a787b.chunk.js","sourcesContent":["import React from 'react'\nimport MUIDataTable from 'mui-datatables'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\n\nimport unitProcesses from '../data/unitProcesses.json'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nconst styles = theme => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2\n    }\n  }\n})\n\nclass UnitProcesses extends React.Component {\n  getMuiTheme = theme => ({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  })\n\n  render() {\n    const { t, classes } = this.props\n\n    const data = unitProcesses\n    const lang = i18next.language\n\n    var nameCol = lang === 'en' ? 'name' : 'nameEs'\n\n    const columns = [\n      {\n        name: 'id',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: nameCol,\n        label: t('Name'),\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: 'pre',\n        label: t('Pollutant Removal Efficiencies [% removal]'),\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const columns = ['turbidity', 'tss', 'bod', 'cod', 'fc', 'tc']\n            const columnTitles = [t('Turbidity'), 'TSS', 'BOD', 'COD', 'FC', 'TC']\n\n            return (\n              <div className={classes.chipContainer}>\n                {columns.map((column, index) => (\n                  <Tooltip title={columnTitles[index]}>\n                    <Chip label={data[dataIndex][column]} key={index} size=\"small\" />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          }\n        }\n      },\n      {\n        name: 'recovery',\n        label: t('Recovery') + ' [%]',\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            return (\n              <div className={classes.chipContainer}>\n                <Chip label={data[dataIndex].recovery} size=\"small\" />\n              </div>\n            )\n          }\n        }\n      },\n      {\n        name: 'reliability',\n        label: t('Evaluation Criteria') + ' [0-3]',\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const columns = [\n              'reliability',\n              'ease_to_upgrade',\n              'adaptability_to_varying_flow',\n              'adaptability_to_varying_quality',\n              'ease_of_om',\n              'ease_of_construction',\n              'ease_of_demonstration',\n              'power_demand',\n              'chemical_demand',\n              'odor_generation',\n              'impact_on_ground_water',\n              'land_requirements',\n              'cost_of_treatment',\n              'waste'\n            ]\n            const columnTitles = [\n              t('reliability'),\n              t('ease to upgrade'),\n              t('adaptability to varying flow'),\n              t('adaptability to varying quality'),\n              t('ease of O & M'),\n              t('ease of construction'),\n              t('ease of demonstration'),\n              t('power demand'),\n              t('chemical demand'),\n              t('odor generation'),\n              t('impact on ground water'),\n              t('land requirements'),\n              t('cost of treatment'),\n              t('waste')\n            ]\n\n            return (\n              <div className={classes.chipContainer}>\n                {columns.map((column, index) => (\n                  <Tooltip title={columnTitles[index]}>\n                    <Chip\n                      label={data[dataIndex][column]}\n                      key={index}\n                      size=\"small\"\n                      color=\"primary\"\n                      style={{ opacity: 0.25 + data[dataIndex][column] / 4 }}\n                    />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          },\n          setCellProps: () => ({ style: { minWidth: '25vw' } })\n        }\n      },\n      {\n        name: 'useful_life',\n        label: t('Useful Life [yrs]'),\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            return (\n              <div className={classes.chipContainer}>\n                <Chip label={data[dataIndex].recovery} size=\"small\" />\n              </div>\n            )\n          }\n        }\n      }\n    ]\n\n    const options = {\n      filter: true,\n      filterType: 'dropdown',\n      selectableRows: 'none',\n      rowsPerPage: 20,\n      print: false\n    }\n\n    return (\n      <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable title={t('Unit Processes')} data={data} columns={columns} options={options} />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles)(withTranslation()(UnitProcesses))\n","import React from 'react'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n}))\n\nexport default function GeneralReference() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Typography variant=\"h6\">{t('General Reference')}</Typography>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Paper from '@material-ui/core/Paper'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n}))\n\nexport default function Pestle() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Typography variant=\"h6\">{t('PESTLE')}</Typography>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\n\nimport Paper from '@material-ui/core/Paper'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n}))\n\nexport default function CaseStudies() {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className={classes.main}>\n      <Paper elevation={0} style={{ padding: 10 }}>\n        <Typography variant=\"h6\">{t('Case Studies')}</Typography>\n      </Paper>\n    </div>\n  )\n}\n","import React from 'react'\nimport MUIDataTable from 'mui-datatables'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\n\nimport treatmentTrains from '../data/treatmentTrains.json'\nimport unitProcesses from '../data/unitProcesses.json'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nconst styles = theme => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2\n    }\n  }\n})\n\nclass TreatmentTrains extends React.Component {\n  getMuiTheme = theme => ({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  })\n\n  render() {\n    const { t, classes } = this.props\n\n    const data = treatmentTrains\n\n    const lang = i18next.language\n\n    var categoryCol = lang === 'en' ? 'category' : 'categoryEs'\n    var titleCol = lang === 'en' ? 'title' : 'titleEs'\n    var descriptionCol = lang === 'en' ? 'description' : 'descriptionEs'\n    var caseStudyCol = lang === 'en' ? 'case_study' : 'case_studyEs'\n\n    const columns = [\n      {\n        name: 'id',\n        label: 'ID',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: categoryCol,\n        label: 'Category',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: titleCol,\n        label: 'Title',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: descriptionCol,\n        label: 'Description',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: caseStudyCol,\n        label: 'Case Study',\n        options: {\n          filter: true,\n          setCellProps: () => ({ style: { maxWidth: '20vw' } })\n        }\n      },\n      {\n        name: 'unit_processes',\n        label: 'Unit Processes',\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const UPList = data[dataIndex].unit_processes\n\n            return (\n              <div className={classes.chipContainer}>\n                {UPList.map((up, index) => (\n                  <Tooltip title={lang === 'en' ? unitProcesses[up - 1].name : unitProcesses[up - 1].nameEs}>\n                    <Chip label={up} key={index} size=\"small\" color=\"primary\" />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          },\n          setCellProps: () => ({ style: { minWidth: '15vw' } })\n        }\n      }\n    ]\n\n    const options = {\n      filter: true,\n      filterType: 'dropdown',\n      selectableRows: 'none',\n      rowsPerPage: 20,\n      print: false\n    }\n\n    return (\n      <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable title={t('Treatment Trains')} data={data} columns={columns} options={options} />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles)(withTranslation()(TreatmentTrains))\n","import React from 'react'\nimport MUIDataTable from 'mui-datatables'\nimport { MuiThemeProvider, withStyles } from '@material-ui/core/styles'\n\nimport waterQualities from '../data/waterQualities.json'\nimport waterQualityCategories from '../data/waterQualityCategories.json'\n\nimport Chip from '@material-ui/core/Chip'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nimport { withTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nconst styles = theme => ({\n  chipContainer: {\n    display: 'flex',\n    justifyContent: 'left',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: 2\n    }\n  }\n})\n\nclass WaterQualities extends React.Component {\n  getMuiTheme = theme => ({\n    overrides: {\n      MUIDataTable: {\n        paper: {\n          boxShadow: 'none'\n        }\n      }\n    }\n  })\n\n  render() {\n    const { t, classes } = this.props\n\n    const data = waterQualities\n    const qualities = waterQualityCategories\n\n    const lang = i18next.language\n\n    var nameCol = lang === 'en' ? 'name' : 'nameEs'\n    var noteCol = lang === 'en' ? 'note' : 'noteEs'\n    var referenceCol = lang === 'en' ? 'reference' : 'referenceEs'\n\n    const columns = [\n      {\n        name: 'id',\n        label: 'ID',\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: 'category',\n        label: t('Category'),\n        options: {\n          filter: true,\n          customBodyRender: value => {\n            return <div>{lang === 'en' ? qualities[value].name : qualities[value].nameEs}</div>\n          }\n        }\n      },\n      {\n        name: nameCol,\n        label: t('Name'),\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: 'wqi',\n        label: t('Water Quality Indicators'),\n        options: {\n          filter: false,\n          customBodyRenderLite: dataIndex => {\n            const columns = ['turbidity', 'tss', 'bod', 'cod', 'fc', 'tc']\n            const columnTitles = [t('Turbidity'), 'TSS', 'BOD', 'COD', 'FC', 'TC']\n\n            return (\n              <div className={classes.chipContainer}>\n                {columns.map((column, index) => (\n                  <Tooltip title={columnTitles[index]}>\n                    <Chip\n                      label={data[dataIndex][column] !== '-1' ? data[dataIndex][column] : '-'}\n                      key={index}\n                      size=\"small\"\n                    />\n                  </Tooltip>\n                ))}\n              </div>\n            )\n          },\n          setCellProps: () => ({ style: { minWidth: '20vw' } })\n        }\n      },\n      {\n        name: noteCol,\n        label: t('Note'),\n        options: {\n          filter: true\n        }\n      },\n      {\n        name: referenceCol,\n        label: t('Reference'),\n        options: {\n          filter: true\n        }\n      }\n    ]\n\n    const options = {\n      filter: true,\n      filterType: 'dropdown',\n      selectableRows: 'none',\n      rowsPerPage: 20,\n      print: false\n    }\n\n    return (\n      <MuiThemeProvider theme={this.getMuiTheme()}>\n        <MUIDataTable title={t('Water Qualities')} data={data} columns={columns} options={options} />\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default withStyles(styles)(withTranslation()(WaterQualities))\n","import React from 'react'\n\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport UnitProcesses from './UnitProcesses'\nimport GeneralReference from './GeneralReference'\nimport Pestle from './Pestle'\nimport CaseStudies from './CaseStudies'\n\nimport TreatmentTrains from './TreatmentTrains'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport Paper from '@material-ui/core/Paper'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\n\nimport { useTranslation } from 'react-i18next'\nimport WaterQualities from './WaterQualities'\n\nconst useStyles = makeStyles({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    justifyItems: 'center',\n    justifyContent: 'space-between'\n  },\n  main: {\n    display: 'grid',\n    minHeight: 'calc(100vh - 300px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 20\n  },\n  title: {\n    textAlign: 'left'\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  }\n})\n\nexport const Learn = () => {\n  const { t } = useTranslation()\n\n  const classes = useStyles()\n\n  const [menuPoint, setMenuPoint] = React.useState(0)\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setMenuPoint(newValue)\n  }\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Paper className={classes.root} square elevation={3}>\n          <Tabs value={menuPoint} onChange={handleChange} indicatorColor=\"primary\" textColor=\"primary\" centered>\n            <Tab label={t('General Reference')} to={`${process.env.PUBLIC_URL}/general`} component={Link} />\n            <Tab label={t('PESTLE')} to={`${process.env.PUBLIC_URL}/pestle`} component={Link} />\n            <Tab label={t('Water Qualities')} to={`${process.env.PUBLIC_URL}/waterqualities`} component={Link} />\n            <Tab label={t('Unit Processes')} to={`${process.env.PUBLIC_URL}/unitprocesses`} component={Link} />\n            <Tab label={t('Treatment Trains')} to={`${process.env.PUBLIC_URL}/treatmenttrains`} component={Link} />\n            <Tab label={t('Case Studies')} to={`${process.env.PUBLIC_URL}/casestudies`} component={Link} />\n          </Tabs>\n        </Paper>\n\n        <div className={classes.main}>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/learn`} component={GeneralReference} />\n            <Route path={`${process.env.PUBLIC_URL}/general`} component={GeneralReference} />\n            <Route path={`${process.env.PUBLIC_URL}/pestle`} component={Pestle} />\n            <Route path={`${process.env.PUBLIC_URL}/waterqualities`} component={WaterQualities} />\n            <Route path={`${process.env.PUBLIC_URL}/unitprocesses`} component={UnitProcesses} />\n            <Route path={`${process.env.PUBLIC_URL}/treatmenttrains`} component={TreatmentTrains} />\n            <Route path={`${process.env.PUBLIC_URL}/casestudies`} component={CaseStudies} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n","import { createSlice } from '@reduxjs/toolkit'\n\nexport const caseSlice = createSlice({\n  name: 'case',\n  initialState: {\n    step: 0,\n    completedSteps: [null, null, null, null],\n    commInfo: {\n      countryID: null,\n      currency: null //0 is USD, 1 is local currency\n    },\n    inputQuality: {\n      category: null,\n      qualityClass: null\n    },\n    endUse: {\n      category: null,\n      qualityClass: null\n    },\n    quantity: {\n      amount: null,\n      distance: null,\n      heightDifference: null\n    },\n    solution: {\n      noneNeeded: false,\n      noneAvailable: false\n    },\n    solution1: {\n      treatmentTrain: null,\n      price: null\n    }\n  },\n  reducers: {\n    next: state => {\n      state.step += 1\n    },\n    previous: state => {\n      state.step -= 1\n    },\n    reset: state => {\n      state.step = 0\n    },\n    setStep: (state, action) => {\n      state.step = action.payload\n    },\n    setCountry: (state, action) => {\n      state.commInfo.countryID = action.payload\n      state.commInfo.currency = null\n      state.completedSteps[0] = null\n    },\n    setCurrency: (state, action) => {\n      action.payload === 1000 ? (state.commInfo.currency = 0) : (state.commInfo.currency = 1)\n      state.completedSteps[0] = 0\n    },\n    setInputQualityCategory: (state, action) => {\n      state.inputQuality.category = action.payload\n      state.inputQuality.qualityClass = null\n      state.completedSteps[1] = null\n    },\n    setInputQualityClass: (state, action) => {\n      state.inputQuality.qualityClass = action.payload\n      state.completedSteps[1] = 1\n    },\n    setEndUseQualityCategory: (state, action) => {\n      state.endUse.category = action.payload\n      state.endUse.qualityClass = null\n      state.completedSteps[2] = null\n    },\n    setEndUseQualityClass: (state, action) => {\n      state.endUse.qualityClass = action.payload\n      state.completedSteps[2] = 2\n    },\n    setQuantity: (state, action) => {\n      state.quantity.amount = action.payload\n      if (action.payload === null) {\n        state.completedSteps[3] = null\n      }\n      if (action.payload !== null && state.quantity.distance !== null) {\n        state.completedSteps[3] = 3\n      }\n    },\n    setDistance: (state, action) => {\n      state.quantity.distance = action.payload\n      if (action.payload === null) {\n        state.completedSteps[3] = null\n      }\n      if (action.payload !== null && state.quantity.quantity !== null) {\n        state.completedSteps[3] = 3\n      }\n    },\n    setHeightDifference: (state, action) => {\n      state.quantity.heightDifference = action.payload\n    },\n    setSolutionNoneNeeded: (state, action) => {\n      state.solution.noneNeeded = action.payload\n    },\n    resetSolutions: state => {\n      state.solution.noneNeeded = false\n      state.solution.noneAvailable = false\n    },\n    setSolutionNoneAvailable: (state, action) => {\n      state.solution.noneAvailable = action.payload\n    },\n    setSolution1TreatmentTrain: (state, action) => {\n      state.solution1.treatmentTrain = action.payload\n    }\n  }\n})\n\n// Action creators are generated for each case reducer function\nexport const {\n  next,\n  previous,\n  reset,\n  setStep,\n  setCountry,\n  setCurrency,\n  setInputQualityCategory,\n  setInputQualityClass,\n  setEndUseQualityCategory,\n  setEndUseQualityClass,\n  setQuantity,\n  setDistance,\n  setHeightDifference,\n  resetSolutions,\n  setSolutionNoneNeeded,\n  setSolutionNoneAvailable,\n  setSolution1TreatmentTrain\n} = caseSlice.actions\n\nexport default caseSlice.reducer\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport communityInfo from '../data/communityInfo'\nimport { setCountry, setCurrency } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nexport default function CommInfo() {\n  const commInfo = useSelector(state => state.case.commInfo)\n  const dispatch = useDispatch()\n  const countries = []\n  communityInfo.map(country => {\n    return countries.push(country.name)\n  })\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  const usdObj = { id: 1000, currency: 'USD' }\n\n  if (commInfo.countryID === null) {\n    dispatch(setCountry(0))\n  }\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">{t('Community Information')}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Country')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"country\"\n          options={communityInfo}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : null)}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setCountry(newValue.id))}\n          disableClearable\n          value={commInfo.countryID !== null ? communityInfo[commInfo.countryID] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title={t('Information about countries')}>\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Currency')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"currency\"\n          options={[communityInfo[commInfo.countryID], usdObj]}\n          getOptionLabel={option => option.currency}\n          getOptionSelected={(option, value) => option.currency === value.currency}\n          onChange={(event, newValue) => dispatch(setCurrency(newValue.id))}\n          disableClearable\n          value={\n            commInfo.currency !== null ? (commInfo.currency === 0 ? usdObj : communityInfo[commInfo.countryID]) : null\n          }\n          disabled={commInfo.countryID === null ? true : false}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title={t('Information about currencies')}>\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      {commInfo.currency !== null ? (\n        <>\n          <Grid item xs={4}>\n            <Typography>{t('Land Cost')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>\n              {commInfo.currency === 0\n                ? Math.round(communityInfo[commInfo.countryID].landCost * 100) / 100 + ' ' + usdObj.currency\n                : Math.round(\n                    communityInfo[commInfo.countryID].landCost * communityInfo[commInfo.countryID].exchangeToUSD * 100\n                  ) /\n                    100 +\n                  ' ' +\n                  communityInfo[commInfo.countryID].currency}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography>{t('Electricity Cost')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>\n              {commInfo.currency === 0\n                ? Math.round(communityInfo[commInfo.countryID].electricityCost * 100) / 100 + ' ' + usdObj.currency\n                : Math.round(\n                    communityInfo[commInfo.countryID].electricityCost *\n                      communityInfo[commInfo.countryID].exchangeToUSD *\n                      100\n                  ) /\n                    100 +\n                  ' ' +\n                  communityInfo[commInfo.countryID].currency}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography>{t('Personal Cost')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>\n              {commInfo.currency === 0\n                ? Math.round(communityInfo[commInfo.countryID].personalCost * 100) / 100 + ' ' + usdObj.currency\n                : Math.round(\n                    communityInfo[commInfo.countryID].personalCost *\n                      communityInfo[commInfo.countryID].exchangeToUSD *\n                      100\n                  ) /\n                    100 +\n                  ' ' +\n                  communityInfo[commInfo.countryID].currency}\n            </Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography>{t('Discount Rate')}</Typography>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography>{communityInfo[commInfo.countryID].discountRate * 100 + '%'}</Typography>\n          </Grid>\n        </>\n      ) : (\n        <div />\n      )}\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { useTheme } from '@material-ui/core/styles'\nimport { Paper } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\n\nexport const Bar = props => {\n  const theme = useTheme()\n  const { t } = useTranslation()\n\n  var outputColor = theme.palette.primary.main\n\n  if (Number(props.input) > Number(props.output)) {\n    outputColor = theme.palette.error.main\n  } else {\n    outputColor = theme.palette.success.main\n  }\n\n  const average = {\n    name: t('avg. input'),\n    [props.factor]: props.average,\n    color: theme.palette.action.disabled\n  }\n\n  const input = {\n    name: t('input'),\n    [props.factor]: props.input,\n    color: theme.palette.primary.main\n  }\n\n  const output = {\n    name: t('output'),\n    [props.factor]: props.output,\n    color: outputColor\n  }\n\n  let data = []\n\n  if (props.input) {\n    data.push(input)\n  }\n\n  if (props.output) {\n    data.push(output)\n  }\n\n  if (props.average & props.input) {\n    data.push(average)\n  }\n\n  var legend\n\n  if (props.factor === 'turbidity') {\n    legend = t('Turbidity') + ' [' + props.unit + ']'\n  } else {\n    legend = props.factor.toUpperCase() + ' [' + props.unit + ']'\n  }\n\n  function getLabel(d) {\n    if (props.factor === 'tc' || props.factor === 'fc') {\n      return Number(d.value)\n        .toExponential()\n        .toLocaleString('de-CH')\n    } else {\n      return Number(d.value).toLocaleString('de-CH')\n    }\n  }\n\n  return (\n    <div style={{ height: 250, width: 100 }}>\n      <ResponsiveBar\n        data={data}\n        indexBy=\"name\"\n        keys={[props.factor]}\n        margin={{ top: 10, right: 0, bottom: 50, left: 0 }}\n        padding={0.3}\n        valueScale={{ type: 'linear' }}\n        indexScale={{ type: 'band', round: true }}\n        colors={d => d.data.color}\n        colorBy=\"id\"\n        axisTop={null}\n        axisRight={null}\n        axisBottom={{\n          tickSize: 5,\n          tickPadding: 5,\n          tickRotation: 0,\n          legend: legend,\n          legendPosition: 'middle',\n          legendOffset: 40\n        }}\n        labelSkipHeight={36}\n        label={d => getLabel(d)}\n        enableGridY={false}\n        animate={true}\n        motionStiffness={115}\n        motionDamping={15}\n        tooltip={({ id, value }) => (\n          <Paper\n            style={{\n              padding: 12,\n              background: '#fff'\n            }}\n          >\n            {id.toUpperCase() + ':'} <br /> {Number(value).toLocaleString('de-CH') + ' [' + props.unit + ']'}\n          </Paper>\n        )}\n      />\n    </div>\n  )\n}\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport waterQualities from '../data/waterQualities.json'\nimport waterQualityCategories from '../data/waterQualityCategories.json'\nimport waterQualityFactors from '../data/waterQualityFactors.json'\nimport { setInputQualityCategory, setInputQualityClass } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\nimport { Bar } from './Bar'\nimport { useTheme } from '@material-ui/core/styles'\n\nexport default function InputQuality() {\n  const inputQuality = useSelector(state => state.case.inputQuality)\n  const dispatch = useDispatch()\n\n  const theme = useTheme()\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  if (inputQuality.category === null) {\n    dispatch(setInputQualityCategory(28))\n  }\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">{t('Input Quality & Quantity')}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Category')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"category\"\n          options={waterQualityCategories}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : null)}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setInputQualityCategory(newValue.id))}\n          disableClearable\n          value={inputQuality.category !== null ? waterQualityCategories[inputQuality.category] : null} //Peru is default Category\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about categories\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Water Quality Class')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"quality\"\n          options={waterQualities.filter(q => q.category === inputQuality.category)}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : null)}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setInputQualityClass(newValue.id))}\n          disableClearable\n          value={inputQuality.qualityClass !== null ? waterQualities[inputQuality.qualityClass] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n          disabled={inputQuality.category === null ? true : false}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about water quality classes\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n\n      <Grid item container xs={12} justify=\"space-evenly\" alignItems=\"center\">\n        {inputQuality.qualityClass !== null\n          ? waterQualityFactors.map(f => {\n              const key = f.name\n\n              return (\n                <div style={{ width: 'calc(1/6*80%' }}>\n                  <Bar\n                    factor={f.name}\n                    unit={f.unit}\n                    input={\n                      inputQuality.qualityClass === null\n                        ? null\n                        : waterQualities[inputQuality.qualityClass][key] < 0\n                        ? null\n                        : waterQualities[inputQuality.qualityClass][key]\n                    }\n                    average={waterQualities[0][key]}\n                  />\n                </div>\n              )\n            })\n          : waterQualityFactors.map(f => {\n              return (\n                <div style={{ width: 'calc(1/6*80%' }}>\n                  <Bar factor={f.name} unit={f.unit} />\n                </div>\n              )\n            })}\n      </Grid>\n\n      <Grid item container xs={12} justify=\"space-evenly\" alignItems=\"flex-start\">\n        <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\n          <Grid item>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\">\n              <g>\n                <rect width=\"10\" height=\"10\" fill={theme.palette.primary.main} stroke-width=\"0\"></rect>\n              </g>\n            </svg>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"caption\">{t('Input')}</Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\n          <Grid item>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\">\n              <g>\n                <rect width=\"10\" height=\"10\" fill={theme.palette.action.disabled} stroke-width=\"0\"></rect>\n              </g>\n            </svg>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"caption\">{t('Average Input')}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport waterQualities from '../data/waterQualities.json'\nimport waterQualityCategories from '../data/waterQualityCategories.json'\nimport waterQualityFactors from '../data/waterQualityFactors.json'\nimport { setEndUseQualityCategory, setEndUseQualityClass } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\nimport { Bar } from './Bar'\nimport { useTheme } from '@material-ui/core/styles'\n\nexport default function EndUse() {\n  const endUse = useSelector(state => state.case.endUse)\n  const inputQuality = useSelector(state => state.case.inputQuality)\n\n  const dispatch = useDispatch()\n\n  const theme = useTheme()\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  if (endUse.category === null) {\n    dispatch(setEndUseQualityCategory(28))\n  }\n\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" spacing={3}>\n      <Grid item xs={12}>\n        <Typography variant=\"h6\">{t('End Use')}</Typography>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Select the Category')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"category\"\n          options={waterQualityCategories}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : '')}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setEndUseQualityCategory(newValue.id))}\n          disableClearable\n          value={endUse.category !== null ? waterQualityCategories[endUse.category] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about categories\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n      <Grid item xs={4}>\n        <Typography>{t('Water Quality Class')}</Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <Autocomplete\n          id=\"quality\"\n          options={waterQualities.filter(q => q.category === endUse.category)}\n          getOptionLabel={option => (option.name ? (lang === 'en' ? option.name : option.nameEs) : '')}\n          getOptionSelected={(option, value) => option.name === value.name}\n          onChange={(event, newValue) => dispatch(setEndUseQualityClass(newValue.id))}\n          disableClearable\n          value={endUse.qualityClass !== null ? waterQualities[endUse.qualityClass] : null}\n          renderInput={params => <TextField {...params} variant=\"outlined\" />}\n          disabled={endUse.category === null ? true : false}\n        />\n      </Grid>\n      <Grid item xs={2} style={{ textAlign: 'center' }}>\n        <Tooltip title=\"Information about water quality classes\">\n          <Chip label=\"?\" size=\"small\" />\n        </Tooltip>\n      </Grid>\n\n      <Grid item container xs={12} justify=\"space-evenly\" alignItems=\"center\">\n        {endUse.qualityClass !== null\n          ? waterQualityFactors.map(f => {\n              const key = f.name\n\n              return (\n                <div style={{ width: 'calc(1/6*80%' }}>\n                  <Bar\n                    factor={f.name}\n                    unit={f.unit}\n                    input={\n                      waterQualities[inputQuality.qualityClass][key] < 0\n                        ? null\n                        : waterQualities[inputQuality.qualityClass][key]\n                    }\n                    output={\n                      waterQualities[endUse.qualityClass][key] < 0 ? null : waterQualities[endUse.qualityClass][key]\n                    }\n                  />\n                </div>\n              )\n            })\n          : waterQualityFactors.map(f => {\n              const key = f.name\n\n              return (\n                <div style={{ width: 'calc(1/6*80%' }}>\n                  <Bar\n                    factor={f.name}\n                    unit={f.unit}\n                    input={\n                      waterQualities[inputQuality.qualityClass][key] < 0\n                        ? null\n                        : waterQualities[inputQuality.qualityClass][key]\n                    }\n                  />\n                </div>\n              )\n            })}\n      </Grid>\n\n      <Grid item container xs={12} justify=\"space-evenly\" alignItems=\"flex-start\">\n        <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\n          <Grid item>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\">\n              <g>\n                <rect width=\"10\" height=\"10\" fill={theme.palette.primary.main} stroke-width=\"0\"></rect>\n              </g>\n            </svg>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"caption\">{t('Input')}</Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\n          <Grid item>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\">\n              <g>\n                <rect width=\"10\" height=\"10\" fill={theme.palette.error.main} stroke-width=\"0\"></rect>\n              </g>\n            </svg>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"caption\">{t('End use above Input, needs treatment')}</Typography>\n          </Grid>\n        </Grid>\n\n        <Grid item container xs={3} direction=\"column\" alignItems=\"center\" justify=\"flex-start\">\n          <Grid item>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10\" height=\"10\">\n              <g>\n                <rect width=\"10\" height=\"10\" fill={theme.palette.success.main} stroke-width=\"0\"></rect>\n              </g>\n            </svg>\n          </Grid>\n          <Grid item>\n            <Typography variant=\"caption\">{t('End use below Input, no treatment needed')}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Chip from '@material-ui/core/Chip'\nimport Paper from '@material-ui/core/Paper'\nimport { Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport treatmentTrains from '../data/treatmentTrains.json'\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    backgroundColor: theme.palette.background.default,\n    padding: 10\n  }\n}))\n\nexport default function SolutionsBox() {\n  const classes = useStyles()\n\n  const caseState = useSelector(state => state.case)\n\n  const { t } = useTranslation()\n\n  return (\n    <Paper className={classes.paper} elevation={0}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">{t('Solutions')}</Typography>\n          <Typography variant=\"caption\">\n            {caseState.solution.noneNeeded\n              ? t(\n                  'Based on your input, no treatment is needed because the input quality is better than the end use quality.'\n                )\n              : t('Based on your input, the following treatment trains are best suited for the case.')}\n          </Typography>\n        </Grid>\n\n        <Grid item container xs={12} spacing={1} alignItems=\"center\">\n          <Grid item container justify=\"flex-start\" spacing={1} xs={12}>\n            <Grid item>\n              <Chip label=\"1\" color=\"secondary\" size=\"small\" />\n            </Grid>\n            <Grid item>\n              <Typography>{t('Solution')}</Typography>\n            </Grid>\n          </Grid>\n          <Grid item container justify=\"flex-start\" spacing={1} xs={12}>\n            <Typography>\n              {caseState.solution1.treatmentTrain !== null\n                ? treatmentTrains[caseState.solution1.treatmentTrain].title\n                : 'none'}\n            </Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n","import { useSelector, useDispatch } from 'react-redux'\nimport { setSolutionNoneNeeded } from './caseSlice'\nimport waterQualities from '../data/waterQualities'\nimport unitProcesses from '../data/unitProcesses'\n//import treatmentTrains from '../data/treatmentTrains'\n\nexport default function CalculateSolutions() {\n  const dispatch = useDispatch()\n\n  const caseState = useSelector(state => state.case)\n\n  const inputQuality = waterQualities[caseState.inputQuality.qualityClass]\n  const endUseQuality = waterQualities[caseState.endUse.qualityClass]\n\n  const relevantFactors = ['turbidity', 'tss', 'bod', 'cod', 'fc', 'tc']\n\n  let treatmentFactors = []\n\n  console.log(inputQuality, endUseQuality)\n\n  let noneNeeded = true\n\n  relevantFactors.map(factor => {\n    if (Number(inputQuality[factor]) > Number(endUseQuality[factor])) {\n      noneNeeded = false\n      //Check here if -1 and don't push?\n      treatmentFactors.push(factor)\n    }\n    return null\n  })\n\n  console.log(treatmentFactors)\n\n  function treat(up, factor, input) {\n    console.log(up, factor, input)\n    console.log(unitProcesses[up][factor])\n    console.log(Number(input) - Number(input) * unitProcesses[up][factor])\n    return Number(input) - Number(input) * unitProcesses[up][factor]\n  }\n\n  console.log(\n    treatmentFactors.map(factor => {\n      treat(1, factor, inputQuality[factor])\n      return null\n    })\n  )\n\n  if (noneNeeded === true) {\n    dispatch(setSolutionNoneNeeded(true))\n  } else {\n    dispatch(setSolutionNoneNeeded(false))\n  }\n\n  console.log(caseState)\n}\n","import React from 'react'\nimport { Tooltip, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setQuantity, setDistance, setHeightDifference } from '../case/caseSlice'\nimport Chip from '@material-ui/core/Chip'\nimport { useTranslation } from 'react-i18next'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport SolutionsBox from './SolutionsBox'\nimport CalculateSolutions from '../case/CalculateSolutions'\n\nexport default function Quantity() {\n  const quantity = useSelector(state => state.case.quantity)\n  const dispatch = useDispatch()\n\n  CalculateSolutions()\n\n  const { t } = useTranslation()\n\n  const [validQuantity, setValidQuantity] = React.useState(true)\n\n  const handleChangeQuantity = value => {\n    if (value >= 1 && value <= 1000000) {\n      setValidQuantity(true)\n      dispatch(setQuantity(value))\n    } else {\n      setValidQuantity(false)\n      dispatch(setQuantity(null))\n    }\n  }\n\n  const [validDistance, setValidDistance] = React.useState(true)\n\n  const handleChangeDistance = value => {\n    if (value >= 1 && value <= 100000) {\n      setValidDistance(true)\n      dispatch(setDistance(value))\n    } else {\n      setValidDistance(false)\n      dispatch(setDistance(null))\n    }\n  }\n\n  const [validHeightDifference, setValidHeightDifference] = React.useState(true)\n\n  const handleChangeHeightDifference = value => {\n    if (value >= -1000 && value <= 1000) {\n      setValidHeightDifference(true)\n      dispatch(setHeightDifference(value))\n    } else {\n      setValidHeightDifference(false)\n      dispatch(setHeightDifference(null))\n    }\n  }\n\n  return (\n    <Grid container>\n      <Grid container xs={12}>\n        <Grid container xs={8} direction=\"row\" alignItems=\"center\" spacing={3}>\n          <Grid item xs={12}>\n            <Typography variant=\"h6\">{t('Quantity')}</Typography>\n          </Grid>\n          <Grid item xs={4}>\n            <Typography style={{ marginBottom: 20 }}>{t('Average Quantity')}</Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              error={!validQuantity}\n              helperText={!validQuantity ? t('Number must be integer and between 1 and 1 million') : ' '}\n              id=\"standard-number\"\n              type=\"number\"\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true\n              }}\n              onChange={event => handleChangeQuantity(event.target.value)}\n              value={quantity.amount !== null ? quantity.amount : null}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">m&sup3;/{t('day')}</InputAdornment>\n              }}\n              fullWidth\n            />\n          </Grid>\n\n          <Grid item xs={2} style={{ textAlign: 'center' }}>\n            <Tooltip title=\"Information about amounts\">\n              <Chip style={{ marginBottom: 20 }} label=\"?\" size=\"small\" />\n            </Tooltip>\n          </Grid>\n\n          <Grid item xs={4}>\n            <Typography style={{ marginBottom: 20 }}>{t('Distance')}</Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              error={!validDistance}\n              helperText={!validDistance ? t(\"Number must be integer and between 1 and 100'000\") : ' '}\n              id=\"standard-number\"\n              type=\"number\"\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true\n              }}\n              onChange={event => handleChangeDistance(event.target.value)}\n              value={quantity.distance !== null ? quantity.distance : null}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">m</InputAdornment>\n              }}\n              fullWidth\n            />\n          </Grid>\n\n          <Grid item xs={2} style={{ textAlign: 'center' }}>\n            <Tooltip title=\"Information about distance\">\n              <Chip style={{ marginBottom: 20 }} label=\"?\" size=\"small\" />\n            </Tooltip>\n          </Grid>\n\n          <Grid item xs={4}>\n            <Typography style={{ marginBottom: 20 }}>{t('Height Difference')}</Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <TextField\n              error={!validHeightDifference}\n              helperText={!validHeightDifference ? t(\"Number must be integer and between -1'000 and 1'000\") : ' '}\n              id=\"standard-number\"\n              type=\"number\"\n              variant=\"outlined\"\n              InputLabelProps={{\n                shrink: true\n              }}\n              onChange={event => handleChangeHeightDifference(event.target.value)}\n              value={quantity.heightDifference !== null ? quantity.heightDifference : null}\n              InputProps={{\n                endAdornment: <InputAdornment position=\"end\">m</InputAdornment>\n              }}\n              fullWidth\n            />\n          </Grid>\n\n          <Grid item xs={2} style={{ textAlign: 'center' }}>\n            <Tooltip title=\"Information about height differences\">\n              <Chip style={{ marginBottom: 20 }} label=\"?\" size=\"small\" />\n            </Tooltip>\n          </Grid>\n        </Grid>\n        <Grid item container xs={4}>\n          <SolutionsBox />\n        </Grid>\n      </Grid>\n    </Grid>\n  )\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport Grid from '@material-ui/core/Grid'\nimport { Typography } from '@material-ui/core'\nimport { useTranslation } from 'react-i18next'\nimport i18next from 'i18next'\n\nimport communityInfo from '../data/communityInfo'\nimport waterQualities from '../data/waterQualities.json'\n\nimport PublicIcon from '@material-ui/icons/Public'\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\nimport AutorenewIcon from '@material-ui/icons/Autorenew'\nimport BatteryFullIcon from '@material-ui/icons/BatteryFull'\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\n\nexport const CaseSummary = props => {\n  const { step } = props\n\n  const caseState = useSelector(state => state.case)\n\n  const { t } = useTranslation()\n  const lang = i18next.language\n\n  return (\n    <div style={{ paddingTop: 5 }}>\n      <Grid item container spacing={1} alignItems=\"flex-start\">\n        {step === 0 ? (\n          <>\n            <Grid item>\n              {caseState.commInfo.countryID !== null ? (\n                <Grid container alignItems=\"center\" direction=\"row\" spacing={0}>\n                  <PublicIcon fontSize=\"small\" color=\"primary\" />\n\n                  <Typography variant=\"caption\">\n                    {lang === 'en'\n                      ? communityInfo[caseState.commInfo.countryID].name\n                      : communityInfo[caseState.commInfo.countryID].nameEs}\n                  </Typography>\n                  {caseState.commInfo.currency !== null ? (\n                    <>\n                      <AttachMoneyIcon fontSize=\"small\" color=\"primary\" />\n                      <Typography variant=\"caption\">\n                        {caseState.commInfo.currency === 0\n                          ? 'USD'\n                          : communityInfo[caseState.commInfo.countryID].currency}\n                      </Typography>\n                    </>\n                  ) : (\n                    <div />\n                  )}\n                </Grid>\n              ) : (\n                <div />\n              )}\n            </Grid>\n          </>\n        ) : (\n          <div />\n        )}\n\n        {step === 1 ? (\n          <Grid item>\n            {caseState.inputQuality.qualityClass !== null ? (\n              <Grid container alignItems=\"center\" direction=\"row\" spacing={0}>\n                <ExitToAppIcon fontSize=\"small\" color=\"primary\" />\n                <Typography variant=\"caption\">\n                  {lang === 'en'\n                    ? waterQualities[caseState.inputQuality.qualityClass].name\n                    : waterQualities[caseState.inputQuality.qualityClass].nameEs}\n                </Typography>\n              </Grid>\n            ) : (\n              <div />\n            )}\n          </Grid>\n        ) : (\n          <div />\n        )}\n\n        {step === 2 ? (\n          <Grid item>\n            {caseState.endUse.qualityClass !== null ? (\n              <Grid container alignItems=\"center\" direction=\"row\" spacing={0}>\n                <AutorenewIcon fontSize=\"small\" color=\"primary\" />\n                <Typography variant=\"caption\">\n                  {lang === 'en'\n                    ? waterQualities[caseState.endUse.qualityClass].name\n                    : waterQualities[caseState.endUse.qualityClass].nameEs}\n                </Typography>\n              </Grid>\n            ) : (\n              <div />\n            )}\n          </Grid>\n        ) : (\n          <div />\n        )}\n\n        {step === 3 ? (\n          <Grid item>\n            {caseState.quantity.amount !== null ? (\n              <Grid container alignItems=\"center\" direction=\"row\" spacing={0}>\n                <BatteryFullIcon fontSize=\"small\" color=\"primary\" />\n                <Typography variant=\"caption\">\n                  {caseState.quantity.amount}m&sup3;/{t('day')}\n                </Typography>\n                {caseState.quantity.distance !== null ? (\n                  <>\n                    <ArrowRightAltIcon fontSize=\"small\" color=\"primary\" />\n                    <Typography variant=\"caption\">{caseState.quantity.distance}m</Typography>\n                  </>\n                ) : (\n                  <div />\n                )}\n\n                {caseState.quantity.heightDifference !== null ? (\n                  <>\n                    <ArrowUpwardIcon fontSize=\"small\" color=\"primary\" />\n\n                    <Typography variant=\"caption\">{caseState.quantity.heightDifference}m</Typography>\n                  </>\n                ) : (\n                  <div />\n                )}\n              </Grid>\n            ) : (\n              <div />\n            )}\n          </Grid>\n        ) : (\n          <div />\n        )}\n      </Grid>\n    </div>\n  )\n}\n","import { createMuiTheme } from '@material-ui/core'\n\nconst colors = {\n  main: '#00838f'\n}\n\nconst secondary = {\n  main: '#ef6c00'\n}\n\nexport const theme = createMuiTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary\n  }\n})\n\nexport const lightTheme = createMuiTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary,\n    type: 'light'\n  }\n})\n\nexport const darkTheme = createMuiTheme({\n  palette: {\n    primary: colors,\n    secondary: secondary,\n    type: 'dark'\n  }\n})\n","import React from 'react'\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles'\n\nimport CommInfo from './CommInfo'\nimport InputQuality from './InputQuality'\nimport EndUse from './EndUse'\nimport Quantity from './Quantity'\nimport { CaseSummary } from './CaseSummary'\n\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Stepper from '@material-ui/core/Stepper'\nimport Step from '@material-ui/core/Step'\nimport StepLabel from '@material-ui/core/StepLabel'\nimport StepConnector from '@material-ui/core/StepConnector'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { next, previous, reset } from '../case/caseSlice'\nimport { theme } from '../theme/theme'\nimport { useTranslation } from 'react-i18next'\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    justifyItems: 'center',\n    justifyContent: 'space-between'\n  },\n  main: {\n    display: 'grid',\n    height: 'calc(100vh - 200px)',\n    width: '100vw',\n    gridTemplateColumns: '1fr',\n    gridRowGap: 8,\n    justifyItems: 'stretch',\n    justifyContent: 'center',\n    paddingLeft: '10vw',\n    paddingRight: '10vw',\n    paddingTop: 50\n  },\n  step: {\n    minHeight: 'calc(100vh - 300px)'\n  },\n  root: {\n    flexGrow: 1,\n    paddingTop: 60\n  },\n  button: {\n    marginRight: theme.spacing(1)\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  }\n}))\n\nconst CustomConnector = withStyles({\n  root: {\n    alignSelf: 'flex-start',\n    paddingTop: '13px' //This hardcoded value sets the line in the middle of the stepper icons. It's not optimal.\n  },\n  line: {\n    borderRadius: 1\n  }\n})(StepConnector)\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <CommInfo />\n    case 1:\n      return <InputQuality />\n    case 2:\n      return <EndUse />\n    case 3:\n      return <Quantity />\n    default:\n      return 'Unknown step'\n  }\n}\n\nexport const Case = () => {\n  const { t } = useTranslation()\n\n  const getSteps = () => {\n    return [t('Community Information'), t('Input Quality'), t('End Use'), t('Quantity'), t('Personalize Solutions')]\n  }\n\n  const count = useSelector(state => state.case.step)\n  const completedSteps = useSelector(state => state.case.completedSteps)\n\n  const dispatch = useDispatch()\n\n  const classes = useStyles()\n  const steps = getSteps()\n\n  const handleReset = () => {\n    dispatch(reset())\n  }\n\n  return (\n    <div className=\"App\">\n      <Paper className={classes.root} square elevation={3}>\n        <Stepper activeStep={count} connector={<CustomConnector />}>\n          {steps.map((label, index) => {\n            const stepProps = {}\n            const labelProps = {}\n            return (\n              <Step key={label} {...stepProps} style={{ alignSelf: 'flex-start' }}>\n                <StepLabel {...labelProps}>{label}</StepLabel>\n                <CaseSummary step={index} />\n              </Step>\n            )\n          })}\n        </Stepper>\n      </Paper>\n\n      <div className={classes.main}>\n        <Paper elevation={0} style={{ padding: 10 }}>\n          <Grid container spacing={3}>\n            <Grid item container xs={12}>\n              {count === steps.length ? (\n                <div>\n                  <Typography className={classes.instructions}>All steps completed - you&apos;re finished</Typography>\n                  <Button onClick={handleReset} className={classes.button}>\n                    Reset\n                  </Button>\n                </div>\n              ) : (\n                <Grid\n                  item\n                  container\n                  direction=\"column\"\n                  justify=\"space-between\"\n                  alignItems=\"center\"\n                  className={classes.step}\n                >\n                  {getStepContent(count)}\n\n                  <div style={{ paddingTop: theme.spacing(2) }}>\n                    <Button disabled={count === 0} onClick={() => dispatch(previous())} className={classes.button}>\n                      {t('Back')}\n                    </Button>\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => dispatch(next())}\n                      className={classes.button}\n                      disabled={completedSteps.includes(count) ? false : true}\n                    >\n                      {count === steps.length - 1 ? t('Finish') : t('Next')}\n                    </Button>\n                  </div>\n                </Grid>\n              )}\n            </Grid>\n          </Grid>\n        </Paper>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport TranslateIcon from '@material-ui/icons/Translate'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport i18next from 'i18next'\n\nexport default function SimpleMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  const handleChooseLanguage = lang => {\n    i18next.changeLanguage(lang)\n    handleClose()\n  }\n\n  return (\n    <div>\n      <Button\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        startIcon={<TranslateIcon />}\n        endIcon={<ExpandMoreIcon />}\n        color=\"inherit\"\n      >\n        {i18next.language === 'en' ? 'English' : 'Español'}\n      </Button>\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={handleClose}>\n        <MenuItem value=\"en\" onClick={() => handleChooseLanguage('en')}>\n          English\n        </MenuItem>\n        <MenuItem value=\"es\" onClick={() => handleChooseLanguage('es')}>\n          Español\n        </MenuItem>\n      </Menu>\n    </div>\n  )\n}\n","import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport makeStyles from '@material-ui/core/styles/makeStyles'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport MenuBookIcon from '@material-ui/icons/MenuBook'\nimport AddBoxIcon from '@material-ui/icons/AddBox'\nimport { BrowserRouter as Router, Link, Route, Switch } from 'react-router-dom'\nimport { Learn } from './Learn'\nimport { Case } from './Case'\nimport UserMenu from './UserMenu'\nimport { useTranslation } from 'react-i18next'\nimport OpacityIcon from '@material-ui/icons/Opacity'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles({\n  toolbar: {\n    display: 'grid',\n    gridTemplateColumns: 'auto 1fr auto',\n    justifyItems: 'center',\n    justifyContent: 'space-between'\n  },\n  title: {\n    textAlign: 'left'\n  },\n  root: {\n    flexGrow: 1\n  }\n})\n\nexport const App = () => {\n  const classes = useStyles()\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <AppBar elevation={0}>\n          <Toolbar className={classes.toolbar}>\n            <div>\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                component={Link}\n                to={`${process.env.PUBLIC_URL}/learn`}\n                startIcon={<MenuBookIcon />}\n                color=\"inherit\"\n              >\n                {t('Learn')}\n              </Button>\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                component={Link}\n                to={`${process.env.PUBLIC_URL}/case`}\n                startIcon={<AddBoxIcon />}\n                color=\"inherit\"\n              >\n                {t('New Case')}\n              </Button>\n            </div>\n            <Grid container alignItems=\"center\" spacing={1} justify=\"center\">\n              <Grid item>\n                <OpacityIcon />\n              </Grid>\n              <Grid item>\n                <Typography variant=\"h6\">Poseidon Web alpha 0.1</Typography>\n              </Grid>\n            </Grid>\n            {/* <div className={classes.title}>\n              <Typography>\n              <OpacityIcon style={{position: 'relative', top: '8px'}} /> Poseidon Web alpha 0.1\n                </Typography>\n            </div> */}\n            <div>\n              <UserMenu />\n            </div>\n            {/* <ThemeSwitch /> */}\n          </Toolbar>\n        </AppBar>\n\n        <div>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`} component={Learn} />\n            <Route path={`${process.env.PUBLIC_URL}/learn`} component={Learn} />\n            <Route path={`${process.env.PUBLIC_URL}/case`} component={Case} />\n          </Switch>\n        </div>\n      </Router>\n    </div>\n  )\n}\n","import { App as AppComponent } from '../components/App'\nimport * as React from 'react'\nimport { CssBaseline, MuiThemeProvider as ThemeProvider } from '@material-ui/core'\nimport { theme } from '../theme/theme'\n\nexport const App = () => {\n  // This is the only place we need to access the theme via our own model\n  // From here on, it is safe and convenient to use the `useTheme` hook\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppComponent />\n    </ThemeProvider>\n  )\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport caseReducer from './case/caseSlice'\n\nexport default configureStore({\n  reducer: {\n    case: caseReducer\n  }\n})\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport { resources } from './translations'\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: 'en', // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n    // if you're using a language detector, do not define the lng option\n\n    interpolation: {\n      escapeValue: false // react already safes from xss\n    }\n  })\n\nexport default i18n\n","export const resources = {\n  es: {\n    translation: {\n      Learn: 'Aprendar',\n      'New Case': 'Nuevo caso',\n\n      'General Reference': 'Referencia general',\n      'Unit Processes': 'Procesos unitarios',\n      'Treatment Trains': 'Trenes de tratamiento',\n      'Case Studies': 'Estudios de caso',\n      'Water Qualities': 'Cualidades del agua',\n\n      Name: 'Nombre',\n      'Pollutant Removal Efficiencies [% removal]': 'Eficiencias de eliminación de contaminantes [% de eliminación]',\n      Turbidity: 'Turbidez',\n      Recovery: 'Recuperación',\n      'Evaluation Criteria': 'Criterios de evaluación',\n      'Useful Life [yrs]': 'Vida útil [años]',\n\n      reliability: 'fiabilidad',\n      'ease to upgrade': 'facilidad de actualización',\n      'adaptability to varying flow': 'adaptabilidad a la variabilidad del flujo',\n      'adaptability to varying quality': 'adaptabilidad a la variabilidad de la calidad',\n      'ease of O & M': 'facilidad de O & M',\n      'ease of construction': 'facilidad de construcción',\n      'ease of demonstration': 'facilidad de demostración',\n      'power demand': 'poder de demanda',\n      'chemical demand': 'demanda de químicos',\n      'odor generation': 'generación de olores',\n      'impact on ground water': 'impacto en aguas subterráneas',\n      'land requirements': 'requerimientos de suelo',\n      'cost of treatment': 'costo del tratamiento',\n      waste: 'residuo',\n\n      Search: 'Buscar en',\n      'Download CSV': 'Descargar CSV',\n      'View Columns': 'Ver columnas',\n      'Filter Table': 'Tabla de filtros',\n      'Rows per page': 'Rows per page',\n\n      Category: 'Categoría',\n      Title: 'Título',\n      Description: 'Descripción',\n      'Case Study': 'Estudio de caso',\n      Note: 'Nota',\n      Reference: 'Referencia',\n\n      'Community Information': 'Información Comunitaria',\n      'Input Quality': 'Introducir Calidad',\n      'End Use': 'Uso Final',\n      Quantity: 'Cantidad',\n      Personalize: 'Personalizar',\n      Finish: 'Terminar',\n      Next: 'Próximo',\n      Back: 'Volver',\n      'Case Overview': 'Resumen del Caso',\n      'Select the Country': 'seleccionar país',\n      'Select the Currency': 'seleccionar moneda',\n      'Land Cost': 'Costo del terreno',\n      'Electricity Cost': 'Costo de la electricidad',\n      'Personal Cost': 'Costo del personal',\n      'Discount Rate': 'Tasa de descuento',\n      Country: 'País',\n      Currency: 'Moneda',\n      'Select the Category': 'Seleccione la categoría',\n      'Water Quality Class': 'Categoría de calidad de agua',\n      'Average Quantity': 'Cantidad promedio',\n      day: 'día',\n\n      'Water Quality Indicators': 'Indicadores de calidad del agua',\n      'Number must be integer and between 1 and 1 million': 'El número debe ser entero y estar entre 1 y 1 millón',\n\n      input: 'entrada',\n      output: 'salida',\n\n      'Personalize Solutions': 'Personalizar soluciones'\n    }\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app'\nimport store from './app/store'\nimport { Provider } from 'react-redux'\nimport './app/i18n/i18n'\n\nconst Root = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nReactDOM.render(<Root />, document.getElementById('root'))\n"],"sourceRoot":""}